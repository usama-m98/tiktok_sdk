/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package seller_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Seller202309GetActiveShopsResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Seller202309GetActiveShopsResponseData{}

// Seller202309GetActiveShopsResponseData struct for Seller202309GetActiveShopsResponseData
type Seller202309GetActiveShopsResponseData struct {
    // The list of active shops that belong to the seller. Note: Local sellers only have 1 shop.
    Shops []Seller202309GetActiveShopsResponseDataShops `json:"shops,omitempty"`
}

// NewSeller202309GetActiveShopsResponseData instantiates a new Seller202309GetActiveShopsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeller202309GetActiveShopsResponseData() *Seller202309GetActiveShopsResponseData {
    this := Seller202309GetActiveShopsResponseData{}
    return &this
}

// NewSeller202309GetActiveShopsResponseDataWithDefaults instantiates a new Seller202309GetActiveShopsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeller202309GetActiveShopsResponseDataWithDefaults() *Seller202309GetActiveShopsResponseData {
    this := Seller202309GetActiveShopsResponseData{}
    return &this
}

// GetShops returns the Shops field value if set, zero value otherwise.
func (o *Seller202309GetActiveShopsResponseData) GetShops() []Seller202309GetActiveShopsResponseDataShops {
    if o == nil || utils.IsNil(o.Shops) {
        var ret []Seller202309GetActiveShopsResponseDataShops
        return ret
    }
    return o.Shops
}

// GetShopsOk returns a tuple with the Shops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Seller202309GetActiveShopsResponseData) GetShopsOk() ([]Seller202309GetActiveShopsResponseDataShops, bool) {
    if o == nil || utils.IsNil(o.Shops) {
        return nil, false
    }
    return o.Shops, true
}

// HasShops returns a boolean if a field has been set.
func (o *Seller202309GetActiveShopsResponseData) HasShops() bool {
    if o != nil && !utils.IsNil(o.Shops) {
        return true
    }

    return false
}

// SetShops gets a reference to the given []Seller202309GetActiveShopsResponseDataShops and assigns it to the Shops field.
func (o *Seller202309GetActiveShopsResponseData) SetShops(v []Seller202309GetActiveShopsResponseDataShops) {
    o.Shops = v
}

func (o Seller202309GetActiveShopsResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Seller202309GetActiveShopsResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Shops) {
        toSerialize["shops"] = o.Shops
    }
    return toSerialize, nil
}

type NullableSeller202309GetActiveShopsResponseData struct {
	value *Seller202309GetActiveShopsResponseData
	isSet bool
}

func (v NullableSeller202309GetActiveShopsResponseData) Get() *Seller202309GetActiveShopsResponseData {
	return v.value
}

func (v *NullableSeller202309GetActiveShopsResponseData) Set(val *Seller202309GetActiveShopsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableSeller202309GetActiveShopsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableSeller202309GetActiveShopsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeller202309GetActiveShopsResponseData(val *Seller202309GetActiveShopsResponseData) *NullableSeller202309GetActiveShopsResponseData {
	return &NullableSeller202309GetActiveShopsResponseData{value: val, isSet: true}
}

func (v NullableSeller202309GetActiveShopsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeller202309GetActiveShopsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


