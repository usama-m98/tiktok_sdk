/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fbt_v202408

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail{}

// Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail struct for Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail
type Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail struct {
    // The number of units available for sale.  Note:  The number does not include reserved units.
    AvailableQuantity *int32 `json:"available_quantity,omitempty"`
    // The number of units reserved for customer orders or return to supplier shipment.
    ReservedQuantity *int32 `json:"reserved_quantity,omitempty"`
    // The total number of units physically in the Fulfilled by TikTok warehouse, excluding those in transit. This total is the sum of `available_quantity`, `reserved_quantity`, and `unfulfillable_quantity`.
    TotalQuantity *int32 `json:"total_quantity,omitempty"`
    // The number of units that are currently unavailable for sale.
    UnfulfillableQuantity *int32 `json:"unfulfillable_quantity,omitempty"`
}

// NewFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail instantiates a new Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail() *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail {
    this := Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail{}
    return &this
}

// NewFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetailWithDefaults instantiates a new Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetailWithDefaults() *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail {
    this := Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail{}
    return &this
}

// GetAvailableQuantity returns the AvailableQuantity field value if set, zero value otherwise.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetAvailableQuantity() int32 {
    if o == nil || utils.IsNil(o.AvailableQuantity) {
        var ret int32
        return ret
    }
    return *o.AvailableQuantity
}

// GetAvailableQuantityOk returns a tuple with the AvailableQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetAvailableQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.AvailableQuantity) {
        return nil, false
    }
    return o.AvailableQuantity, true
}

// HasAvailableQuantity returns a boolean if a field has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) HasAvailableQuantity() bool {
    if o != nil && !utils.IsNil(o.AvailableQuantity) {
        return true
    }

    return false
}

// SetAvailableQuantity gets a reference to the given int32 and assigns it to the AvailableQuantity field.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) SetAvailableQuantity(v int32) {
    o.AvailableQuantity = &v
}

// GetReservedQuantity returns the ReservedQuantity field value if set, zero value otherwise.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetReservedQuantity() int32 {
    if o == nil || utils.IsNil(o.ReservedQuantity) {
        var ret int32
        return ret
    }
    return *o.ReservedQuantity
}

// GetReservedQuantityOk returns a tuple with the ReservedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetReservedQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.ReservedQuantity) {
        return nil, false
    }
    return o.ReservedQuantity, true
}

// HasReservedQuantity returns a boolean if a field has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) HasReservedQuantity() bool {
    if o != nil && !utils.IsNil(o.ReservedQuantity) {
        return true
    }

    return false
}

// SetReservedQuantity gets a reference to the given int32 and assigns it to the ReservedQuantity field.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) SetReservedQuantity(v int32) {
    o.ReservedQuantity = &v
}

// GetTotalQuantity returns the TotalQuantity field value if set, zero value otherwise.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetTotalQuantity() int32 {
    if o == nil || utils.IsNil(o.TotalQuantity) {
        var ret int32
        return ret
    }
    return *o.TotalQuantity
}

// GetTotalQuantityOk returns a tuple with the TotalQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetTotalQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.TotalQuantity) {
        return nil, false
    }
    return o.TotalQuantity, true
}

// HasTotalQuantity returns a boolean if a field has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) HasTotalQuantity() bool {
    if o != nil && !utils.IsNil(o.TotalQuantity) {
        return true
    }

    return false
}

// SetTotalQuantity gets a reference to the given int32 and assigns it to the TotalQuantity field.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) SetTotalQuantity(v int32) {
    o.TotalQuantity = &v
}

// GetUnfulfillableQuantity returns the UnfulfillableQuantity field value if set, zero value otherwise.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetUnfulfillableQuantity() int32 {
    if o == nil || utils.IsNil(o.UnfulfillableQuantity) {
        var ret int32
        return ret
    }
    return *o.UnfulfillableQuantity
}

// GetUnfulfillableQuantityOk returns a tuple with the UnfulfillableQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) GetUnfulfillableQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.UnfulfillableQuantity) {
        return nil, false
    }
    return o.UnfulfillableQuantity, true
}

// HasUnfulfillableQuantity returns a boolean if a field has been set.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) HasUnfulfillableQuantity() bool {
    if o != nil && !utils.IsNil(o.UnfulfillableQuantity) {
        return true
    }

    return false
}

// SetUnfulfillableQuantity gets a reference to the given int32 and assigns it to the UnfulfillableQuantity field.
func (o *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) SetUnfulfillableQuantity(v int32) {
    o.UnfulfillableQuantity = &v
}

func (o Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.AvailableQuantity) {
        toSerialize["available_quantity"] = o.AvailableQuantity
    }
    if !utils.IsNil(o.ReservedQuantity) {
        toSerialize["reserved_quantity"] = o.ReservedQuantity
    }
    if !utils.IsNil(o.TotalQuantity) {
        toSerialize["total_quantity"] = o.TotalQuantity
    }
    if !utils.IsNil(o.UnfulfillableQuantity) {
        toSerialize["unfulfillable_quantity"] = o.UnfulfillableQuantity
    }
    return toSerialize, nil
}

type NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail struct {
	value *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail
	isSet bool
}

func (v NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) Get() *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail {
	return v.value
}

func (v *NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) Set(val *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail(val *Fbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) *NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail {
	return &NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail{value: val, isSet: true}
}

func (v NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFbt202408SearchFBTInventoryResponseDataInventoryOnHandDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


