/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fbt_v202409

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Fbt202409SearchGoodsInfoRequestBody type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Fbt202409SearchGoodsInfoRequestBody{}

// Fbt202409SearchGoodsInfoRequestBody struct for Fbt202409SearchGoodsInfoRequestBody
type Fbt202409SearchGoodsInfoRequestBody struct {
    // Identifier for goods generated by Fulfilled by TikTok system, maximum length 100. Filter the goods information to display only those with specific goods IDs. Note: When `goods_ids`, `reference_codes`, `sku_ids`, or `product_ids` include two or more values, the result will return the intersection of the goods information. For example, if the input includes both `goods_ids` and `sku_ids`, it will return only the goods that meet both the `goods_ids` and `sku_ids` criteria. If requested with all criteria empty, it will return a `page_size` number of goods defined by the merchant, sorted by creation time, with the latest first.
    GoodsIds []string `json:"goods_ids,omitempty"`
    // Identifier for product generated by TikTok Shop system, maximum length 100. Filter the goods information to display only those with specific product IDs.
    ProductIds []string `json:"product_ids,omitempty"`
    // Identifier for goods defined by merchant, maximum length 100. Filter the goods information to display only those with specific reference codes.
    ReferenceCodes []string `json:"reference_codes,omitempty"`
    // Identifier for Stock Keeping Unit (SKU) generated by TikTok Shop system, maximum length 100. Filter the goods information to display only those with specific SKU IDs.
    SkuIds []string `json:"sku_ids,omitempty"`
}

// NewFbt202409SearchGoodsInfoRequestBody instantiates a new Fbt202409SearchGoodsInfoRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFbt202409SearchGoodsInfoRequestBody() *Fbt202409SearchGoodsInfoRequestBody {
    this := Fbt202409SearchGoodsInfoRequestBody{}
    return &this
}

// NewFbt202409SearchGoodsInfoRequestBodyWithDefaults instantiates a new Fbt202409SearchGoodsInfoRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFbt202409SearchGoodsInfoRequestBodyWithDefaults() *Fbt202409SearchGoodsInfoRequestBody {
    this := Fbt202409SearchGoodsInfoRequestBody{}
    return &this
}

// GetGoodsIds returns the GoodsIds field value if set, zero value otherwise.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetGoodsIds() []string {
    if o == nil || utils.IsNil(o.GoodsIds) {
        var ret []string
        return ret
    }
    return o.GoodsIds
}

// GetGoodsIdsOk returns a tuple with the GoodsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetGoodsIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.GoodsIds) {
        return nil, false
    }
    return o.GoodsIds, true
}

// HasGoodsIds returns a boolean if a field has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) HasGoodsIds() bool {
    if o != nil && !utils.IsNil(o.GoodsIds) {
        return true
    }

    return false
}

// SetGoodsIds gets a reference to the given []string and assigns it to the GoodsIds field.
func (o *Fbt202409SearchGoodsInfoRequestBody) SetGoodsIds(v []string) {
    o.GoodsIds = v
}

// GetProductIds returns the ProductIds field value if set, zero value otherwise.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetProductIds() []string {
    if o == nil || utils.IsNil(o.ProductIds) {
        var ret []string
        return ret
    }
    return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetProductIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ProductIds) {
        return nil, false
    }
    return o.ProductIds, true
}

// HasProductIds returns a boolean if a field has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) HasProductIds() bool {
    if o != nil && !utils.IsNil(o.ProductIds) {
        return true
    }

    return false
}

// SetProductIds gets a reference to the given []string and assigns it to the ProductIds field.
func (o *Fbt202409SearchGoodsInfoRequestBody) SetProductIds(v []string) {
    o.ProductIds = v
}

// GetReferenceCodes returns the ReferenceCodes field value if set, zero value otherwise.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetReferenceCodes() []string {
    if o == nil || utils.IsNil(o.ReferenceCodes) {
        var ret []string
        return ret
    }
    return o.ReferenceCodes
}

// GetReferenceCodesOk returns a tuple with the ReferenceCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetReferenceCodesOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ReferenceCodes) {
        return nil, false
    }
    return o.ReferenceCodes, true
}

// HasReferenceCodes returns a boolean if a field has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) HasReferenceCodes() bool {
    if o != nil && !utils.IsNil(o.ReferenceCodes) {
        return true
    }

    return false
}

// SetReferenceCodes gets a reference to the given []string and assigns it to the ReferenceCodes field.
func (o *Fbt202409SearchGoodsInfoRequestBody) SetReferenceCodes(v []string) {
    o.ReferenceCodes = v
}

// GetSkuIds returns the SkuIds field value if set, zero value otherwise.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetSkuIds() []string {
    if o == nil || utils.IsNil(o.SkuIds) {
        var ret []string
        return ret
    }
    return o.SkuIds
}

// GetSkuIdsOk returns a tuple with the SkuIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) GetSkuIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.SkuIds) {
        return nil, false
    }
    return o.SkuIds, true
}

// HasSkuIds returns a boolean if a field has been set.
func (o *Fbt202409SearchGoodsInfoRequestBody) HasSkuIds() bool {
    if o != nil && !utils.IsNil(o.SkuIds) {
        return true
    }

    return false
}

// SetSkuIds gets a reference to the given []string and assigns it to the SkuIds field.
func (o *Fbt202409SearchGoodsInfoRequestBody) SetSkuIds(v []string) {
    o.SkuIds = v
}

func (o Fbt202409SearchGoodsInfoRequestBody) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Fbt202409SearchGoodsInfoRequestBody) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.GoodsIds) {
        toSerialize["goods_ids"] = o.GoodsIds
    }
    if !utils.IsNil(o.ProductIds) {
        toSerialize["product_ids"] = o.ProductIds
    }
    if !utils.IsNil(o.ReferenceCodes) {
        toSerialize["reference_codes"] = o.ReferenceCodes
    }
    if !utils.IsNil(o.SkuIds) {
        toSerialize["sku_ids"] = o.SkuIds
    }
    return toSerialize, nil
}

type NullableFbt202409SearchGoodsInfoRequestBody struct {
	value *Fbt202409SearchGoodsInfoRequestBody
	isSet bool
}

func (v NullableFbt202409SearchGoodsInfoRequestBody) Get() *Fbt202409SearchGoodsInfoRequestBody {
	return v.value
}

func (v *NullableFbt202409SearchGoodsInfoRequestBody) Set(val *Fbt202409SearchGoodsInfoRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFbt202409SearchGoodsInfoRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFbt202409SearchGoodsInfoRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFbt202409SearchGoodsInfoRequestBody(val *Fbt202409SearchGoodsInfoRequestBody) *NullableFbt202409SearchGoodsInfoRequestBody {
	return &NullableFbt202409SearchGoodsInfoRequestBody{value: val, isSet: true}
}

func (v NullableFbt202409SearchGoodsInfoRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFbt202409SearchGoodsInfoRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


