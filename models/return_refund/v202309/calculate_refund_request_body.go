/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package return_refund_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the ReturnRefund202309CalculateRefundRequestBody type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ReturnRefund202309CalculateRefundRequestBody{}

// ReturnRefund202309CalculateRefundRequestBody struct for ReturnRefund202309CalculateRefundRequestBody
type ReturnRefund202309CalculateRefundRequestBody struct {
    // Which handover method buyer chooses to use when returning goods to seller by platform - DROP_OFF: buyer drops off the parcel in logistics service collect point. - PICKUP: logistics service picks up the buyer package.
    HandoverMethod *string `json:"handover_method,omitempty"`
    // TikTok Shop order id.
    OrderId *string `json:"order_id,omitempty"`
    // TikTok Shop order line item ids.
    OrderLineItemIds []string `json:"order_line_item_ids,omitempty"`
    // Seller's reason to create a returnï¼Œall available reasons, please reference to API overview.
    ReasonName *string `json:"reason_name,omitempty"`
    // Request type - CANCEL - REFUND - RETURN_AND_REFUND Note: different request types are used for different aftersales scenarios. Also, different request types might have different refund amounts, because the refund amount calculation policy is different.
    RequestType *string `json:"request_type,omitempty"`
    // How buyer ships items to seller when in a return request, could be: - PLATFORM - BUYER_ARRANGE
    ShipmentType *string `json:"shipment_type,omitempty"`
    // skus
    Skus []ReturnRefund202309CalculateRefundRequestBodySkus `json:"skus,omitempty"`
}

// NewReturnRefund202309CalculateRefundRequestBody instantiates a new ReturnRefund202309CalculateRefundRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnRefund202309CalculateRefundRequestBody() *ReturnRefund202309CalculateRefundRequestBody {
    this := ReturnRefund202309CalculateRefundRequestBody{}
    return &this
}

// NewReturnRefund202309CalculateRefundRequestBodyWithDefaults instantiates a new ReturnRefund202309CalculateRefundRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnRefund202309CalculateRefundRequestBodyWithDefaults() *ReturnRefund202309CalculateRefundRequestBody {
    this := ReturnRefund202309CalculateRefundRequestBody{}
    return &this
}

// GetHandoverMethod returns the HandoverMethod field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetHandoverMethod() string {
    if o == nil || utils.IsNil(o.HandoverMethod) {
        var ret string
        return ret
    }
    return *o.HandoverMethod
}

// GetHandoverMethodOk returns a tuple with the HandoverMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetHandoverMethodOk() (*string, bool) {
    if o == nil || utils.IsNil(o.HandoverMethod) {
        return nil, false
    }
    return o.HandoverMethod, true
}

// HasHandoverMethod returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasHandoverMethod() bool {
    if o != nil && !utils.IsNil(o.HandoverMethod) {
        return true
    }

    return false
}

// SetHandoverMethod gets a reference to the given string and assigns it to the HandoverMethod field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetHandoverMethod(v string) {
    o.HandoverMethod = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetOrderId() string {
    if o == nil || utils.IsNil(o.OrderId) {
        var ret string
        return ret
    }
    return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.OrderId) {
        return nil, false
    }
    return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasOrderId() bool {
    if o != nil && !utils.IsNil(o.OrderId) {
        return true
    }

    return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetOrderId(v string) {
    o.OrderId = &v
}

// GetOrderLineItemIds returns the OrderLineItemIds field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetOrderLineItemIds() []string {
    if o == nil || utils.IsNil(o.OrderLineItemIds) {
        var ret []string
        return ret
    }
    return o.OrderLineItemIds
}

// GetOrderLineItemIdsOk returns a tuple with the OrderLineItemIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetOrderLineItemIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OrderLineItemIds) {
        return nil, false
    }
    return o.OrderLineItemIds, true
}

// HasOrderLineItemIds returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasOrderLineItemIds() bool {
    if o != nil && !utils.IsNil(o.OrderLineItemIds) {
        return true
    }

    return false
}

// SetOrderLineItemIds gets a reference to the given []string and assigns it to the OrderLineItemIds field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetOrderLineItemIds(v []string) {
    o.OrderLineItemIds = v
}

// GetReasonName returns the ReasonName field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetReasonName() string {
    if o == nil || utils.IsNil(o.ReasonName) {
        var ret string
        return ret
    }
    return *o.ReasonName
}

// GetReasonNameOk returns a tuple with the ReasonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetReasonNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ReasonName) {
        return nil, false
    }
    return o.ReasonName, true
}

// HasReasonName returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasReasonName() bool {
    if o != nil && !utils.IsNil(o.ReasonName) {
        return true
    }

    return false
}

// SetReasonName gets a reference to the given string and assigns it to the ReasonName field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetReasonName(v string) {
    o.ReasonName = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetRequestType() string {
    if o == nil || utils.IsNil(o.RequestType) {
        var ret string
        return ret
    }
    return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetRequestTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RequestType) {
        return nil, false
    }
    return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasRequestType() bool {
    if o != nil && !utils.IsNil(o.RequestType) {
        return true
    }

    return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetRequestType(v string) {
    o.RequestType = &v
}

// GetShipmentType returns the ShipmentType field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetShipmentType() string {
    if o == nil || utils.IsNil(o.ShipmentType) {
        var ret string
        return ret
    }
    return *o.ShipmentType
}

// GetShipmentTypeOk returns a tuple with the ShipmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetShipmentTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ShipmentType) {
        return nil, false
    }
    return o.ShipmentType, true
}

// HasShipmentType returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasShipmentType() bool {
    if o != nil && !utils.IsNil(o.ShipmentType) {
        return true
    }

    return false
}

// SetShipmentType gets a reference to the given string and assigns it to the ShipmentType field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetShipmentType(v string) {
    o.ShipmentType = &v
}

// GetSkus returns the Skus field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetSkus() []ReturnRefund202309CalculateRefundRequestBodySkus {
    if o == nil || utils.IsNil(o.Skus) {
        var ret []ReturnRefund202309CalculateRefundRequestBodySkus
        return ret
    }
    return o.Skus
}

// GetSkusOk returns a tuple with the Skus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) GetSkusOk() ([]ReturnRefund202309CalculateRefundRequestBodySkus, bool) {
    if o == nil || utils.IsNil(o.Skus) {
        return nil, false
    }
    return o.Skus, true
}

// HasSkus returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundRequestBody) HasSkus() bool {
    if o != nil && !utils.IsNil(o.Skus) {
        return true
    }

    return false
}

// SetSkus gets a reference to the given []ReturnRefund202309CalculateRefundRequestBodySkus and assigns it to the Skus field.
func (o *ReturnRefund202309CalculateRefundRequestBody) SetSkus(v []ReturnRefund202309CalculateRefundRequestBodySkus) {
    o.Skus = v
}

func (o ReturnRefund202309CalculateRefundRequestBody) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o ReturnRefund202309CalculateRefundRequestBody) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.HandoverMethod) {
        toSerialize["handover_method"] = o.HandoverMethod
    }
    if !utils.IsNil(o.OrderId) {
        toSerialize["order_id"] = o.OrderId
    }
    if !utils.IsNil(o.OrderLineItemIds) {
        toSerialize["order_line_item_ids"] = o.OrderLineItemIds
    }
    if !utils.IsNil(o.ReasonName) {
        toSerialize["reason_name"] = o.ReasonName
    }
    if !utils.IsNil(o.RequestType) {
        toSerialize["request_type"] = o.RequestType
    }
    if !utils.IsNil(o.ShipmentType) {
        toSerialize["shipment_type"] = o.ShipmentType
    }
    if !utils.IsNil(o.Skus) {
        toSerialize["skus"] = o.Skus
    }
    return toSerialize, nil
}

type NullableReturnRefund202309CalculateRefundRequestBody struct {
	value *ReturnRefund202309CalculateRefundRequestBody
	isSet bool
}

func (v NullableReturnRefund202309CalculateRefundRequestBody) Get() *ReturnRefund202309CalculateRefundRequestBody {
	return v.value
}

func (v *NullableReturnRefund202309CalculateRefundRequestBody) Set(val *ReturnRefund202309CalculateRefundRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnRefund202309CalculateRefundRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnRefund202309CalculateRefundRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnRefund202309CalculateRefundRequestBody(val *ReturnRefund202309CalculateRefundRequestBody) *NullableReturnRefund202309CalculateRefundRequestBody {
	return &NullableReturnRefund202309CalculateRefundRequestBody{value: val, isSet: true}
}

func (v NullableReturnRefund202309CalculateRefundRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnRefund202309CalculateRefundRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


