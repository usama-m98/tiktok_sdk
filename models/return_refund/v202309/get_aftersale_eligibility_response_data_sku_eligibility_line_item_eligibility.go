/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package return_refund_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility{}

// ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility struct for ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility
type ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility struct {
    // Use this field to recognize whether an item is eligible for an aftersale request: - TRUE - FALSE
    Eligible *bool `json:"eligible,omitempty"`
    // The reason code for an ineligible aftersale request.
    IneligibleCode *int32 `json:"ineligible_code,omitempty"`
    // The reason for an ineligible aftersale request.
    IneligibleReason *string `json:"ineligible_reason,omitempty"`
    // IDs of order line items.
    OrderLineItemsIds []string `json:"order_line_items_ids,omitempty"`
    // Aftersale request type. Possible values: - CANCEL - RETURN - RETURN_AND_REFUND
    RequestType *string `json:"request_type,omitempty"`
}

// NewReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility instantiates a new ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility() *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility {
    this := ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility{}
    return &this
}

// NewReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibilityWithDefaults instantiates a new ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibilityWithDefaults() *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility {
    this := ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility{}
    return &this
}

// GetEligible returns the Eligible field value if set, zero value otherwise.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetEligible() bool {
    if o == nil || utils.IsNil(o.Eligible) {
        var ret bool
        return ret
    }
    return *o.Eligible
}

// GetEligibleOk returns a tuple with the Eligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetEligibleOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.Eligible) {
        return nil, false
    }
    return o.Eligible, true
}

// HasEligible returns a boolean if a field has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) HasEligible() bool {
    if o != nil && !utils.IsNil(o.Eligible) {
        return true
    }

    return false
}

// SetEligible gets a reference to the given bool and assigns it to the Eligible field.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) SetEligible(v bool) {
    o.Eligible = &v
}

// GetIneligibleCode returns the IneligibleCode field value if set, zero value otherwise.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetIneligibleCode() int32 {
    if o == nil || utils.IsNil(o.IneligibleCode) {
        var ret int32
        return ret
    }
    return *o.IneligibleCode
}

// GetIneligibleCodeOk returns a tuple with the IneligibleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetIneligibleCodeOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.IneligibleCode) {
        return nil, false
    }
    return o.IneligibleCode, true
}

// HasIneligibleCode returns a boolean if a field has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) HasIneligibleCode() bool {
    if o != nil && !utils.IsNil(o.IneligibleCode) {
        return true
    }

    return false
}

// SetIneligibleCode gets a reference to the given int32 and assigns it to the IneligibleCode field.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) SetIneligibleCode(v int32) {
    o.IneligibleCode = &v
}

// GetIneligibleReason returns the IneligibleReason field value if set, zero value otherwise.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetIneligibleReason() string {
    if o == nil || utils.IsNil(o.IneligibleReason) {
        var ret string
        return ret
    }
    return *o.IneligibleReason
}

// GetIneligibleReasonOk returns a tuple with the IneligibleReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetIneligibleReasonOk() (*string, bool) {
    if o == nil || utils.IsNil(o.IneligibleReason) {
        return nil, false
    }
    return o.IneligibleReason, true
}

// HasIneligibleReason returns a boolean if a field has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) HasIneligibleReason() bool {
    if o != nil && !utils.IsNil(o.IneligibleReason) {
        return true
    }

    return false
}

// SetIneligibleReason gets a reference to the given string and assigns it to the IneligibleReason field.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) SetIneligibleReason(v string) {
    o.IneligibleReason = &v
}

// GetOrderLineItemsIds returns the OrderLineItemsIds field value if set, zero value otherwise.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetOrderLineItemsIds() []string {
    if o == nil || utils.IsNil(o.OrderLineItemsIds) {
        var ret []string
        return ret
    }
    return o.OrderLineItemsIds
}

// GetOrderLineItemsIdsOk returns a tuple with the OrderLineItemsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetOrderLineItemsIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OrderLineItemsIds) {
        return nil, false
    }
    return o.OrderLineItemsIds, true
}

// HasOrderLineItemsIds returns a boolean if a field has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) HasOrderLineItemsIds() bool {
    if o != nil && !utils.IsNil(o.OrderLineItemsIds) {
        return true
    }

    return false
}

// SetOrderLineItemsIds gets a reference to the given []string and assigns it to the OrderLineItemsIds field.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) SetOrderLineItemsIds(v []string) {
    o.OrderLineItemsIds = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetRequestType() string {
    if o == nil || utils.IsNil(o.RequestType) {
        var ret string
        return ret
    }
    return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) GetRequestTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RequestType) {
        return nil, false
    }
    return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) HasRequestType() bool {
    if o != nil && !utils.IsNil(o.RequestType) {
        return true
    }

    return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) SetRequestType(v string) {
    o.RequestType = &v
}

func (o ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Eligible) {
        toSerialize["eligible"] = o.Eligible
    }
    if !utils.IsNil(o.IneligibleCode) {
        toSerialize["ineligible_code"] = o.IneligibleCode
    }
    if !utils.IsNil(o.IneligibleReason) {
        toSerialize["ineligible_reason"] = o.IneligibleReason
    }
    if !utils.IsNil(o.OrderLineItemsIds) {
        toSerialize["order_line_items_ids"] = o.OrderLineItemsIds
    }
    if !utils.IsNil(o.RequestType) {
        toSerialize["request_type"] = o.RequestType
    }
    return toSerialize, nil
}

type NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility struct {
	value *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility
	isSet bool
}

func (v NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) Get() *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility {
	return v.value
}

func (v *NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) Set(val *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility(val *ReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) *NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility {
	return &NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility{value: val, isSet: true}
}

func (v NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnRefund202309GetAftersaleEligibilityResponseDataSkuEligibilityLineItemEligibility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


