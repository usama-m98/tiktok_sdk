/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package return_refund_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the ReturnRefund202309SearchReturnsRequestBody type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ReturnRefund202309SearchReturnsRequestBody{}

// ReturnRefund202309SearchReturnsRequestBody struct for ReturnRefund202309SearchReturnsRequestBody
type ReturnRefund202309SearchReturnsRequestBody struct {
    // List of arbitration statuses.  Available values: - `IN_PROGRESS`: The TikTok Shop platform operator is processing arbitration. Platform may request additional information from the seller.   - `SUPPORT_BUYER`: The platform operator supports buyer. - `SUPPORT_SELLER`: The platform operator supports seller. - `CLOSED`: Arbitration is closed.
    ArbitrationStatus []string `json:"arbitration_status,omitempty"`
    // List of TikTok Shop buyer user IDs.
    BuyerUserIds []string `json:"buyer_user_ids,omitempty"`
    // Filter returns to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_le` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_le` is empty, `create_time_le` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.
    CreateTimeGe *int64 `json:"create_time_ge,omitempty"`
    // Filter returns to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.
    CreateTimeLt *int64 `json:"create_time_lt,omitempty"`
    // The BCP-47 locale codes for displaying the returns, delimited by commas. Default: `en` Refer to [Locale codes](678e3a47bae28f030a8c7523) for the list of supported locale codes.
    Locale *string `json:"locale,omitempty"`
    // List of TikTok Shop order IDs.
    OrderIds []string `json:"order_ids,omitempty"`
    // List of return IDs.
    ReturnIds []string `json:"return_ids,omitempty"`
    // List of return status. Available values: - `RETURN_OR_REFUND_REQUEST_PENDING`: Buyer has initiated a return or refund request. The request is pending review by seller or system.  - `REFUND_OR_RETURN_REQUEST_REJECT`: The return or refund request was rejected.  - `AWAITING_BUYER_SHIP`: The return request was approved. The seller is waiting for the buyer to ship the approved items to the seller. If the buyer doesn't ship the items to the seller before the deadline, the platform will close the request. - `BUYER_SHIPPED_ITEM`: Buyer has shipped the approved items to seller. - `REJECT_RECEIVE_PACKAGE`: Seller inspected the returned items and rejected the return request.  - `RETURN_OR_REFUND_REQUEST_SUCCESS`: The return/refund request was successful. The buyer will be refunded. - `RETURN_OR_REFUND_REQUEST_CANCEL`: The request has been cancelled by the buyer or system. - `RETURN_OR_REFUND_REQUEST_COMPLETE`: The return/refund was processed successfully. The buyer has been refunded. - `AWAITING_BUYER_RESPONSE`: Seller offer another return type to the buyer, and waiting buyer response. Seller proposed return type can check the `seller_proposed_return_type`.
    ReturnStatus []string `json:"return_status,omitempty"`
    // List of return types. Available values: - `REFUND` - `RETURN_AND_REFUND` - `REPLACEMENT`
    ReturnTypes []string `json:"return_types,omitempty"`
    // List of seller proposed return types. Available values: - `PARTIAL_REFUND`
    SellerProposedReturnType []string `json:"seller_proposed_return_type,omitempty"`
    // Filter returns to show only those that are updated on or after the specified date and time. Unix timestamp.  Note: `update_time_ge` and `update_time_le` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_le` is empty, `update_time_le` will default to the current time. - If `update_time_lt` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.
    UpdateTimeGe *int64 `json:"update_time_ge,omitempty"`
    // Filter returns to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.
    UpdateTimeLt *int64 `json:"update_time_lt,omitempty"`
}

// NewReturnRefund202309SearchReturnsRequestBody instantiates a new ReturnRefund202309SearchReturnsRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnRefund202309SearchReturnsRequestBody() *ReturnRefund202309SearchReturnsRequestBody {
    this := ReturnRefund202309SearchReturnsRequestBody{}
    return &this
}

// NewReturnRefund202309SearchReturnsRequestBodyWithDefaults instantiates a new ReturnRefund202309SearchReturnsRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnRefund202309SearchReturnsRequestBodyWithDefaults() *ReturnRefund202309SearchReturnsRequestBody {
    this := ReturnRefund202309SearchReturnsRequestBody{}
    return &this
}

// GetArbitrationStatus returns the ArbitrationStatus field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetArbitrationStatus() []string {
    if o == nil || utils.IsNil(o.ArbitrationStatus) {
        var ret []string
        return ret
    }
    return o.ArbitrationStatus
}

// GetArbitrationStatusOk returns a tuple with the ArbitrationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetArbitrationStatusOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ArbitrationStatus) {
        return nil, false
    }
    return o.ArbitrationStatus, true
}

// HasArbitrationStatus returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasArbitrationStatus() bool {
    if o != nil && !utils.IsNil(o.ArbitrationStatus) {
        return true
    }

    return false
}

// SetArbitrationStatus gets a reference to the given []string and assigns it to the ArbitrationStatus field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetArbitrationStatus(v []string) {
    o.ArbitrationStatus = v
}

// GetBuyerUserIds returns the BuyerUserIds field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetBuyerUserIds() []string {
    if o == nil || utils.IsNil(o.BuyerUserIds) {
        var ret []string
        return ret
    }
    return o.BuyerUserIds
}

// GetBuyerUserIdsOk returns a tuple with the BuyerUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetBuyerUserIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.BuyerUserIds) {
        return nil, false
    }
    return o.BuyerUserIds, true
}

// HasBuyerUserIds returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasBuyerUserIds() bool {
    if o != nil && !utils.IsNil(o.BuyerUserIds) {
        return true
    }

    return false
}

// SetBuyerUserIds gets a reference to the given []string and assigns it to the BuyerUserIds field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetBuyerUserIds(v []string) {
    o.BuyerUserIds = v
}

// GetCreateTimeGe returns the CreateTimeGe field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetCreateTimeGe() int64 {
    if o == nil || utils.IsNil(o.CreateTimeGe) {
        var ret int64
        return ret
    }
    return *o.CreateTimeGe
}

// GetCreateTimeGeOk returns a tuple with the CreateTimeGe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetCreateTimeGeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.CreateTimeGe) {
        return nil, false
    }
    return o.CreateTimeGe, true
}

// HasCreateTimeGe returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasCreateTimeGe() bool {
    if o != nil && !utils.IsNil(o.CreateTimeGe) {
        return true
    }

    return false
}

// SetCreateTimeGe gets a reference to the given int64 and assigns it to the CreateTimeGe field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetCreateTimeGe(v int64) {
    o.CreateTimeGe = &v
}

// GetCreateTimeLt returns the CreateTimeLt field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetCreateTimeLt() int64 {
    if o == nil || utils.IsNil(o.CreateTimeLt) {
        var ret int64
        return ret
    }
    return *o.CreateTimeLt
}

// GetCreateTimeLtOk returns a tuple with the CreateTimeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetCreateTimeLtOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.CreateTimeLt) {
        return nil, false
    }
    return o.CreateTimeLt, true
}

// HasCreateTimeLt returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasCreateTimeLt() bool {
    if o != nil && !utils.IsNil(o.CreateTimeLt) {
        return true
    }

    return false
}

// SetCreateTimeLt gets a reference to the given int64 and assigns it to the CreateTimeLt field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetCreateTimeLt(v int64) {
    o.CreateTimeLt = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetLocale() string {
    if o == nil || utils.IsNil(o.Locale) {
        var ret string
        return ret
    }
    return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetLocaleOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Locale) {
        return nil, false
    }
    return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasLocale() bool {
    if o != nil && !utils.IsNil(o.Locale) {
        return true
    }

    return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetLocale(v string) {
    o.Locale = &v
}

// GetOrderIds returns the OrderIds field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetOrderIds() []string {
    if o == nil || utils.IsNil(o.OrderIds) {
        var ret []string
        return ret
    }
    return o.OrderIds
}

// GetOrderIdsOk returns a tuple with the OrderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetOrderIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OrderIds) {
        return nil, false
    }
    return o.OrderIds, true
}

// HasOrderIds returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasOrderIds() bool {
    if o != nil && !utils.IsNil(o.OrderIds) {
        return true
    }

    return false
}

// SetOrderIds gets a reference to the given []string and assigns it to the OrderIds field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetOrderIds(v []string) {
    o.OrderIds = v
}

// GetReturnIds returns the ReturnIds field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnIds() []string {
    if o == nil || utils.IsNil(o.ReturnIds) {
        var ret []string
        return ret
    }
    return o.ReturnIds
}

// GetReturnIdsOk returns a tuple with the ReturnIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnIdsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ReturnIds) {
        return nil, false
    }
    return o.ReturnIds, true
}

// HasReturnIds returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasReturnIds() bool {
    if o != nil && !utils.IsNil(o.ReturnIds) {
        return true
    }

    return false
}

// SetReturnIds gets a reference to the given []string and assigns it to the ReturnIds field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetReturnIds(v []string) {
    o.ReturnIds = v
}

// GetReturnStatus returns the ReturnStatus field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnStatus() []string {
    if o == nil || utils.IsNil(o.ReturnStatus) {
        var ret []string
        return ret
    }
    return o.ReturnStatus
}

// GetReturnStatusOk returns a tuple with the ReturnStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnStatusOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ReturnStatus) {
        return nil, false
    }
    return o.ReturnStatus, true
}

// HasReturnStatus returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasReturnStatus() bool {
    if o != nil && !utils.IsNil(o.ReturnStatus) {
        return true
    }

    return false
}

// SetReturnStatus gets a reference to the given []string and assigns it to the ReturnStatus field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetReturnStatus(v []string) {
    o.ReturnStatus = v
}

// GetReturnTypes returns the ReturnTypes field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnTypes() []string {
    if o == nil || utils.IsNil(o.ReturnTypes) {
        var ret []string
        return ret
    }
    return o.ReturnTypes
}

// GetReturnTypesOk returns a tuple with the ReturnTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetReturnTypesOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ReturnTypes) {
        return nil, false
    }
    return o.ReturnTypes, true
}

// HasReturnTypes returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasReturnTypes() bool {
    if o != nil && !utils.IsNil(o.ReturnTypes) {
        return true
    }

    return false
}

// SetReturnTypes gets a reference to the given []string and assigns it to the ReturnTypes field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetReturnTypes(v []string) {
    o.ReturnTypes = v
}

// GetSellerProposedReturnType returns the SellerProposedReturnType field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetSellerProposedReturnType() []string {
    if o == nil || utils.IsNil(o.SellerProposedReturnType) {
        var ret []string
        return ret
    }
    return o.SellerProposedReturnType
}

// GetSellerProposedReturnTypeOk returns a tuple with the SellerProposedReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetSellerProposedReturnTypeOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.SellerProposedReturnType) {
        return nil, false
    }
    return o.SellerProposedReturnType, true
}

// HasSellerProposedReturnType returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasSellerProposedReturnType() bool {
    if o != nil && !utils.IsNil(o.SellerProposedReturnType) {
        return true
    }

    return false
}

// SetSellerProposedReturnType gets a reference to the given []string and assigns it to the SellerProposedReturnType field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetSellerProposedReturnType(v []string) {
    o.SellerProposedReturnType = v
}

// GetUpdateTimeGe returns the UpdateTimeGe field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetUpdateTimeGe() int64 {
    if o == nil || utils.IsNil(o.UpdateTimeGe) {
        var ret int64
        return ret
    }
    return *o.UpdateTimeGe
}

// GetUpdateTimeGeOk returns a tuple with the UpdateTimeGe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetUpdateTimeGeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.UpdateTimeGe) {
        return nil, false
    }
    return o.UpdateTimeGe, true
}

// HasUpdateTimeGe returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasUpdateTimeGe() bool {
    if o != nil && !utils.IsNil(o.UpdateTimeGe) {
        return true
    }

    return false
}

// SetUpdateTimeGe gets a reference to the given int64 and assigns it to the UpdateTimeGe field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetUpdateTimeGe(v int64) {
    o.UpdateTimeGe = &v
}

// GetUpdateTimeLt returns the UpdateTimeLt field value if set, zero value otherwise.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetUpdateTimeLt() int64 {
    if o == nil || utils.IsNil(o.UpdateTimeLt) {
        var ret int64
        return ret
    }
    return *o.UpdateTimeLt
}

// GetUpdateTimeLtOk returns a tuple with the UpdateTimeLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) GetUpdateTimeLtOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.UpdateTimeLt) {
        return nil, false
    }
    return o.UpdateTimeLt, true
}

// HasUpdateTimeLt returns a boolean if a field has been set.
func (o *ReturnRefund202309SearchReturnsRequestBody) HasUpdateTimeLt() bool {
    if o != nil && !utils.IsNil(o.UpdateTimeLt) {
        return true
    }

    return false
}

// SetUpdateTimeLt gets a reference to the given int64 and assigns it to the UpdateTimeLt field.
func (o *ReturnRefund202309SearchReturnsRequestBody) SetUpdateTimeLt(v int64) {
    o.UpdateTimeLt = &v
}

func (o ReturnRefund202309SearchReturnsRequestBody) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o ReturnRefund202309SearchReturnsRequestBody) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.ArbitrationStatus) {
        toSerialize["arbitration_status"] = o.ArbitrationStatus
    }
    if !utils.IsNil(o.BuyerUserIds) {
        toSerialize["buyer_user_ids"] = o.BuyerUserIds
    }
    if !utils.IsNil(o.CreateTimeGe) {
        toSerialize["create_time_ge"] = o.CreateTimeGe
    }
    if !utils.IsNil(o.CreateTimeLt) {
        toSerialize["create_time_lt"] = o.CreateTimeLt
    }
    if !utils.IsNil(o.Locale) {
        toSerialize["locale"] = o.Locale
    }
    if !utils.IsNil(o.OrderIds) {
        toSerialize["order_ids"] = o.OrderIds
    }
    if !utils.IsNil(o.ReturnIds) {
        toSerialize["return_ids"] = o.ReturnIds
    }
    if !utils.IsNil(o.ReturnStatus) {
        toSerialize["return_status"] = o.ReturnStatus
    }
    if !utils.IsNil(o.ReturnTypes) {
        toSerialize["return_types"] = o.ReturnTypes
    }
    if !utils.IsNil(o.SellerProposedReturnType) {
        toSerialize["seller_proposed_return_type"] = o.SellerProposedReturnType
    }
    if !utils.IsNil(o.UpdateTimeGe) {
        toSerialize["update_time_ge"] = o.UpdateTimeGe
    }
    if !utils.IsNil(o.UpdateTimeLt) {
        toSerialize["update_time_lt"] = o.UpdateTimeLt
    }
    return toSerialize, nil
}

type NullableReturnRefund202309SearchReturnsRequestBody struct {
	value *ReturnRefund202309SearchReturnsRequestBody
	isSet bool
}

func (v NullableReturnRefund202309SearchReturnsRequestBody) Get() *ReturnRefund202309SearchReturnsRequestBody {
	return v.value
}

func (v *NullableReturnRefund202309SearchReturnsRequestBody) Set(val *ReturnRefund202309SearchReturnsRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnRefund202309SearchReturnsRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnRefund202309SearchReturnsRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnRefund202309SearchReturnsRequestBody(val *ReturnRefund202309SearchReturnsRequestBody) *NullableReturnRefund202309SearchReturnsRequestBody {
	return &NullableReturnRefund202309SearchReturnsRequestBody{value: val, isSet: true}
}

func (v NullableReturnRefund202309SearchReturnsRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnRefund202309SearchReturnsRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


