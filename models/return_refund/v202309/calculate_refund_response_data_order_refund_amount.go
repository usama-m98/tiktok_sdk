/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package return_refund_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount{}

// ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount struct for ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount
type ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount struct {
    // Currency for payment.
    Currency *string `json:"currency,omitempty"`
    // Shipping fee refund to buyer.
    RefundShippingFee *string `json:"refund_shipping_fee,omitempty"`
    // Total price of item be returned.
    RefundSubtotal *string `json:"refund_subtotal,omitempty"`
    // Tax returned to buyer.
    RefundTax *string `json:"refund_tax,omitempty"`
    // Total amount refund to buyer.
    RefundTotal *string `json:"refund_total,omitempty"`
    // Retail delivery fee takes effect once platform GMV exceeds 500,000 USD, according to US Colorado states' compliance rules.
    RetailDeliveryFee *string `json:"retail_delivery_fee,omitempty"`
}

// NewReturnRefund202309CalculateRefundResponseDataOrderRefundAmount instantiates a new ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnRefund202309CalculateRefundResponseDataOrderRefundAmount() *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount {
    this := ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount{}
    return &this
}

// NewReturnRefund202309CalculateRefundResponseDataOrderRefundAmountWithDefaults instantiates a new ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnRefund202309CalculateRefundResponseDataOrderRefundAmountWithDefaults() *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount {
    this := ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount{}
    return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetCurrency(v string) {
    o.Currency = &v
}

// GetRefundShippingFee returns the RefundShippingFee field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundShippingFee() string {
    if o == nil || utils.IsNil(o.RefundShippingFee) {
        var ret string
        return ret
    }
    return *o.RefundShippingFee
}

// GetRefundShippingFeeOk returns a tuple with the RefundShippingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundShippingFeeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RefundShippingFee) {
        return nil, false
    }
    return o.RefundShippingFee, true
}

// HasRefundShippingFee returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasRefundShippingFee() bool {
    if o != nil && !utils.IsNil(o.RefundShippingFee) {
        return true
    }

    return false
}

// SetRefundShippingFee gets a reference to the given string and assigns it to the RefundShippingFee field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetRefundShippingFee(v string) {
    o.RefundShippingFee = &v
}

// GetRefundSubtotal returns the RefundSubtotal field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundSubtotal() string {
    if o == nil || utils.IsNil(o.RefundSubtotal) {
        var ret string
        return ret
    }
    return *o.RefundSubtotal
}

// GetRefundSubtotalOk returns a tuple with the RefundSubtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundSubtotalOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RefundSubtotal) {
        return nil, false
    }
    return o.RefundSubtotal, true
}

// HasRefundSubtotal returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasRefundSubtotal() bool {
    if o != nil && !utils.IsNil(o.RefundSubtotal) {
        return true
    }

    return false
}

// SetRefundSubtotal gets a reference to the given string and assigns it to the RefundSubtotal field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetRefundSubtotal(v string) {
    o.RefundSubtotal = &v
}

// GetRefundTax returns the RefundTax field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundTax() string {
    if o == nil || utils.IsNil(o.RefundTax) {
        var ret string
        return ret
    }
    return *o.RefundTax
}

// GetRefundTaxOk returns a tuple with the RefundTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundTaxOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RefundTax) {
        return nil, false
    }
    return o.RefundTax, true
}

// HasRefundTax returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasRefundTax() bool {
    if o != nil && !utils.IsNil(o.RefundTax) {
        return true
    }

    return false
}

// SetRefundTax gets a reference to the given string and assigns it to the RefundTax field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetRefundTax(v string) {
    o.RefundTax = &v
}

// GetRefundTotal returns the RefundTotal field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundTotal() string {
    if o == nil || utils.IsNil(o.RefundTotal) {
        var ret string
        return ret
    }
    return *o.RefundTotal
}

// GetRefundTotalOk returns a tuple with the RefundTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRefundTotalOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RefundTotal) {
        return nil, false
    }
    return o.RefundTotal, true
}

// HasRefundTotal returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasRefundTotal() bool {
    if o != nil && !utils.IsNil(o.RefundTotal) {
        return true
    }

    return false
}

// SetRefundTotal gets a reference to the given string and assigns it to the RefundTotal field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetRefundTotal(v string) {
    o.RefundTotal = &v
}

// GetRetailDeliveryFee returns the RetailDeliveryFee field value if set, zero value otherwise.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRetailDeliveryFee() string {
    if o == nil || utils.IsNil(o.RetailDeliveryFee) {
        var ret string
        return ret
    }
    return *o.RetailDeliveryFee
}

// GetRetailDeliveryFeeOk returns a tuple with the RetailDeliveryFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) GetRetailDeliveryFeeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RetailDeliveryFee) {
        return nil, false
    }
    return o.RetailDeliveryFee, true
}

// HasRetailDeliveryFee returns a boolean if a field has been set.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) HasRetailDeliveryFee() bool {
    if o != nil && !utils.IsNil(o.RetailDeliveryFee) {
        return true
    }

    return false
}

// SetRetailDeliveryFee gets a reference to the given string and assigns it to the RetailDeliveryFee field.
func (o *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) SetRetailDeliveryFee(v string) {
    o.RetailDeliveryFee = &v
}

func (o ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.RefundShippingFee) {
        toSerialize["refund_shipping_fee"] = o.RefundShippingFee
    }
    if !utils.IsNil(o.RefundSubtotal) {
        toSerialize["refund_subtotal"] = o.RefundSubtotal
    }
    if !utils.IsNil(o.RefundTax) {
        toSerialize["refund_tax"] = o.RefundTax
    }
    if !utils.IsNil(o.RefundTotal) {
        toSerialize["refund_total"] = o.RefundTotal
    }
    if !utils.IsNil(o.RetailDeliveryFee) {
        toSerialize["retail_delivery_fee"] = o.RetailDeliveryFee
    }
    return toSerialize, nil
}

type NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount struct {
	value *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount
	isSet bool
}

func (v NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) Get() *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount {
	return v.value
}

func (v *NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) Set(val *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount(val *ReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) *NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount {
	return &NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount{value: val, isSet: true}
}

func (v NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnRefund202309CalculateRefundResponseDataOrderRefundAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


