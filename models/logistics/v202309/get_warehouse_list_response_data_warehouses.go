/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logistics_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Logistics202309GetWarehouseListResponseDataWarehouses type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Logistics202309GetWarehouseListResponseDataWarehouses{}

// Logistics202309GetWarehouseListResponseDataWarehouses struct for Logistics202309GetWarehouseListResponseDataWarehouses
type Logistics202309GetWarehouseListResponseDataWarehouses struct {
    Address *Logistics202309GetWarehouseListResponseDataWarehousesAddress `json:"address,omitempty"`
    // Possible values: - ENABLED: All products in stock are available for sale. - DISABLED: All products in stock are unavailable for sale.  - RESTRICTED: The warehouse is either on \"holiday mode\" or \"order limit mode.\" All products in stock are unavailable for sale. -Holiday mode: When the seller cannot fulfill an order from a warehouse, the seller can turn on holiday mode for the warehouse in seller center.  - Order limit mode: When the seller violates TikTok Shop policies, TikTok Shop will limit the order volume that can be fulfilled by a warehouse.
    EffectStatus *string `json:"effect_status,omitempty"`
    // The warehouse ID, a unique and immutable primary key, used for all warehouse logistics.
    Id *string `json:"id,omitempty"`
    // The default warehouse.  If a product is listed with no designated warehouse, the default warehouse will be used.
    IsDefault *bool `json:"is_default,omitempty"`
    // Warehouse name. This name is not unique across the TikTok Shop system.
    Name *string `json:"name,omitempty"`
    // Possible values: - DOMESTIC_WAREHOUSE: The warehouse is in the same country as the target market and the seller. - CB_OVERSEA_WAREHOUSE: For cross-border sellers, a local warehouse in the target market.  - CB_DIRECT_SHIPPING_WAREHOUSE: For cross-border sellers, a warehouse in the seller's base country, e.g., Mainland China or Hong Kong.
    SubType *string `json:"sub_type,omitempty"`
    // Possible values: - SALES_WAREHOUSE: Warehouse for shipping products.   - RETURN_WAREHOUSE: Warehouse for receiving returned products.  You can have the same warehouse for both shipping and receiving returns, but they will have different warehouse IDs with the same address.
    Type *string `json:"type,omitempty"`
}

// NewLogistics202309GetWarehouseListResponseDataWarehouses instantiates a new Logistics202309GetWarehouseListResponseDataWarehouses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogistics202309GetWarehouseListResponseDataWarehouses() *Logistics202309GetWarehouseListResponseDataWarehouses {
    this := Logistics202309GetWarehouseListResponseDataWarehouses{}
    return &this
}

// NewLogistics202309GetWarehouseListResponseDataWarehousesWithDefaults instantiates a new Logistics202309GetWarehouseListResponseDataWarehouses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogistics202309GetWarehouseListResponseDataWarehousesWithDefaults() *Logistics202309GetWarehouseListResponseDataWarehouses {
    this := Logistics202309GetWarehouseListResponseDataWarehouses{}
    return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetAddress() Logistics202309GetWarehouseListResponseDataWarehousesAddress {
    if o == nil || utils.IsNil(o.Address) {
        var ret Logistics202309GetWarehouseListResponseDataWarehousesAddress
        return ret
    }
    return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetAddressOk() (*Logistics202309GetWarehouseListResponseDataWarehousesAddress, bool) {
    if o == nil || utils.IsNil(o.Address) {
        return nil, false
    }
    return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasAddress() bool {
    if o != nil && !utils.IsNil(o.Address) {
        return true
    }

    return false
}

// SetAddress gets a reference to the given Logistics202309GetWarehouseListResponseDataWarehousesAddress and assigns it to the Address field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetAddress(v Logistics202309GetWarehouseListResponseDataWarehousesAddress) {
    o.Address = &v
}

// GetEffectStatus returns the EffectStatus field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetEffectStatus() string {
    if o == nil || utils.IsNil(o.EffectStatus) {
        var ret string
        return ret
    }
    return *o.EffectStatus
}

// GetEffectStatusOk returns a tuple with the EffectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetEffectStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EffectStatus) {
        return nil, false
    }
    return o.EffectStatus, true
}

// HasEffectStatus returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasEffectStatus() bool {
    if o != nil && !utils.IsNil(o.EffectStatus) {
        return true
    }

    return false
}

// SetEffectStatus gets a reference to the given string and assigns it to the EffectStatus field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetEffectStatus(v string) {
    o.EffectStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetId(v string) {
    o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetIsDefault() bool {
    if o == nil || utils.IsNil(o.IsDefault) {
        var ret bool
        return ret
    }
    return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetIsDefaultOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsDefault) {
        return nil, false
    }
    return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasIsDefault() bool {
    if o != nil && !utils.IsNil(o.IsDefault) {
        return true
    }

    return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetIsDefault(v bool) {
    o.IsDefault = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetName(v string) {
    o.Name = &v
}

// GetSubType returns the SubType field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetSubType() string {
    if o == nil || utils.IsNil(o.SubType) {
        var ret string
        return ret
    }
    return *o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetSubTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SubType) {
        return nil, false
    }
    return o.SubType, true
}

// HasSubType returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasSubType() bool {
    if o != nil && !utils.IsNil(o.SubType) {
        return true
    }

    return false
}

// SetSubType gets a reference to the given string and assigns it to the SubType field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetSubType(v string) {
    o.SubType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetType() string {
    if o == nil || utils.IsNil(o.Type) {
        var ret string
        return ret
    }
    return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) GetTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Type) {
        return nil, false
    }
    return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) HasType() bool {
    if o != nil && !utils.IsNil(o.Type) {
        return true
    }

    return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Logistics202309GetWarehouseListResponseDataWarehouses) SetType(v string) {
    o.Type = &v
}

func (o Logistics202309GetWarehouseListResponseDataWarehouses) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Logistics202309GetWarehouseListResponseDataWarehouses) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Address) {
        toSerialize["address"] = o.Address
    }
    if !utils.IsNil(o.EffectStatus) {
        toSerialize["effect_status"] = o.EffectStatus
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsDefault) {
        toSerialize["is_default"] = o.IsDefault
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.SubType) {
        toSerialize["sub_type"] = o.SubType
    }
    if !utils.IsNil(o.Type) {
        toSerialize["type"] = o.Type
    }
    return toSerialize, nil
}

type NullableLogistics202309GetWarehouseListResponseDataWarehouses struct {
	value *Logistics202309GetWarehouseListResponseDataWarehouses
	isSet bool
}

func (v NullableLogistics202309GetWarehouseListResponseDataWarehouses) Get() *Logistics202309GetWarehouseListResponseDataWarehouses {
	return v.value
}

func (v *NullableLogistics202309GetWarehouseListResponseDataWarehouses) Set(val *Logistics202309GetWarehouseListResponseDataWarehouses) {
	v.value = val
	v.isSet = true
}

func (v NullableLogistics202309GetWarehouseListResponseDataWarehouses) IsSet() bool {
	return v.isSet
}

func (v *NullableLogistics202309GetWarehouseListResponseDataWarehouses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogistics202309GetWarehouseListResponseDataWarehouses(val *Logistics202309GetWarehouseListResponseDataWarehouses) *NullableLogistics202309GetWarehouseListResponseDataWarehouses {
	return &NullableLogistics202309GetWarehouseListResponseDataWarehouses{value: val, isSet: true}
}

func (v NullableLogistics202309GetWarehouseListResponseDataWarehouses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogistics202309GetWarehouseListResponseDataWarehouses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


