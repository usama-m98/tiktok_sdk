/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202507

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202507GetUnsettledTransactionsResponseDataTransactions type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202507GetUnsettledTransactionsResponseDataTransactions{}

// Finance202507GetUnsettledTransactionsResponseDataTransactions struct for Finance202507GetUnsettledTransactionsResponseDataTransactions
type Finance202507GetUnsettledTransactionsResponseDataTransactions struct {
    // The adjustment ID if the transaction is an adjustment. Each transaction can only be associated with an order ID or an adjustment ID.
    AdjustmentId *string `json:"adjustment_id,omitempty"`
    // The order ID associated with the adjustment, if any.
    AdjustmentOrderId *string `json:"adjustment_order_id,omitempty"`
    // The three-digit currency code in ISO 4217 format.
    Currency *string `json:"currency,omitempty"`
    // The estimated adjustment amount based on TikTok Shop policy.  Refer to `transactions.type` for the list of adjustment-related policies.
    EstAdjustmentAmount *string `json:"est_adjustment_amount,omitempty"`
    // The estimated total fees and taxes charged by TikTok Shop. Shipping-related costs are excluded. This is equivalent to the sum of all contributory amounts in `fee_tax_breakdown`.
    EstFeeTaxAmount *string `json:"est_fee_tax_amount,omitempty"`
    // The estimated revenue amount. This is equivalent to the sum of all amounts in `revenue_breakdown`.
    EstRevenueAmount *string `json:"est_revenue_amount,omitempty"`
    // The estimated settlement amount for the order. Formula: revenue_amount - shipping_cost_amount - fee_tax_amount - adjustment_amount
    EstSettlementAmount *string `json:"est_settlement_amount,omitempty"`
    // The estimated shipping costs, please note that when order hasn't been delivered, no complete shipping cost can be provided. This is equivalent to the sum of all contributory amounts in `shipping_cost_breakdown`.
    EstShippingCostAmount *string `json:"est_shipping_cost_amount,omitempty"`
    // Estimated settlement time for this transaction.  Possible return value: - x days after delivery: when order hasn't been delivered and only rough settlement policy been provided - Unix timestamp: when order has been delivered and detailed settlement time been calculated out
    EstimatedSettlement *string `json:"estimated_settlement,omitempty"`
    FeeTaxBreakdown *Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown `json:"fee_tax_breakdown,omitempty"`
    // The transaction ID.
    Id *string `json:"id,omitempty"`
    // The creation time of the order. Unix timestamp.
    OrderCreateTime *int64 `json:"order_create_time,omitempty"`
    // The delivery time of the order. Unix timestamp. if order hasn't been delivered, no data will be return
    OrderDeliveryTime *int64 `json:"order_delivery_time,omitempty"`
    // The order ID. Each transaction can only be associated with an order ID or an adjustment ID.
    OrderId *string `json:"order_id,omitempty"`
    RevenueBreakdown *Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown `json:"revenue_breakdown,omitempty"`
    ShippingCostBreakdown *Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown `json:"shipping_cost_breakdown,omitempty"`
    // The transaction status. Only supports `UNSETTLED`.
    Status *string `json:"status,omitempty"`
    // The transaction type. Standard transactions - `ORDER`: A transaction related to an order settlement. - If the transaction is an adjustment, it returns one of the following values: Platform-related adjustments - `CHARGE_BACK`: Charges returned to a payment card after a customer has successfully disputed an item on their account statement or transactions report. - `CUSTOMER_SERVICE_COMPENSATION`: Extra compensation or compensation paid to a customer after the after-sales period by customer service. - `DEDUCTIONS_INCURRED_BY_SELLER`: Deduction arising from customer dissatisfaction as a result of the seller's responsibility. This includes issues such as fraud, empty packages, items that do not match the product display page, or items of lower value than advertised. - `GMV_PAYMENT_FOR_ADS`: Amount used to pay for your advertisement if you are enabled \"auto pay ads with shop GMV\", or to pay for Tiktok Promote ads orders. - `PLATFORM_COMMISSION_ADJUSTMENT`: Adjustment when there are differences in the platform commission paid by the seller. - `PLATFORM_COMMISSION_COMPENSATION`: Compensation paid to the seller when there are differences in the platform commission paid by the seller. - `PLATFORM_PENALTY`: Penalty imposed for a violation of TikTok Shop policies (the corresponding amount has been deducted from the seller's account). For details, please refer to the email notification sent to the seller. - `PROMOTION_ADJUSTMENT`: Adjustment when a seller takes part in a platform promotion and there are differences between the promotion price and the actual amount paid by the seller. - `REBATE`: A discount on referral fees offered by TikTok Shop to eligible sellers. - `PLATFORM_COMPENSATION`: Compensation paid to the seller after the seller successfully appealed for a customer dispute. - `PLATFORM_REIMBURSEMENT`: Reimbursement paid by TikTok Shop for an order refunded under TikTok's refund without return policy (the seller is not responsible). Logistics-related adjustments - `FBT_WAREHOUSE_SERVICE_FEE`: Amount charged by TikTok Fulfillment Portal (Pipak) for warehousing-related bills incurred by the seller under the Fulfilled by TikTok (FBT) service. - `LOGISTICS_REIMBURSEMENT`: Reimbursement paid by TikTok Shop for an order refunded due to logistics-related issues (e.g. lost or damaged order). - `SHIPPING_FEE_ADJUSTMENT`: Adjustment when there are differences or mistakes with the shipping fee paid by the seller. - `SHIPPING_FEE_COMPENSATION`: Compensation given to sellers due to differences between the actual shipping fee and the pre-paid shipping fee. - `SHIPPING_FEE_REBATE`: Shipping fee rebate provided to the seller as part of their participation in a platform campaign. - `SAMPLE_SHIPPING_FEE`: Fees charged for sending samples using the TikTok logistics provider. Miscellaneous adjustments `OTHER_ADJUSTMENT`: Adjustment for other reasons.
    Type *string `json:"type,omitempty"`
    // reason for why transaction is pending for settlement
    UnsettledReason *string `json:"unsettled_reason,omitempty"`
}

// NewFinance202507GetUnsettledTransactionsResponseDataTransactions instantiates a new Finance202507GetUnsettledTransactionsResponseDataTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202507GetUnsettledTransactionsResponseDataTransactions() *Finance202507GetUnsettledTransactionsResponseDataTransactions {
    this := Finance202507GetUnsettledTransactionsResponseDataTransactions{}
    return &this
}

// NewFinance202507GetUnsettledTransactionsResponseDataTransactionsWithDefaults instantiates a new Finance202507GetUnsettledTransactionsResponseDataTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202507GetUnsettledTransactionsResponseDataTransactionsWithDefaults() *Finance202507GetUnsettledTransactionsResponseDataTransactions {
    this := Finance202507GetUnsettledTransactionsResponseDataTransactions{}
    return &this
}

// GetAdjustmentId returns the AdjustmentId field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetAdjustmentId() string {
    if o == nil || utils.IsNil(o.AdjustmentId) {
        var ret string
        return ret
    }
    return *o.AdjustmentId
}

// GetAdjustmentIdOk returns a tuple with the AdjustmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetAdjustmentIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AdjustmentId) {
        return nil, false
    }
    return o.AdjustmentId, true
}

// HasAdjustmentId returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasAdjustmentId() bool {
    if o != nil && !utils.IsNil(o.AdjustmentId) {
        return true
    }

    return false
}

// SetAdjustmentId gets a reference to the given string and assigns it to the AdjustmentId field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetAdjustmentId(v string) {
    o.AdjustmentId = &v
}

// GetAdjustmentOrderId returns the AdjustmentOrderId field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetAdjustmentOrderId() string {
    if o == nil || utils.IsNil(o.AdjustmentOrderId) {
        var ret string
        return ret
    }
    return *o.AdjustmentOrderId
}

// GetAdjustmentOrderIdOk returns a tuple with the AdjustmentOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetAdjustmentOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AdjustmentOrderId) {
        return nil, false
    }
    return o.AdjustmentOrderId, true
}

// HasAdjustmentOrderId returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasAdjustmentOrderId() bool {
    if o != nil && !utils.IsNil(o.AdjustmentOrderId) {
        return true
    }

    return false
}

// SetAdjustmentOrderId gets a reference to the given string and assigns it to the AdjustmentOrderId field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetAdjustmentOrderId(v string) {
    o.AdjustmentOrderId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetCurrency(v string) {
    o.Currency = &v
}

// GetEstAdjustmentAmount returns the EstAdjustmentAmount field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstAdjustmentAmount() string {
    if o == nil || utils.IsNil(o.EstAdjustmentAmount) {
        var ret string
        return ret
    }
    return *o.EstAdjustmentAmount
}

// GetEstAdjustmentAmountOk returns a tuple with the EstAdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstAdjustmentAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstAdjustmentAmount) {
        return nil, false
    }
    return o.EstAdjustmentAmount, true
}

// HasEstAdjustmentAmount returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstAdjustmentAmount() bool {
    if o != nil && !utils.IsNil(o.EstAdjustmentAmount) {
        return true
    }

    return false
}

// SetEstAdjustmentAmount gets a reference to the given string and assigns it to the EstAdjustmentAmount field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstAdjustmentAmount(v string) {
    o.EstAdjustmentAmount = &v
}

// GetEstFeeTaxAmount returns the EstFeeTaxAmount field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstFeeTaxAmount() string {
    if o == nil || utils.IsNil(o.EstFeeTaxAmount) {
        var ret string
        return ret
    }
    return *o.EstFeeTaxAmount
}

// GetEstFeeTaxAmountOk returns a tuple with the EstFeeTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstFeeTaxAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstFeeTaxAmount) {
        return nil, false
    }
    return o.EstFeeTaxAmount, true
}

// HasEstFeeTaxAmount returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstFeeTaxAmount() bool {
    if o != nil && !utils.IsNil(o.EstFeeTaxAmount) {
        return true
    }

    return false
}

// SetEstFeeTaxAmount gets a reference to the given string and assigns it to the EstFeeTaxAmount field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstFeeTaxAmount(v string) {
    o.EstFeeTaxAmount = &v
}

// GetEstRevenueAmount returns the EstRevenueAmount field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstRevenueAmount() string {
    if o == nil || utils.IsNil(o.EstRevenueAmount) {
        var ret string
        return ret
    }
    return *o.EstRevenueAmount
}

// GetEstRevenueAmountOk returns a tuple with the EstRevenueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstRevenueAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstRevenueAmount) {
        return nil, false
    }
    return o.EstRevenueAmount, true
}

// HasEstRevenueAmount returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstRevenueAmount() bool {
    if o != nil && !utils.IsNil(o.EstRevenueAmount) {
        return true
    }

    return false
}

// SetEstRevenueAmount gets a reference to the given string and assigns it to the EstRevenueAmount field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstRevenueAmount(v string) {
    o.EstRevenueAmount = &v
}

// GetEstSettlementAmount returns the EstSettlementAmount field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstSettlementAmount() string {
    if o == nil || utils.IsNil(o.EstSettlementAmount) {
        var ret string
        return ret
    }
    return *o.EstSettlementAmount
}

// GetEstSettlementAmountOk returns a tuple with the EstSettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstSettlementAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstSettlementAmount) {
        return nil, false
    }
    return o.EstSettlementAmount, true
}

// HasEstSettlementAmount returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstSettlementAmount() bool {
    if o != nil && !utils.IsNil(o.EstSettlementAmount) {
        return true
    }

    return false
}

// SetEstSettlementAmount gets a reference to the given string and assigns it to the EstSettlementAmount field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstSettlementAmount(v string) {
    o.EstSettlementAmount = &v
}

// GetEstShippingCostAmount returns the EstShippingCostAmount field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstShippingCostAmount() string {
    if o == nil || utils.IsNil(o.EstShippingCostAmount) {
        var ret string
        return ret
    }
    return *o.EstShippingCostAmount
}

// GetEstShippingCostAmountOk returns a tuple with the EstShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstShippingCostAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstShippingCostAmount) {
        return nil, false
    }
    return o.EstShippingCostAmount, true
}

// HasEstShippingCostAmount returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstShippingCostAmount() bool {
    if o != nil && !utils.IsNil(o.EstShippingCostAmount) {
        return true
    }

    return false
}

// SetEstShippingCostAmount gets a reference to the given string and assigns it to the EstShippingCostAmount field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstShippingCostAmount(v string) {
    o.EstShippingCostAmount = &v
}

// GetEstimatedSettlement returns the EstimatedSettlement field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstimatedSettlement() string {
    if o == nil || utils.IsNil(o.EstimatedSettlement) {
        var ret string
        return ret
    }
    return *o.EstimatedSettlement
}

// GetEstimatedSettlementOk returns a tuple with the EstimatedSettlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetEstimatedSettlementOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EstimatedSettlement) {
        return nil, false
    }
    return o.EstimatedSettlement, true
}

// HasEstimatedSettlement returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasEstimatedSettlement() bool {
    if o != nil && !utils.IsNil(o.EstimatedSettlement) {
        return true
    }

    return false
}

// SetEstimatedSettlement gets a reference to the given string and assigns it to the EstimatedSettlement field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetEstimatedSettlement(v string) {
    o.EstimatedSettlement = &v
}

// GetFeeTaxBreakdown returns the FeeTaxBreakdown field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetFeeTaxBreakdown() Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown {
    if o == nil || utils.IsNil(o.FeeTaxBreakdown) {
        var ret Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown
        return ret
    }
    return *o.FeeTaxBreakdown
}

// GetFeeTaxBreakdownOk returns a tuple with the FeeTaxBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetFeeTaxBreakdownOk() (*Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown, bool) {
    if o == nil || utils.IsNil(o.FeeTaxBreakdown) {
        return nil, false
    }
    return o.FeeTaxBreakdown, true
}

// HasFeeTaxBreakdown returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasFeeTaxBreakdown() bool {
    if o != nil && !utils.IsNil(o.FeeTaxBreakdown) {
        return true
    }

    return false
}

// SetFeeTaxBreakdown gets a reference to the given Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown and assigns it to the FeeTaxBreakdown field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetFeeTaxBreakdown(v Finance202507GetUnsettledTransactionsResponseDataTransactionsFeeTaxBreakdown) {
    o.FeeTaxBreakdown = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetId(v string) {
    o.Id = &v
}

// GetOrderCreateTime returns the OrderCreateTime field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderCreateTime() int64 {
    if o == nil || utils.IsNil(o.OrderCreateTime) {
        var ret int64
        return ret
    }
    return *o.OrderCreateTime
}

// GetOrderCreateTimeOk returns a tuple with the OrderCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderCreateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.OrderCreateTime) {
        return nil, false
    }
    return o.OrderCreateTime, true
}

// HasOrderCreateTime returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasOrderCreateTime() bool {
    if o != nil && !utils.IsNil(o.OrderCreateTime) {
        return true
    }

    return false
}

// SetOrderCreateTime gets a reference to the given int64 and assigns it to the OrderCreateTime field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetOrderCreateTime(v int64) {
    o.OrderCreateTime = &v
}

// GetOrderDeliveryTime returns the OrderDeliveryTime field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderDeliveryTime() int64 {
    if o == nil || utils.IsNil(o.OrderDeliveryTime) {
        var ret int64
        return ret
    }
    return *o.OrderDeliveryTime
}

// GetOrderDeliveryTimeOk returns a tuple with the OrderDeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderDeliveryTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.OrderDeliveryTime) {
        return nil, false
    }
    return o.OrderDeliveryTime, true
}

// HasOrderDeliveryTime returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasOrderDeliveryTime() bool {
    if o != nil && !utils.IsNil(o.OrderDeliveryTime) {
        return true
    }

    return false
}

// SetOrderDeliveryTime gets a reference to the given int64 and assigns it to the OrderDeliveryTime field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetOrderDeliveryTime(v int64) {
    o.OrderDeliveryTime = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderId() string {
    if o == nil || utils.IsNil(o.OrderId) {
        var ret string
        return ret
    }
    return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.OrderId) {
        return nil, false
    }
    return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasOrderId() bool {
    if o != nil && !utils.IsNil(o.OrderId) {
        return true
    }

    return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetOrderId(v string) {
    o.OrderId = &v
}

// GetRevenueBreakdown returns the RevenueBreakdown field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetRevenueBreakdown() Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown {
    if o == nil || utils.IsNil(o.RevenueBreakdown) {
        var ret Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown
        return ret
    }
    return *o.RevenueBreakdown
}

// GetRevenueBreakdownOk returns a tuple with the RevenueBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetRevenueBreakdownOk() (*Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown, bool) {
    if o == nil || utils.IsNil(o.RevenueBreakdown) {
        return nil, false
    }
    return o.RevenueBreakdown, true
}

// HasRevenueBreakdown returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasRevenueBreakdown() bool {
    if o != nil && !utils.IsNil(o.RevenueBreakdown) {
        return true
    }

    return false
}

// SetRevenueBreakdown gets a reference to the given Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown and assigns it to the RevenueBreakdown field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetRevenueBreakdown(v Finance202507GetUnsettledTransactionsResponseDataTransactionsRevenueBreakdown) {
    o.RevenueBreakdown = &v
}

// GetShippingCostBreakdown returns the ShippingCostBreakdown field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetShippingCostBreakdown() Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown {
    if o == nil || utils.IsNil(o.ShippingCostBreakdown) {
        var ret Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown
        return ret
    }
    return *o.ShippingCostBreakdown
}

// GetShippingCostBreakdownOk returns a tuple with the ShippingCostBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetShippingCostBreakdownOk() (*Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown, bool) {
    if o == nil || utils.IsNil(o.ShippingCostBreakdown) {
        return nil, false
    }
    return o.ShippingCostBreakdown, true
}

// HasShippingCostBreakdown returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasShippingCostBreakdown() bool {
    if o != nil && !utils.IsNil(o.ShippingCostBreakdown) {
        return true
    }

    return false
}

// SetShippingCostBreakdown gets a reference to the given Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown and assigns it to the ShippingCostBreakdown field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetShippingCostBreakdown(v Finance202507GetUnsettledTransactionsResponseDataTransactionsShippingCostBreakdown) {
    o.ShippingCostBreakdown = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetStatus(v string) {
    o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetType() string {
    if o == nil || utils.IsNil(o.Type) {
        var ret string
        return ret
    }
    return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Type) {
        return nil, false
    }
    return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasType() bool {
    if o != nil && !utils.IsNil(o.Type) {
        return true
    }

    return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetType(v string) {
    o.Type = &v
}

// GetUnsettledReason returns the UnsettledReason field value if set, zero value otherwise.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetUnsettledReason() string {
    if o == nil || utils.IsNil(o.UnsettledReason) {
        var ret string
        return ret
    }
    return *o.UnsettledReason
}

// GetUnsettledReasonOk returns a tuple with the UnsettledReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) GetUnsettledReasonOk() (*string, bool) {
    if o == nil || utils.IsNil(o.UnsettledReason) {
        return nil, false
    }
    return o.UnsettledReason, true
}

// HasUnsettledReason returns a boolean if a field has been set.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) HasUnsettledReason() bool {
    if o != nil && !utils.IsNil(o.UnsettledReason) {
        return true
    }

    return false
}

// SetUnsettledReason gets a reference to the given string and assigns it to the UnsettledReason field.
func (o *Finance202507GetUnsettledTransactionsResponseDataTransactions) SetUnsettledReason(v string) {
    o.UnsettledReason = &v
}

func (o Finance202507GetUnsettledTransactionsResponseDataTransactions) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202507GetUnsettledTransactionsResponseDataTransactions) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.AdjustmentId) {
        toSerialize["adjustment_id"] = o.AdjustmentId
    }
    if !utils.IsNil(o.AdjustmentOrderId) {
        toSerialize["adjustment_order_id"] = o.AdjustmentOrderId
    }
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.EstAdjustmentAmount) {
        toSerialize["est_adjustment_amount"] = o.EstAdjustmentAmount
    }
    if !utils.IsNil(o.EstFeeTaxAmount) {
        toSerialize["est_fee_tax_amount"] = o.EstFeeTaxAmount
    }
    if !utils.IsNil(o.EstRevenueAmount) {
        toSerialize["est_revenue_amount"] = o.EstRevenueAmount
    }
    if !utils.IsNil(o.EstSettlementAmount) {
        toSerialize["est_settlement_amount"] = o.EstSettlementAmount
    }
    if !utils.IsNil(o.EstShippingCostAmount) {
        toSerialize["est_shipping_cost_amount"] = o.EstShippingCostAmount
    }
    if !utils.IsNil(o.EstimatedSettlement) {
        toSerialize["estimated_settlement"] = o.EstimatedSettlement
    }
    if !utils.IsNil(o.FeeTaxBreakdown) {
        toSerialize["fee_tax_breakdown"] = o.FeeTaxBreakdown
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.OrderCreateTime) {
        toSerialize["order_create_time"] = o.OrderCreateTime
    }
    if !utils.IsNil(o.OrderDeliveryTime) {
        toSerialize["order_delivery_time"] = o.OrderDeliveryTime
    }
    if !utils.IsNil(o.OrderId) {
        toSerialize["order_id"] = o.OrderId
    }
    if !utils.IsNil(o.RevenueBreakdown) {
        toSerialize["revenue_breakdown"] = o.RevenueBreakdown
    }
    if !utils.IsNil(o.ShippingCostBreakdown) {
        toSerialize["shipping_cost_breakdown"] = o.ShippingCostBreakdown
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    if !utils.IsNil(o.Type) {
        toSerialize["type"] = o.Type
    }
    if !utils.IsNil(o.UnsettledReason) {
        toSerialize["unsettled_reason"] = o.UnsettledReason
    }
    return toSerialize, nil
}

type NullableFinance202507GetUnsettledTransactionsResponseDataTransactions struct {
	value *Finance202507GetUnsettledTransactionsResponseDataTransactions
	isSet bool
}

func (v NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) Get() *Finance202507GetUnsettledTransactionsResponseDataTransactions {
	return v.value
}

func (v *NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) Set(val *Finance202507GetUnsettledTransactionsResponseDataTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202507GetUnsettledTransactionsResponseDataTransactions(val *Finance202507GetUnsettledTransactionsResponseDataTransactions) *NullableFinance202507GetUnsettledTransactionsResponseDataTransactions {
	return &NullableFinance202507GetUnsettledTransactionsResponseDataTransactions{value: val, isSet: true}
}

func (v NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202507GetUnsettledTransactionsResponseDataTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


