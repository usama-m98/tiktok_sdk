/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202309GetPaymentsResponseDataPayments type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202309GetPaymentsResponseDataPayments{}

// Finance202309GetPaymentsResponseDataPayments struct for Finance202309GetPaymentsResponseDataPayments
type Finance202309GetPaymentsResponseDataPayments struct {
    Amount *Finance202309GetPaymentsResponseDataPaymentsAmount `json:"amount,omitempty"`
    // The seller's bank account number masked, revealing only the last 4 digits for privacy.
    BankAccount *string `json:"bank_account,omitempty"`
    // The time when the payment was initiated in TikTok Shop. Unix timestamp.
    CreateTime *int64 `json:"create_time,omitempty"`
    // The exchange rate, displayed with six decimal places.
    ExchangeRate *string `json:"exchange_rate,omitempty"`
    // The payment ID.
    Id *string `json:"id,omitempty"`
    // The time when the payment was successfully processed. Unix timestamp.
    PaidTime *int64 `json:"paid_time,omitempty"`
    PaymentAmountBeforeExchange *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange `json:"payment_amount_before_exchange,omitempty"`
    ReserveAmount *Finance202309GetPaymentsResponseDataPaymentsReserveAmount `json:"reserve_amount,omitempty"`
    SettlementAmount *Finance202309GetPaymentsResponseDataPaymentsSettlementAmount `json:"settlement_amount,omitempty"`
    // The payment status, indicating whether payment has been transferred to the seller's bank account. Possible values: - PAID: Payment has been transferred to the seller. - FAILED: Payment transfer failed. - PROCESSING: Payment is currently being processed.
    Status *string `json:"status,omitempty"`
}

// NewFinance202309GetPaymentsResponseDataPayments instantiates a new Finance202309GetPaymentsResponseDataPayments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202309GetPaymentsResponseDataPayments() *Finance202309GetPaymentsResponseDataPayments {
    this := Finance202309GetPaymentsResponseDataPayments{}
    return &this
}

// NewFinance202309GetPaymentsResponseDataPaymentsWithDefaults instantiates a new Finance202309GetPaymentsResponseDataPayments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202309GetPaymentsResponseDataPaymentsWithDefaults() *Finance202309GetPaymentsResponseDataPayments {
    this := Finance202309GetPaymentsResponseDataPayments{}
    return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetAmount() Finance202309GetPaymentsResponseDataPaymentsAmount {
    if o == nil || utils.IsNil(o.Amount) {
        var ret Finance202309GetPaymentsResponseDataPaymentsAmount
        return ret
    }
    return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetAmountOk() (*Finance202309GetPaymentsResponseDataPaymentsAmount, bool) {
    if o == nil || utils.IsNil(o.Amount) {
        return nil, false
    }
    return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasAmount() bool {
    if o != nil && !utils.IsNil(o.Amount) {
        return true
    }

    return false
}

// SetAmount gets a reference to the given Finance202309GetPaymentsResponseDataPaymentsAmount and assigns it to the Amount field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetAmount(v Finance202309GetPaymentsResponseDataPaymentsAmount) {
    o.Amount = &v
}

// GetBankAccount returns the BankAccount field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetBankAccount() string {
    if o == nil || utils.IsNil(o.BankAccount) {
        var ret string
        return ret
    }
    return *o.BankAccount
}

// GetBankAccountOk returns a tuple with the BankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetBankAccountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.BankAccount) {
        return nil, false
    }
    return o.BankAccount, true
}

// HasBankAccount returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasBankAccount() bool {
    if o != nil && !utils.IsNil(o.BankAccount) {
        return true
    }

    return false
}

// SetBankAccount gets a reference to the given string and assigns it to the BankAccount field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetBankAccount(v string) {
    o.BankAccount = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetCreateTime() int64 {
    if o == nil || utils.IsNil(o.CreateTime) {
        var ret int64
        return ret
    }
    return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetCreateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.CreateTime) {
        return nil, false
    }
    return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasCreateTime() bool {
    if o != nil && !utils.IsNil(o.CreateTime) {
        return true
    }

    return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetCreateTime(v int64) {
    o.CreateTime = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetExchangeRate() string {
    if o == nil || utils.IsNil(o.ExchangeRate) {
        var ret string
        return ret
    }
    return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetExchangeRateOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ExchangeRate) {
        return nil, false
    }
    return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasExchangeRate() bool {
    if o != nil && !utils.IsNil(o.ExchangeRate) {
        return true
    }

    return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetExchangeRate(v string) {
    o.ExchangeRate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetId(v string) {
    o.Id = &v
}

// GetPaidTime returns the PaidTime field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetPaidTime() int64 {
    if o == nil || utils.IsNil(o.PaidTime) {
        var ret int64
        return ret
    }
    return *o.PaidTime
}

// GetPaidTimeOk returns a tuple with the PaidTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetPaidTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.PaidTime) {
        return nil, false
    }
    return o.PaidTime, true
}

// HasPaidTime returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasPaidTime() bool {
    if o != nil && !utils.IsNil(o.PaidTime) {
        return true
    }

    return false
}

// SetPaidTime gets a reference to the given int64 and assigns it to the PaidTime field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetPaidTime(v int64) {
    o.PaidTime = &v
}

// GetPaymentAmountBeforeExchange returns the PaymentAmountBeforeExchange field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetPaymentAmountBeforeExchange() Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange {
    if o == nil || utils.IsNil(o.PaymentAmountBeforeExchange) {
        var ret Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange
        return ret
    }
    return *o.PaymentAmountBeforeExchange
}

// GetPaymentAmountBeforeExchangeOk returns a tuple with the PaymentAmountBeforeExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetPaymentAmountBeforeExchangeOk() (*Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange, bool) {
    if o == nil || utils.IsNil(o.PaymentAmountBeforeExchange) {
        return nil, false
    }
    return o.PaymentAmountBeforeExchange, true
}

// HasPaymentAmountBeforeExchange returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasPaymentAmountBeforeExchange() bool {
    if o != nil && !utils.IsNil(o.PaymentAmountBeforeExchange) {
        return true
    }

    return false
}

// SetPaymentAmountBeforeExchange gets a reference to the given Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange and assigns it to the PaymentAmountBeforeExchange field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetPaymentAmountBeforeExchange(v Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) {
    o.PaymentAmountBeforeExchange = &v
}

// GetReserveAmount returns the ReserveAmount field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetReserveAmount() Finance202309GetPaymentsResponseDataPaymentsReserveAmount {
    if o == nil || utils.IsNil(o.ReserveAmount) {
        var ret Finance202309GetPaymentsResponseDataPaymentsReserveAmount
        return ret
    }
    return *o.ReserveAmount
}

// GetReserveAmountOk returns a tuple with the ReserveAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetReserveAmountOk() (*Finance202309GetPaymentsResponseDataPaymentsReserveAmount, bool) {
    if o == nil || utils.IsNil(o.ReserveAmount) {
        return nil, false
    }
    return o.ReserveAmount, true
}

// HasReserveAmount returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasReserveAmount() bool {
    if o != nil && !utils.IsNil(o.ReserveAmount) {
        return true
    }

    return false
}

// SetReserveAmount gets a reference to the given Finance202309GetPaymentsResponseDataPaymentsReserveAmount and assigns it to the ReserveAmount field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetReserveAmount(v Finance202309GetPaymentsResponseDataPaymentsReserveAmount) {
    o.ReserveAmount = &v
}

// GetSettlementAmount returns the SettlementAmount field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetSettlementAmount() Finance202309GetPaymentsResponseDataPaymentsSettlementAmount {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        var ret Finance202309GetPaymentsResponseDataPaymentsSettlementAmount
        return ret
    }
    return *o.SettlementAmount
}

// GetSettlementAmountOk returns a tuple with the SettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetSettlementAmountOk() (*Finance202309GetPaymentsResponseDataPaymentsSettlementAmount, bool) {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        return nil, false
    }
    return o.SettlementAmount, true
}

// HasSettlementAmount returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasSettlementAmount() bool {
    if o != nil && !utils.IsNil(o.SettlementAmount) {
        return true
    }

    return false
}

// SetSettlementAmount gets a reference to the given Finance202309GetPaymentsResponseDataPaymentsSettlementAmount and assigns it to the SettlementAmount field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetSettlementAmount(v Finance202309GetPaymentsResponseDataPaymentsSettlementAmount) {
    o.SettlementAmount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPayments) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPayments) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Finance202309GetPaymentsResponseDataPayments) SetStatus(v string) {
    o.Status = &v
}

func (o Finance202309GetPaymentsResponseDataPayments) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202309GetPaymentsResponseDataPayments) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Amount) {
        toSerialize["amount"] = o.Amount
    }
    if !utils.IsNil(o.BankAccount) {
        toSerialize["bank_account"] = o.BankAccount
    }
    if !utils.IsNil(o.CreateTime) {
        toSerialize["create_time"] = o.CreateTime
    }
    if !utils.IsNil(o.ExchangeRate) {
        toSerialize["exchange_rate"] = o.ExchangeRate
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.PaidTime) {
        toSerialize["paid_time"] = o.PaidTime
    }
    if !utils.IsNil(o.PaymentAmountBeforeExchange) {
        toSerialize["payment_amount_before_exchange"] = o.PaymentAmountBeforeExchange
    }
    if !utils.IsNil(o.ReserveAmount) {
        toSerialize["reserve_amount"] = o.ReserveAmount
    }
    if !utils.IsNil(o.SettlementAmount) {
        toSerialize["settlement_amount"] = o.SettlementAmount
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    return toSerialize, nil
}

type NullableFinance202309GetPaymentsResponseDataPayments struct {
	value *Finance202309GetPaymentsResponseDataPayments
	isSet bool
}

func (v NullableFinance202309GetPaymentsResponseDataPayments) Get() *Finance202309GetPaymentsResponseDataPayments {
	return v.value
}

func (v *NullableFinance202309GetPaymentsResponseDataPayments) Set(val *Finance202309GetPaymentsResponseDataPayments) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202309GetPaymentsResponseDataPayments) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202309GetPaymentsResponseDataPayments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202309GetPaymentsResponseDataPayments(val *Finance202309GetPaymentsResponseDataPayments) *NullableFinance202309GetPaymentsResponseDataPayments {
	return &NullableFinance202309GetPaymentsResponseDataPayments{value: val, isSet: true}
}

func (v NullableFinance202309GetPaymentsResponseDataPayments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202309GetPaymentsResponseDataPayments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


