/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange{}

// Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange struct for Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange
type Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange struct {
    // The original currency code in ISO 4217 format.
    Currency *string `json:"currency,omitempty"`
    // The original payment amount. 
    Value *string `json:"value,omitempty"`
}

// NewFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange instantiates a new Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange() *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange {
    this := Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange{}
    return &this
}

// NewFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchangeWithDefaults instantiates a new Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchangeWithDefaults() *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange {
    this := Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange{}
    return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) SetCurrency(v string) {
    o.Currency = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) GetValue() string {
    if o == nil || utils.IsNil(o.Value) {
        var ret string
        return ret
    }
    return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) GetValueOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Value) {
        return nil, false
    }
    return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) HasValue() bool {
    if o != nil && !utils.IsNil(o.Value) {
        return true
    }

    return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) SetValue(v string) {
    o.Value = &v
}

func (o Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.Value) {
        toSerialize["value"] = o.Value
    }
    return toSerialize, nil
}

type NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange struct {
	value *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange
	isSet bool
}

func (v NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) Get() *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange {
	return v.value
}

func (v *NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) Set(val *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange(val *Finance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) *NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange {
	return &NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange{value: val, isSet: true}
}

func (v NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202309GetPaymentsResponseDataPaymentsPaymentAmountBeforeExchange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


