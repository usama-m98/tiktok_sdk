/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202309GetTransactionsbyStatementResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202309GetTransactionsbyStatementResponseData{}

// Finance202309GetTransactionsbyStatementResponseData struct for Finance202309GetTransactionsbyStatementResponseData
type Finance202309GetTransactionsbyStatementResponseData struct {
    // The total amount calculated by the platform when the order fees need to be changed, the specific adjustment type will be shown in fields type
    AdjustmentAmount *string `json:"adjustment_amount,omitempty"`
    // The three-digit currency code in ISO 4217 format.   
    Currency *string `json:"currency,omitempty"`
    // The fees calculated by the platform when the order meets the settlement rules (the order is settled 3 to 15 days after it is delivered with no return/refund ongoing). For UK and US Local Sellers, this amount already excludes shipping related costs.
    FeeAmount *string `json:"fee_amount,omitempty"`
    // Used for US, UK L2L sellers only. The total revenue with any applicable seller discounts deducted.   net_sales_amount = gross_sales_amount + gross_sales_refund_amount + seller_discount_amount + seller_discount_refund_amount
    NetSalesAmount *string `json:"net_sales_amount,omitempty"`
    // Cursor used for searching for more information
    NextPageToken *string `json:"next_page_token,omitempty"`
    // The total earnings calculated by the platform at the time the order was paid
    RevenueAmount *string `json:"revenue_amount,omitempty"`
    // The total settlement amount of the statement settlement_amount = revenue_amount + fee_amount + adjustment_amount For UK and US Local Sellers: settlement_amount=net_sales_amount+shipping_cost_amount+fee_amount + adjustment_amount
    SettlementAmount *string `json:"settlement_amount,omitempty"`
    // Only for UK and US Local Sellers, represents the total fees related to shipping. Equates to fbm_shipping_cost_amount + fbt_shipping_cost_amount + signature_confirmation_fee_amount + customer_paid_shipping_fee_amount + customer_paid_shipping_fee_refund_amount + shipping_cost_discount_amount + refund_shipping_cost_discount_amount + shipping_fee_subsidy_amount + return_shipping_fee_amount + shipping_insurance_amount + customer_shipping_fee_offset_amount + fbt_fulfillment_fee_amount + promo_shipping_incentive_amount
    ShippingCostAmount *string `json:"shipping_cost_amount,omitempty"`
    // The unique ID of statement
    StatementId *string `json:"statement_id,omitempty"`
    // Time of statement in UTC time zone
    StatementTime *int64 `json:"statement_time,omitempty"`
    // Statement list
    StatementTransactions []Finance202309GetTransactionsbyStatementResponseDataStatementTransactions `json:"statement_transactions,omitempty"`
    // The number of transaction records
    TotalCount *int32 `json:"total_count,omitempty"`
}

// NewFinance202309GetTransactionsbyStatementResponseData instantiates a new Finance202309GetTransactionsbyStatementResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202309GetTransactionsbyStatementResponseData() *Finance202309GetTransactionsbyStatementResponseData {
    this := Finance202309GetTransactionsbyStatementResponseData{}
    return &this
}

// NewFinance202309GetTransactionsbyStatementResponseDataWithDefaults instantiates a new Finance202309GetTransactionsbyStatementResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202309GetTransactionsbyStatementResponseDataWithDefaults() *Finance202309GetTransactionsbyStatementResponseData {
    this := Finance202309GetTransactionsbyStatementResponseData{}
    return &this
}

// GetAdjustmentAmount returns the AdjustmentAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetAdjustmentAmount() string {
    if o == nil || utils.IsNil(o.AdjustmentAmount) {
        var ret string
        return ret
    }
    return *o.AdjustmentAmount
}

// GetAdjustmentAmountOk returns a tuple with the AdjustmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetAdjustmentAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AdjustmentAmount) {
        return nil, false
    }
    return o.AdjustmentAmount, true
}

// HasAdjustmentAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasAdjustmentAmount() bool {
    if o != nil && !utils.IsNil(o.AdjustmentAmount) {
        return true
    }

    return false
}

// SetAdjustmentAmount gets a reference to the given string and assigns it to the AdjustmentAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetAdjustmentAmount(v string) {
    o.AdjustmentAmount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetCurrency(v string) {
    o.Currency = &v
}

// GetFeeAmount returns the FeeAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetFeeAmount() string {
    if o == nil || utils.IsNil(o.FeeAmount) {
        var ret string
        return ret
    }
    return *o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetFeeAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.FeeAmount) {
        return nil, false
    }
    return o.FeeAmount, true
}

// HasFeeAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasFeeAmount() bool {
    if o != nil && !utils.IsNil(o.FeeAmount) {
        return true
    }

    return false
}

// SetFeeAmount gets a reference to the given string and assigns it to the FeeAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetFeeAmount(v string) {
    o.FeeAmount = &v
}

// GetNetSalesAmount returns the NetSalesAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetNetSalesAmount() string {
    if o == nil || utils.IsNil(o.NetSalesAmount) {
        var ret string
        return ret
    }
    return *o.NetSalesAmount
}

// GetNetSalesAmountOk returns a tuple with the NetSalesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetNetSalesAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.NetSalesAmount) {
        return nil, false
    }
    return o.NetSalesAmount, true
}

// HasNetSalesAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasNetSalesAmount() bool {
    if o != nil && !utils.IsNil(o.NetSalesAmount) {
        return true
    }

    return false
}

// SetNetSalesAmount gets a reference to the given string and assigns it to the NetSalesAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetNetSalesAmount(v string) {
    o.NetSalesAmount = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetNextPageToken() string {
    if o == nil || utils.IsNil(o.NextPageToken) {
        var ret string
        return ret
    }
    return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetNextPageTokenOk() (*string, bool) {
    if o == nil || utils.IsNil(o.NextPageToken) {
        return nil, false
    }
    return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasNextPageToken() bool {
    if o != nil && !utils.IsNil(o.NextPageToken) {
        return true
    }

    return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetNextPageToken(v string) {
    o.NextPageToken = &v
}

// GetRevenueAmount returns the RevenueAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetRevenueAmount() string {
    if o == nil || utils.IsNil(o.RevenueAmount) {
        var ret string
        return ret
    }
    return *o.RevenueAmount
}

// GetRevenueAmountOk returns a tuple with the RevenueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetRevenueAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RevenueAmount) {
        return nil, false
    }
    return o.RevenueAmount, true
}

// HasRevenueAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasRevenueAmount() bool {
    if o != nil && !utils.IsNil(o.RevenueAmount) {
        return true
    }

    return false
}

// SetRevenueAmount gets a reference to the given string and assigns it to the RevenueAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetRevenueAmount(v string) {
    o.RevenueAmount = &v
}

// GetSettlementAmount returns the SettlementAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetSettlementAmount() string {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        var ret string
        return ret
    }
    return *o.SettlementAmount
}

// GetSettlementAmountOk returns a tuple with the SettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetSettlementAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        return nil, false
    }
    return o.SettlementAmount, true
}

// HasSettlementAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasSettlementAmount() bool {
    if o != nil && !utils.IsNil(o.SettlementAmount) {
        return true
    }

    return false
}

// SetSettlementAmount gets a reference to the given string and assigns it to the SettlementAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetSettlementAmount(v string) {
    o.SettlementAmount = &v
}

// GetShippingCostAmount returns the ShippingCostAmount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetShippingCostAmount() string {
    if o == nil || utils.IsNil(o.ShippingCostAmount) {
        var ret string
        return ret
    }
    return *o.ShippingCostAmount
}

// GetShippingCostAmountOk returns a tuple with the ShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetShippingCostAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ShippingCostAmount) {
        return nil, false
    }
    return o.ShippingCostAmount, true
}

// HasShippingCostAmount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasShippingCostAmount() bool {
    if o != nil && !utils.IsNil(o.ShippingCostAmount) {
        return true
    }

    return false
}

// SetShippingCostAmount gets a reference to the given string and assigns it to the ShippingCostAmount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetShippingCostAmount(v string) {
    o.ShippingCostAmount = &v
}

// GetStatementId returns the StatementId field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementId() string {
    if o == nil || utils.IsNil(o.StatementId) {
        var ret string
        return ret
    }
    return *o.StatementId
}

// GetStatementIdOk returns a tuple with the StatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.StatementId) {
        return nil, false
    }
    return o.StatementId, true
}

// HasStatementId returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasStatementId() bool {
    if o != nil && !utils.IsNil(o.StatementId) {
        return true
    }

    return false
}

// SetStatementId gets a reference to the given string and assigns it to the StatementId field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetStatementId(v string) {
    o.StatementId = &v
}

// GetStatementTime returns the StatementTime field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementTime() int64 {
    if o == nil || utils.IsNil(o.StatementTime) {
        var ret int64
        return ret
    }
    return *o.StatementTime
}

// GetStatementTimeOk returns a tuple with the StatementTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.StatementTime) {
        return nil, false
    }
    return o.StatementTime, true
}

// HasStatementTime returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasStatementTime() bool {
    if o != nil && !utils.IsNil(o.StatementTime) {
        return true
    }

    return false
}

// SetStatementTime gets a reference to the given int64 and assigns it to the StatementTime field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetStatementTime(v int64) {
    o.StatementTime = &v
}

// GetStatementTransactions returns the StatementTransactions field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementTransactions() []Finance202309GetTransactionsbyStatementResponseDataStatementTransactions {
    if o == nil || utils.IsNil(o.StatementTransactions) {
        var ret []Finance202309GetTransactionsbyStatementResponseDataStatementTransactions
        return ret
    }
    return o.StatementTransactions
}

// GetStatementTransactionsOk returns a tuple with the StatementTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetStatementTransactionsOk() ([]Finance202309GetTransactionsbyStatementResponseDataStatementTransactions, bool) {
    if o == nil || utils.IsNil(o.StatementTransactions) {
        return nil, false
    }
    return o.StatementTransactions, true
}

// HasStatementTransactions returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasStatementTransactions() bool {
    if o != nil && !utils.IsNil(o.StatementTransactions) {
        return true
    }

    return false
}

// SetStatementTransactions gets a reference to the given []Finance202309GetTransactionsbyStatementResponseDataStatementTransactions and assigns it to the StatementTransactions field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetStatementTransactions(v []Finance202309GetTransactionsbyStatementResponseDataStatementTransactions) {
    o.StatementTransactions = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetTotalCount() int32 {
    if o == nil || utils.IsNil(o.TotalCount) {
        var ret int32
        return ret
    }
    return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) GetTotalCountOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.TotalCount) {
        return nil, false
    }
    return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *Finance202309GetTransactionsbyStatementResponseData) HasTotalCount() bool {
    if o != nil && !utils.IsNil(o.TotalCount) {
        return true
    }

    return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *Finance202309GetTransactionsbyStatementResponseData) SetTotalCount(v int32) {
    o.TotalCount = &v
}

func (o Finance202309GetTransactionsbyStatementResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202309GetTransactionsbyStatementResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.AdjustmentAmount) {
        toSerialize["adjustment_amount"] = o.AdjustmentAmount
    }
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.FeeAmount) {
        toSerialize["fee_amount"] = o.FeeAmount
    }
    if !utils.IsNil(o.NetSalesAmount) {
        toSerialize["net_sales_amount"] = o.NetSalesAmount
    }
    if !utils.IsNil(o.NextPageToken) {
        toSerialize["next_page_token"] = o.NextPageToken
    }
    if !utils.IsNil(o.RevenueAmount) {
        toSerialize["revenue_amount"] = o.RevenueAmount
    }
    if !utils.IsNil(o.SettlementAmount) {
        toSerialize["settlement_amount"] = o.SettlementAmount
    }
    if !utils.IsNil(o.ShippingCostAmount) {
        toSerialize["shipping_cost_amount"] = o.ShippingCostAmount
    }
    if !utils.IsNil(o.StatementId) {
        toSerialize["statement_id"] = o.StatementId
    }
    if !utils.IsNil(o.StatementTime) {
        toSerialize["statement_time"] = o.StatementTime
    }
    if !utils.IsNil(o.StatementTransactions) {
        toSerialize["statement_transactions"] = o.StatementTransactions
    }
    if !utils.IsNil(o.TotalCount) {
        toSerialize["total_count"] = o.TotalCount
    }
    return toSerialize, nil
}

type NullableFinance202309GetTransactionsbyStatementResponseData struct {
	value *Finance202309GetTransactionsbyStatementResponseData
	isSet bool
}

func (v NullableFinance202309GetTransactionsbyStatementResponseData) Get() *Finance202309GetTransactionsbyStatementResponseData {
	return v.value
}

func (v *NullableFinance202309GetTransactionsbyStatementResponseData) Set(val *Finance202309GetTransactionsbyStatementResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202309GetTransactionsbyStatementResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202309GetTransactionsbyStatementResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202309GetTransactionsbyStatementResponseData(val *Finance202309GetTransactionsbyStatementResponseData) *NullableFinance202309GetTransactionsbyStatementResponseData {
	return &NullableFinance202309GetTransactionsbyStatementResponseData{value: val, isSet: true}
}

func (v NullableFinance202309GetTransactionsbyStatementResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202309GetTransactionsbyStatementResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


