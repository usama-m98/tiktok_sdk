/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202501

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202501GetTransactionsbyStatementResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202501GetTransactionsbyStatementResponseData{}

// Finance202501GetTransactionsbyStatementResponseData struct for Finance202501GetTransactionsbyStatementResponseData
type Finance202501GetTransactionsbyStatementResponseData struct {
    // The time when the statement was generated. Unix timestamp.  Statements are generated daily at 00:00 UTC. 
    CreateTime *int64 `json:"create_time,omitempty"`
    // The three-digit currency code in ISO 4217 format. 
    Currency *string `json:"currency,omitempty"`
    // The statement ID.
    Id *string `json:"id,omitempty"`
    // An opaque token used to retrieve the next page of a paginated result set. Provide this value in the `page_token` parameter of your request if the current response does not return all the results.
    NextPageToken *string `json:"next_page_token,omitempty"`
    // The final amount paid out after accounting for reserve funds. Formula: total_settlement_amount + total_reserve_amount
    PayableAmount *string `json:"payable_amount,omitempty"`
    // The statement status. Only supports `SETTLED`.
    Status *string `json:"status,omitempty"`
    // The number of transaction records in the statement.
    TotalCount *int32 `json:"total_count,omitempty"`
    // The total amount withheld from settlement based on TikTok Shop Reserve Policy. Refer to TikTok Shop Academy for more information. - A positive amount indicates the funds that have been released. - A negative amount indicates the funds being withheld from the settlement.  Applicable only for UK and US local sellers.
    TotalReserveAmount *string `json:"total_reserve_amount,omitempty"`
    // The total settlement amount.  Formula: total_revenue_amount - total_shipping_cost_amount - total_fee_tax_amount - total_adjustment_amount
    TotalSettlementAmount *string `json:"total_settlement_amount,omitempty"`
    TotalSettlementBreakdown *Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown `json:"total_settlement_breakdown,omitempty"`
    // The list of transaction records in the statement. Each transaction corresponds to an order, an adjustment, or a reserve-related transaction.
    Transactions []Finance202501GetTransactionsbyStatementResponseDataTransactions `json:"transactions,omitempty"`
}

// NewFinance202501GetTransactionsbyStatementResponseData instantiates a new Finance202501GetTransactionsbyStatementResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202501GetTransactionsbyStatementResponseData() *Finance202501GetTransactionsbyStatementResponseData {
    this := Finance202501GetTransactionsbyStatementResponseData{}
    return &this
}

// NewFinance202501GetTransactionsbyStatementResponseDataWithDefaults instantiates a new Finance202501GetTransactionsbyStatementResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202501GetTransactionsbyStatementResponseDataWithDefaults() *Finance202501GetTransactionsbyStatementResponseData {
    this := Finance202501GetTransactionsbyStatementResponseData{}
    return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetCreateTime() int64 {
    if o == nil || utils.IsNil(o.CreateTime) {
        var ret int64
        return ret
    }
    return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetCreateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.CreateTime) {
        return nil, false
    }
    return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasCreateTime() bool {
    if o != nil && !utils.IsNil(o.CreateTime) {
        return true
    }

    return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetCreateTime(v int64) {
    o.CreateTime = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetCurrency(v string) {
    o.Currency = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetId(v string) {
    o.Id = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetNextPageToken() string {
    if o == nil || utils.IsNil(o.NextPageToken) {
        var ret string
        return ret
    }
    return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetNextPageTokenOk() (*string, bool) {
    if o == nil || utils.IsNil(o.NextPageToken) {
        return nil, false
    }
    return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasNextPageToken() bool {
    if o != nil && !utils.IsNil(o.NextPageToken) {
        return true
    }

    return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetNextPageToken(v string) {
    o.NextPageToken = &v
}

// GetPayableAmount returns the PayableAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetPayableAmount() string {
    if o == nil || utils.IsNil(o.PayableAmount) {
        var ret string
        return ret
    }
    return *o.PayableAmount
}

// GetPayableAmountOk returns a tuple with the PayableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetPayableAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.PayableAmount) {
        return nil, false
    }
    return o.PayableAmount, true
}

// HasPayableAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasPayableAmount() bool {
    if o != nil && !utils.IsNil(o.PayableAmount) {
        return true
    }

    return false
}

// SetPayableAmount gets a reference to the given string and assigns it to the PayableAmount field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetPayableAmount(v string) {
    o.PayableAmount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetStatus(v string) {
    o.Status = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalCount() int32 {
    if o == nil || utils.IsNil(o.TotalCount) {
        var ret int32
        return ret
    }
    return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalCountOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.TotalCount) {
        return nil, false
    }
    return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasTotalCount() bool {
    if o != nil && !utils.IsNil(o.TotalCount) {
        return true
    }

    return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetTotalCount(v int32) {
    o.TotalCount = &v
}

// GetTotalReserveAmount returns the TotalReserveAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalReserveAmount() string {
    if o == nil || utils.IsNil(o.TotalReserveAmount) {
        var ret string
        return ret
    }
    return *o.TotalReserveAmount
}

// GetTotalReserveAmountOk returns a tuple with the TotalReserveAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalReserveAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.TotalReserveAmount) {
        return nil, false
    }
    return o.TotalReserveAmount, true
}

// HasTotalReserveAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasTotalReserveAmount() bool {
    if o != nil && !utils.IsNil(o.TotalReserveAmount) {
        return true
    }

    return false
}

// SetTotalReserveAmount gets a reference to the given string and assigns it to the TotalReserveAmount field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetTotalReserveAmount(v string) {
    o.TotalReserveAmount = &v
}

// GetTotalSettlementAmount returns the TotalSettlementAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalSettlementAmount() string {
    if o == nil || utils.IsNil(o.TotalSettlementAmount) {
        var ret string
        return ret
    }
    return *o.TotalSettlementAmount
}

// GetTotalSettlementAmountOk returns a tuple with the TotalSettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalSettlementAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.TotalSettlementAmount) {
        return nil, false
    }
    return o.TotalSettlementAmount, true
}

// HasTotalSettlementAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasTotalSettlementAmount() bool {
    if o != nil && !utils.IsNil(o.TotalSettlementAmount) {
        return true
    }

    return false
}

// SetTotalSettlementAmount gets a reference to the given string and assigns it to the TotalSettlementAmount field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetTotalSettlementAmount(v string) {
    o.TotalSettlementAmount = &v
}

// GetTotalSettlementBreakdown returns the TotalSettlementBreakdown field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalSettlementBreakdown() Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown {
    if o == nil || utils.IsNil(o.TotalSettlementBreakdown) {
        var ret Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown
        return ret
    }
    return *o.TotalSettlementBreakdown
}

// GetTotalSettlementBreakdownOk returns a tuple with the TotalSettlementBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTotalSettlementBreakdownOk() (*Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown, bool) {
    if o == nil || utils.IsNil(o.TotalSettlementBreakdown) {
        return nil, false
    }
    return o.TotalSettlementBreakdown, true
}

// HasTotalSettlementBreakdown returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasTotalSettlementBreakdown() bool {
    if o != nil && !utils.IsNil(o.TotalSettlementBreakdown) {
        return true
    }

    return false
}

// SetTotalSettlementBreakdown gets a reference to the given Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown and assigns it to the TotalSettlementBreakdown field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetTotalSettlementBreakdown(v Finance202501GetTransactionsbyStatementResponseDataTotalSettlementBreakdown) {
    o.TotalSettlementBreakdown = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTransactions() []Finance202501GetTransactionsbyStatementResponseDataTransactions {
    if o == nil || utils.IsNil(o.Transactions) {
        var ret []Finance202501GetTransactionsbyStatementResponseDataTransactions
        return ret
    }
    return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) GetTransactionsOk() ([]Finance202501GetTransactionsbyStatementResponseDataTransactions, bool) {
    if o == nil || utils.IsNil(o.Transactions) {
        return nil, false
    }
    return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyStatementResponseData) HasTransactions() bool {
    if o != nil && !utils.IsNil(o.Transactions) {
        return true
    }

    return false
}

// SetTransactions gets a reference to the given []Finance202501GetTransactionsbyStatementResponseDataTransactions and assigns it to the Transactions field.
func (o *Finance202501GetTransactionsbyStatementResponseData) SetTransactions(v []Finance202501GetTransactionsbyStatementResponseDataTransactions) {
    o.Transactions = v
}

func (o Finance202501GetTransactionsbyStatementResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202501GetTransactionsbyStatementResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.CreateTime) {
        toSerialize["create_time"] = o.CreateTime
    }
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.NextPageToken) {
        toSerialize["next_page_token"] = o.NextPageToken
    }
    if !utils.IsNil(o.PayableAmount) {
        toSerialize["payable_amount"] = o.PayableAmount
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    if !utils.IsNil(o.TotalCount) {
        toSerialize["total_count"] = o.TotalCount
    }
    if !utils.IsNil(o.TotalReserveAmount) {
        toSerialize["total_reserve_amount"] = o.TotalReserveAmount
    }
    if !utils.IsNil(o.TotalSettlementAmount) {
        toSerialize["total_settlement_amount"] = o.TotalSettlementAmount
    }
    if !utils.IsNil(o.TotalSettlementBreakdown) {
        toSerialize["total_settlement_breakdown"] = o.TotalSettlementBreakdown
    }
    if !utils.IsNil(o.Transactions) {
        toSerialize["transactions"] = o.Transactions
    }
    return toSerialize, nil
}

type NullableFinance202501GetTransactionsbyStatementResponseData struct {
	value *Finance202501GetTransactionsbyStatementResponseData
	isSet bool
}

func (v NullableFinance202501GetTransactionsbyStatementResponseData) Get() *Finance202501GetTransactionsbyStatementResponseData {
	return v.value
}

func (v *NullableFinance202501GetTransactionsbyStatementResponseData) Set(val *Finance202501GetTransactionsbyStatementResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202501GetTransactionsbyStatementResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202501GetTransactionsbyStatementResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202501GetTransactionsbyStatementResponseData(val *Finance202501GetTransactionsbyStatementResponseData) *NullableFinance202501GetTransactionsbyStatementResponseData {
	return &NullableFinance202501GetTransactionsbyStatementResponseData{value: val, isSet: true}
}

func (v NullableFinance202501GetTransactionsbyStatementResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202501GetTransactionsbyStatementResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


