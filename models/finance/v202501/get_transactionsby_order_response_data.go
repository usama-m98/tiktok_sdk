/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finance_v202501

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Finance202501GetTransactionsbyOrderResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Finance202501GetTransactionsbyOrderResponseData{}

// Finance202501GetTransactionsbyOrderResponseData struct for Finance202501GetTransactionsbyOrderResponseData
type Finance202501GetTransactionsbyOrderResponseData struct {
    // The three-digit currency code in ISO 4217 format. 
    Currency *string `json:"currency,omitempty"`
    // The fees and taxes charged by the platform for the order at the time of order settlement. Shipping-related costs are excluded.
    FeeAndTaxAmount *string `json:"fee_and_tax_amount,omitempty"`
    // The creation time of the order. Unix timestamp.
    OrderCreateTime *int64 `json:"order_create_time,omitempty"`
    // The order ID in TikTok Shop.
    OrderId *string `json:"order_id,omitempty"`
    // The revenue amount for the order at the time of order settlement. This is equivalent to the net sales amount.
    RevenueAmount *string `json:"revenue_amount,omitempty"`
    // The settlement amount for the order.  Formula: revenue_amount - shipping_cost_amount - fee_tax_amount
    SettlementAmount *string `json:"settlement_amount,omitempty"`
    // The shipping costs for the order at the time of order settlement.
    ShippingCostAmount *string `json:"shipping_cost_amount,omitempty"`
    // The list of SKU transaction records for the order.
    SkuTransactions []Finance202501GetTransactionsbyOrderResponseDataSkuTransactions `json:"sku_transactions,omitempty"`
    // The number of transaction records
    TotalCount *int64 `json:"total_count,omitempty"`
}

// NewFinance202501GetTransactionsbyOrderResponseData instantiates a new Finance202501GetTransactionsbyOrderResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinance202501GetTransactionsbyOrderResponseData() *Finance202501GetTransactionsbyOrderResponseData {
    this := Finance202501GetTransactionsbyOrderResponseData{}
    return &this
}

// NewFinance202501GetTransactionsbyOrderResponseDataWithDefaults instantiates a new Finance202501GetTransactionsbyOrderResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinance202501GetTransactionsbyOrderResponseDataWithDefaults() *Finance202501GetTransactionsbyOrderResponseData {
    this := Finance202501GetTransactionsbyOrderResponseData{}
    return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetCurrency(v string) {
    o.Currency = &v
}

// GetFeeAndTaxAmount returns the FeeAndTaxAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetFeeAndTaxAmount() string {
    if o == nil || utils.IsNil(o.FeeAndTaxAmount) {
        var ret string
        return ret
    }
    return *o.FeeAndTaxAmount
}

// GetFeeAndTaxAmountOk returns a tuple with the FeeAndTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetFeeAndTaxAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.FeeAndTaxAmount) {
        return nil, false
    }
    return o.FeeAndTaxAmount, true
}

// HasFeeAndTaxAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasFeeAndTaxAmount() bool {
    if o != nil && !utils.IsNil(o.FeeAndTaxAmount) {
        return true
    }

    return false
}

// SetFeeAndTaxAmount gets a reference to the given string and assigns it to the FeeAndTaxAmount field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetFeeAndTaxAmount(v string) {
    o.FeeAndTaxAmount = &v
}

// GetOrderCreateTime returns the OrderCreateTime field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetOrderCreateTime() int64 {
    if o == nil || utils.IsNil(o.OrderCreateTime) {
        var ret int64
        return ret
    }
    return *o.OrderCreateTime
}

// GetOrderCreateTimeOk returns a tuple with the OrderCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetOrderCreateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.OrderCreateTime) {
        return nil, false
    }
    return o.OrderCreateTime, true
}

// HasOrderCreateTime returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasOrderCreateTime() bool {
    if o != nil && !utils.IsNil(o.OrderCreateTime) {
        return true
    }

    return false
}

// SetOrderCreateTime gets a reference to the given int64 and assigns it to the OrderCreateTime field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetOrderCreateTime(v int64) {
    o.OrderCreateTime = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetOrderId() string {
    if o == nil || utils.IsNil(o.OrderId) {
        var ret string
        return ret
    }
    return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.OrderId) {
        return nil, false
    }
    return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasOrderId() bool {
    if o != nil && !utils.IsNil(o.OrderId) {
        return true
    }

    return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetOrderId(v string) {
    o.OrderId = &v
}

// GetRevenueAmount returns the RevenueAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetRevenueAmount() string {
    if o == nil || utils.IsNil(o.RevenueAmount) {
        var ret string
        return ret
    }
    return *o.RevenueAmount
}

// GetRevenueAmountOk returns a tuple with the RevenueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetRevenueAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.RevenueAmount) {
        return nil, false
    }
    return o.RevenueAmount, true
}

// HasRevenueAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasRevenueAmount() bool {
    if o != nil && !utils.IsNil(o.RevenueAmount) {
        return true
    }

    return false
}

// SetRevenueAmount gets a reference to the given string and assigns it to the RevenueAmount field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetRevenueAmount(v string) {
    o.RevenueAmount = &v
}

// GetSettlementAmount returns the SettlementAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetSettlementAmount() string {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        var ret string
        return ret
    }
    return *o.SettlementAmount
}

// GetSettlementAmountOk returns a tuple with the SettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetSettlementAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SettlementAmount) {
        return nil, false
    }
    return o.SettlementAmount, true
}

// HasSettlementAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasSettlementAmount() bool {
    if o != nil && !utils.IsNil(o.SettlementAmount) {
        return true
    }

    return false
}

// SetSettlementAmount gets a reference to the given string and assigns it to the SettlementAmount field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetSettlementAmount(v string) {
    o.SettlementAmount = &v
}

// GetShippingCostAmount returns the ShippingCostAmount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetShippingCostAmount() string {
    if o == nil || utils.IsNil(o.ShippingCostAmount) {
        var ret string
        return ret
    }
    return *o.ShippingCostAmount
}

// GetShippingCostAmountOk returns a tuple with the ShippingCostAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetShippingCostAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ShippingCostAmount) {
        return nil, false
    }
    return o.ShippingCostAmount, true
}

// HasShippingCostAmount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasShippingCostAmount() bool {
    if o != nil && !utils.IsNil(o.ShippingCostAmount) {
        return true
    }

    return false
}

// SetShippingCostAmount gets a reference to the given string and assigns it to the ShippingCostAmount field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetShippingCostAmount(v string) {
    o.ShippingCostAmount = &v
}

// GetSkuTransactions returns the SkuTransactions field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetSkuTransactions() []Finance202501GetTransactionsbyOrderResponseDataSkuTransactions {
    if o == nil || utils.IsNil(o.SkuTransactions) {
        var ret []Finance202501GetTransactionsbyOrderResponseDataSkuTransactions
        return ret
    }
    return o.SkuTransactions
}

// GetSkuTransactionsOk returns a tuple with the SkuTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetSkuTransactionsOk() ([]Finance202501GetTransactionsbyOrderResponseDataSkuTransactions, bool) {
    if o == nil || utils.IsNil(o.SkuTransactions) {
        return nil, false
    }
    return o.SkuTransactions, true
}

// HasSkuTransactions returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasSkuTransactions() bool {
    if o != nil && !utils.IsNil(o.SkuTransactions) {
        return true
    }

    return false
}

// SetSkuTransactions gets a reference to the given []Finance202501GetTransactionsbyOrderResponseDataSkuTransactions and assigns it to the SkuTransactions field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetSkuTransactions(v []Finance202501GetTransactionsbyOrderResponseDataSkuTransactions) {
    o.SkuTransactions = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetTotalCount() int64 {
    if o == nil || utils.IsNil(o.TotalCount) {
        var ret int64
        return ret
    }
    return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) GetTotalCountOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.TotalCount) {
        return nil, false
    }
    return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *Finance202501GetTransactionsbyOrderResponseData) HasTotalCount() bool {
    if o != nil && !utils.IsNil(o.TotalCount) {
        return true
    }

    return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *Finance202501GetTransactionsbyOrderResponseData) SetTotalCount(v int64) {
    o.TotalCount = &v
}

func (o Finance202501GetTransactionsbyOrderResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Finance202501GetTransactionsbyOrderResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.FeeAndTaxAmount) {
        toSerialize["fee_and_tax_amount"] = o.FeeAndTaxAmount
    }
    if !utils.IsNil(o.OrderCreateTime) {
        toSerialize["order_create_time"] = o.OrderCreateTime
    }
    if !utils.IsNil(o.OrderId) {
        toSerialize["order_id"] = o.OrderId
    }
    if !utils.IsNil(o.RevenueAmount) {
        toSerialize["revenue_amount"] = o.RevenueAmount
    }
    if !utils.IsNil(o.SettlementAmount) {
        toSerialize["settlement_amount"] = o.SettlementAmount
    }
    if !utils.IsNil(o.ShippingCostAmount) {
        toSerialize["shipping_cost_amount"] = o.ShippingCostAmount
    }
    if !utils.IsNil(o.SkuTransactions) {
        toSerialize["sku_transactions"] = o.SkuTransactions
    }
    if !utils.IsNil(o.TotalCount) {
        toSerialize["total_count"] = o.TotalCount
    }
    return toSerialize, nil
}

type NullableFinance202501GetTransactionsbyOrderResponseData struct {
	value *Finance202501GetTransactionsbyOrderResponseData
	isSet bool
}

func (v NullableFinance202501GetTransactionsbyOrderResponseData) Get() *Finance202501GetTransactionsbyOrderResponseData {
	return v.value
}

func (v *NullableFinance202501GetTransactionsbyOrderResponseData) Set(val *Finance202501GetTransactionsbyOrderResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFinance202501GetTransactionsbyOrderResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFinance202501GetTransactionsbyOrderResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinance202501GetTransactionsbyOrderResponseData(val *Finance202501GetTransactionsbyOrderResponseData) *NullableFinance202501GetTransactionsbyOrderResponseData {
	return &NullableFinance202501GetTransactionsbyOrderResponseData{value: val, isSet: true}
}

func (v NullableFinance202501GetTransactionsbyOrderResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinance202501GetTransactionsbyOrderResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


