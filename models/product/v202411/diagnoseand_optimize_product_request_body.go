/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202411

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202411DiagnoseandOptimizeProductRequestBody type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202411DiagnoseandOptimizeProductRequestBody{}

// Product202411DiagnoseandOptimizeProductRequestBody struct for Product202411DiagnoseandOptimizeProductRequestBody
type Product202411DiagnoseandOptimizeProductRequestBody struct {
    // The ID of the brand of this product. Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop. **Note**: Unauthorized brands won't be displayed on TikTok Shop.
    BrandId *string `json:"brand_id,omitempty"`
    // The ID of the category of this product. It must be a leaf category that corresponds to the category tree type specified in the `category_version` property. Use the [Get Categories API](https://partner.tiktokshop.com/docv2/page/6509c89d0fcef602bf1acd9b) to find out if a category is a leaf category in a particular `category_version`. **Note**: - For the US market, refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions. - For the Indonesia market, to list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms.
    CategoryId *string `json:"category_id,omitempty"`
    // The product description in HTML format. **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Images must use TikTok Shop image URLs, not exceed 4000px, and include `src`, `width`, and `height` attributes. **Recommendations**: - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.
    Description *string `json:"description,omitempty"`
    //   A list of images to display in the product image gallery. Use the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) to upload the images first and obtain the corresponding image URI. **Note**: - Max number of image URIs: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px] **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.
    MainImages []Product202411DiagnoseandOptimizeProductRequestBodyMainImages `json:"main_images,omitempty"`
    // The fields for which you want to generate specific optimization suggestions. Possible values:  - TITLE: Product title - DESCRIPTION: Product description (suggestions for this may take more than 10 seconds to generate) - IMAGE: Product image displayed in the image gallery  - ALL: Suggestions are generated for all the above fields - NONE: No suggestions will be provided. Default: NONE
    OptimizationFields []string `json:"optimization_fields,omitempty"`
    // A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant. **Note**: The attributes available for use are determined by the system based on the product's assigned category, with some being mandatory. Retrieve the product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).
    ProductAttributes []Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes `json:"product_attributes,omitempty"`
    // The product ID of an existing product in TikTok Shop. - Omit this if you are diagnosing a brand-new product not yet listed in TikTok Shop. - Provide this ID if the product is similar to an existing one, and you want the diagnosis to consider both the existing product's details and the new information in this request.
    ProductId *string `json:"product_id,omitempty"`
    SizeChart *Product202411DiagnoseandOptimizeProductRequestBodySizeChart `json:"size_chart,omitempty"`
    // The product title. Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255] - BR, MX: [1, 300] - Other regions: [25, 255]
    Title *string `json:"title,omitempty"`
}

// NewProduct202411DiagnoseandOptimizeProductRequestBody instantiates a new Product202411DiagnoseandOptimizeProductRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202411DiagnoseandOptimizeProductRequestBody() *Product202411DiagnoseandOptimizeProductRequestBody {
    this := Product202411DiagnoseandOptimizeProductRequestBody{}
    return &this
}

// NewProduct202411DiagnoseandOptimizeProductRequestBodyWithDefaults instantiates a new Product202411DiagnoseandOptimizeProductRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202411DiagnoseandOptimizeProductRequestBodyWithDefaults() *Product202411DiagnoseandOptimizeProductRequestBody {
    this := Product202411DiagnoseandOptimizeProductRequestBody{}
    return &this
}

// GetBrandId returns the BrandId field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetBrandId() string {
    if o == nil || utils.IsNil(o.BrandId) {
        var ret string
        return ret
    }
    return *o.BrandId
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetBrandIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.BrandId) {
        return nil, false
    }
    return o.BrandId, true
}

// HasBrandId returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasBrandId() bool {
    if o != nil && !utils.IsNil(o.BrandId) {
        return true
    }

    return false
}

// SetBrandId gets a reference to the given string and assigns it to the BrandId field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetBrandId(v string) {
    o.BrandId = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetCategoryId() string {
    if o == nil || utils.IsNil(o.CategoryId) {
        var ret string
        return ret
    }
    return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetCategoryIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.CategoryId) {
        return nil, false
    }
    return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasCategoryId() bool {
    if o != nil && !utils.IsNil(o.CategoryId) {
        return true
    }

    return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetCategoryId(v string) {
    o.CategoryId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetDescription() string {
    if o == nil || utils.IsNil(o.Description) {
        var ret string
        return ret
    }
    return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetDescriptionOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Description) {
        return nil, false
    }
    return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasDescription() bool {
    if o != nil && !utils.IsNil(o.Description) {
        return true
    }

    return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetDescription(v string) {
    o.Description = &v
}

// GetMainImages returns the MainImages field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetMainImages() []Product202411DiagnoseandOptimizeProductRequestBodyMainImages {
    if o == nil || utils.IsNil(o.MainImages) {
        var ret []Product202411DiagnoseandOptimizeProductRequestBodyMainImages
        return ret
    }
    return o.MainImages
}

// GetMainImagesOk returns a tuple with the MainImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetMainImagesOk() ([]Product202411DiagnoseandOptimizeProductRequestBodyMainImages, bool) {
    if o == nil || utils.IsNil(o.MainImages) {
        return nil, false
    }
    return o.MainImages, true
}

// HasMainImages returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasMainImages() bool {
    if o != nil && !utils.IsNil(o.MainImages) {
        return true
    }

    return false
}

// SetMainImages gets a reference to the given []Product202411DiagnoseandOptimizeProductRequestBodyMainImages and assigns it to the MainImages field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetMainImages(v []Product202411DiagnoseandOptimizeProductRequestBodyMainImages) {
    o.MainImages = v
}

// GetOptimizationFields returns the OptimizationFields field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetOptimizationFields() []string {
    if o == nil || utils.IsNil(o.OptimizationFields) {
        var ret []string
        return ret
    }
    return o.OptimizationFields
}

// GetOptimizationFieldsOk returns a tuple with the OptimizationFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetOptimizationFieldsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OptimizationFields) {
        return nil, false
    }
    return o.OptimizationFields, true
}

// HasOptimizationFields returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasOptimizationFields() bool {
    if o != nil && !utils.IsNil(o.OptimizationFields) {
        return true
    }

    return false
}

// SetOptimizationFields gets a reference to the given []string and assigns it to the OptimizationFields field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetOptimizationFields(v []string) {
    o.OptimizationFields = v
}

// GetProductAttributes returns the ProductAttributes field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetProductAttributes() []Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes {
    if o == nil || utils.IsNil(o.ProductAttributes) {
        var ret []Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes
        return ret
    }
    return o.ProductAttributes
}

// GetProductAttributesOk returns a tuple with the ProductAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetProductAttributesOk() ([]Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes, bool) {
    if o == nil || utils.IsNil(o.ProductAttributes) {
        return nil, false
    }
    return o.ProductAttributes, true
}

// HasProductAttributes returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasProductAttributes() bool {
    if o != nil && !utils.IsNil(o.ProductAttributes) {
        return true
    }

    return false
}

// SetProductAttributes gets a reference to the given []Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes and assigns it to the ProductAttributes field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetProductAttributes(v []Product202411DiagnoseandOptimizeProductRequestBodyProductAttributes) {
    o.ProductAttributes = v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetProductId() string {
    if o == nil || utils.IsNil(o.ProductId) {
        var ret string
        return ret
    }
    return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetProductIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ProductId) {
        return nil, false
    }
    return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasProductId() bool {
    if o != nil && !utils.IsNil(o.ProductId) {
        return true
    }

    return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetProductId(v string) {
    o.ProductId = &v
}

// GetSizeChart returns the SizeChart field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetSizeChart() Product202411DiagnoseandOptimizeProductRequestBodySizeChart {
    if o == nil || utils.IsNil(o.SizeChart) {
        var ret Product202411DiagnoseandOptimizeProductRequestBodySizeChart
        return ret
    }
    return *o.SizeChart
}

// GetSizeChartOk returns a tuple with the SizeChart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetSizeChartOk() (*Product202411DiagnoseandOptimizeProductRequestBodySizeChart, bool) {
    if o == nil || utils.IsNil(o.SizeChart) {
        return nil, false
    }
    return o.SizeChart, true
}

// HasSizeChart returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasSizeChart() bool {
    if o != nil && !utils.IsNil(o.SizeChart) {
        return true
    }

    return false
}

// SetSizeChart gets a reference to the given Product202411DiagnoseandOptimizeProductRequestBodySizeChart and assigns it to the SizeChart field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetSizeChart(v Product202411DiagnoseandOptimizeProductRequestBodySizeChart) {
    o.SizeChart = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetTitle() string {
    if o == nil || utils.IsNil(o.Title) {
        var ret string
        return ret
    }
    return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) GetTitleOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Title) {
        return nil, false
    }
    return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) HasTitle() bool {
    if o != nil && !utils.IsNil(o.Title) {
        return true
    }

    return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Product202411DiagnoseandOptimizeProductRequestBody) SetTitle(v string) {
    o.Title = &v
}

func (o Product202411DiagnoseandOptimizeProductRequestBody) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202411DiagnoseandOptimizeProductRequestBody) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.BrandId) {
        toSerialize["brand_id"] = o.BrandId
    }
    if !utils.IsNil(o.CategoryId) {
        toSerialize["category_id"] = o.CategoryId
    }
    if !utils.IsNil(o.Description) {
        toSerialize["description"] = o.Description
    }
    if !utils.IsNil(o.MainImages) {
        toSerialize["main_images"] = o.MainImages
    }
    if !utils.IsNil(o.OptimizationFields) {
        toSerialize["optimization_fields"] = o.OptimizationFields
    }
    if !utils.IsNil(o.ProductAttributes) {
        toSerialize["product_attributes"] = o.ProductAttributes
    }
    if !utils.IsNil(o.ProductId) {
        toSerialize["product_id"] = o.ProductId
    }
    if !utils.IsNil(o.SizeChart) {
        toSerialize["size_chart"] = o.SizeChart
    }
    if !utils.IsNil(o.Title) {
        toSerialize["title"] = o.Title
    }
    return toSerialize, nil
}

type NullableProduct202411DiagnoseandOptimizeProductRequestBody struct {
	value *Product202411DiagnoseandOptimizeProductRequestBody
	isSet bool
}

func (v NullableProduct202411DiagnoseandOptimizeProductRequestBody) Get() *Product202411DiagnoseandOptimizeProductRequestBody {
	return v.value
}

func (v *NullableProduct202411DiagnoseandOptimizeProductRequestBody) Set(val *Product202411DiagnoseandOptimizeProductRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202411DiagnoseandOptimizeProductRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202411DiagnoseandOptimizeProductRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202411DiagnoseandOptimizeProductRequestBody(val *Product202411DiagnoseandOptimizeProductRequestBody) *NullableProduct202411DiagnoseandOptimizeProductRequestBody {
	return &NullableProduct202411DiagnoseandOptimizeProductRequestBody{value: val, isSet: true}
}

func (v NullableProduct202411DiagnoseandOptimizeProductRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202411DiagnoseandOptimizeProductRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


