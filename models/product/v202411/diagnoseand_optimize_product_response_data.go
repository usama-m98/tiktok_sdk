/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202411

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202411DiagnoseandOptimizeProductResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202411DiagnoseandOptimizeProductResponseData{}

// Product202411DiagnoseandOptimizeProductResponseData struct for Product202411DiagnoseandOptimizeProductResponseData
type Product202411DiagnoseandOptimizeProductResponseData struct {
    // Product diagnosis and optimization information.
    Diagnoses []Product202411DiagnoseandOptimizeProductResponseDataDiagnoses `json:"diagnoses,omitempty"`
    ListingQuality *Product202411DiagnoseandOptimizeProductResponseDataListingQuality `json:"listing_quality,omitempty"`
}

// NewProduct202411DiagnoseandOptimizeProductResponseData instantiates a new Product202411DiagnoseandOptimizeProductResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202411DiagnoseandOptimizeProductResponseData() *Product202411DiagnoseandOptimizeProductResponseData {
    this := Product202411DiagnoseandOptimizeProductResponseData{}
    return &this
}

// NewProduct202411DiagnoseandOptimizeProductResponseDataWithDefaults instantiates a new Product202411DiagnoseandOptimizeProductResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202411DiagnoseandOptimizeProductResponseDataWithDefaults() *Product202411DiagnoseandOptimizeProductResponseData {
    this := Product202411DiagnoseandOptimizeProductResponseData{}
    return &this
}

// GetDiagnoses returns the Diagnoses field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductResponseData) GetDiagnoses() []Product202411DiagnoseandOptimizeProductResponseDataDiagnoses {
    if o == nil || utils.IsNil(o.Diagnoses) {
        var ret []Product202411DiagnoseandOptimizeProductResponseDataDiagnoses
        return ret
    }
    return o.Diagnoses
}

// GetDiagnosesOk returns a tuple with the Diagnoses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseData) GetDiagnosesOk() ([]Product202411DiagnoseandOptimizeProductResponseDataDiagnoses, bool) {
    if o == nil || utils.IsNil(o.Diagnoses) {
        return nil, false
    }
    return o.Diagnoses, true
}

// HasDiagnoses returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseData) HasDiagnoses() bool {
    if o != nil && !utils.IsNil(o.Diagnoses) {
        return true
    }

    return false
}

// SetDiagnoses gets a reference to the given []Product202411DiagnoseandOptimizeProductResponseDataDiagnoses and assigns it to the Diagnoses field.
func (o *Product202411DiagnoseandOptimizeProductResponseData) SetDiagnoses(v []Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) {
    o.Diagnoses = v
}

// GetListingQuality returns the ListingQuality field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductResponseData) GetListingQuality() Product202411DiagnoseandOptimizeProductResponseDataListingQuality {
    if o == nil || utils.IsNil(o.ListingQuality) {
        var ret Product202411DiagnoseandOptimizeProductResponseDataListingQuality
        return ret
    }
    return *o.ListingQuality
}

// GetListingQualityOk returns a tuple with the ListingQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseData) GetListingQualityOk() (*Product202411DiagnoseandOptimizeProductResponseDataListingQuality, bool) {
    if o == nil || utils.IsNil(o.ListingQuality) {
        return nil, false
    }
    return o.ListingQuality, true
}

// HasListingQuality returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseData) HasListingQuality() bool {
    if o != nil && !utils.IsNil(o.ListingQuality) {
        return true
    }

    return false
}

// SetListingQuality gets a reference to the given Product202411DiagnoseandOptimizeProductResponseDataListingQuality and assigns it to the ListingQuality field.
func (o *Product202411DiagnoseandOptimizeProductResponseData) SetListingQuality(v Product202411DiagnoseandOptimizeProductResponseDataListingQuality) {
    o.ListingQuality = &v
}

func (o Product202411DiagnoseandOptimizeProductResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202411DiagnoseandOptimizeProductResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Diagnoses) {
        toSerialize["diagnoses"] = o.Diagnoses
    }
    if !utils.IsNil(o.ListingQuality) {
        toSerialize["listing_quality"] = o.ListingQuality
    }
    return toSerialize, nil
}

type NullableProduct202411DiagnoseandOptimizeProductResponseData struct {
	value *Product202411DiagnoseandOptimizeProductResponseData
	isSet bool
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseData) Get() *Product202411DiagnoseandOptimizeProductResponseData {
	return v.value
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseData) Set(val *Product202411DiagnoseandOptimizeProductResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202411DiagnoseandOptimizeProductResponseData(val *Product202411DiagnoseandOptimizeProductResponseData) *NullableProduct202411DiagnoseandOptimizeProductResponseData {
	return &NullableProduct202411DiagnoseandOptimizeProductResponseData{value: val, isSet: true}
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


