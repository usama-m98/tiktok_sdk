/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202411

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202411DiagnoseandOptimizeProductResponseDataDiagnoses type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202411DiagnoseandOptimizeProductResponseDataDiagnoses{}

// Product202411DiagnoseandOptimizeProductResponseDataDiagnoses struct for Product202411DiagnoseandOptimizeProductResponseDataDiagnoses
type Product202411DiagnoseandOptimizeProductResponseDataDiagnoses struct {
    // The results of diagnosing the specified field.
    DiagnosisResults []Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults `json:"diagnosis_results,omitempty"`
    // The product field being diagnosed. Possible values: - TITLE: Product title - DESCRIPTION: Product description - IMAGE: Product image displayed in the image gallery - ATTRIBUTE: Product attribute - SIZE_CHART: Product size chart
    Field *string `json:"field,omitempty"`
    Suggestion *Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion `json:"suggestion,omitempty"`
}

// NewProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses instantiates a new Product202411DiagnoseandOptimizeProductResponseDataDiagnoses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses() *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses {
    this := Product202411DiagnoseandOptimizeProductResponseDataDiagnoses{}
    return &this
}

// NewProduct202411DiagnoseandOptimizeProductResponseDataDiagnosesWithDefaults instantiates a new Product202411DiagnoseandOptimizeProductResponseDataDiagnoses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202411DiagnoseandOptimizeProductResponseDataDiagnosesWithDefaults() *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses {
    this := Product202411DiagnoseandOptimizeProductResponseDataDiagnoses{}
    return &this
}

// GetDiagnosisResults returns the DiagnosisResults field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetDiagnosisResults() []Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults {
    if o == nil || utils.IsNil(o.DiagnosisResults) {
        var ret []Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults
        return ret
    }
    return o.DiagnosisResults
}

// GetDiagnosisResultsOk returns a tuple with the DiagnosisResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetDiagnosisResultsOk() ([]Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults, bool) {
    if o == nil || utils.IsNil(o.DiagnosisResults) {
        return nil, false
    }
    return o.DiagnosisResults, true
}

// HasDiagnosisResults returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) HasDiagnosisResults() bool {
    if o != nil && !utils.IsNil(o.DiagnosisResults) {
        return true
    }

    return false
}

// SetDiagnosisResults gets a reference to the given []Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults and assigns it to the DiagnosisResults field.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) SetDiagnosisResults(v []Product202411DiagnoseandOptimizeProductResponseDataDiagnosesDiagnosisResults) {
    o.DiagnosisResults = v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetField() string {
    if o == nil || utils.IsNil(o.Field) {
        var ret string
        return ret
    }
    return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetFieldOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Field) {
        return nil, false
    }
    return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) HasField() bool {
    if o != nil && !utils.IsNil(o.Field) {
        return true
    }

    return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) SetField(v string) {
    o.Field = &v
}

// GetSuggestion returns the Suggestion field value if set, zero value otherwise.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetSuggestion() Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion {
    if o == nil || utils.IsNil(o.Suggestion) {
        var ret Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion
        return ret
    }
    return *o.Suggestion
}

// GetSuggestionOk returns a tuple with the Suggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) GetSuggestionOk() (*Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion, bool) {
    if o == nil || utils.IsNil(o.Suggestion) {
        return nil, false
    }
    return o.Suggestion, true
}

// HasSuggestion returns a boolean if a field has been set.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) HasSuggestion() bool {
    if o != nil && !utils.IsNil(o.Suggestion) {
        return true
    }

    return false
}

// SetSuggestion gets a reference to the given Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion and assigns it to the Suggestion field.
func (o *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) SetSuggestion(v Product202411DiagnoseandOptimizeProductResponseDataDiagnosesSuggestion) {
    o.Suggestion = &v
}

func (o Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.DiagnosisResults) {
        toSerialize["diagnosis_results"] = o.DiagnosisResults
    }
    if !utils.IsNil(o.Field) {
        toSerialize["field"] = o.Field
    }
    if !utils.IsNil(o.Suggestion) {
        toSerialize["suggestion"] = o.Suggestion
    }
    return toSerialize, nil
}

type NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses struct {
	value *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses
	isSet bool
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) Get() *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses {
	return v.value
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) Set(val *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses(val *Product202411DiagnoseandOptimizeProductResponseDataDiagnoses) *NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses {
	return &NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses{value: val, isSet: true}
}

func (v NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202411DiagnoseandOptimizeProductResponseDataDiagnoses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


