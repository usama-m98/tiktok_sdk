/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202407

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202407ListingSchemasResponseDataListingSchemasFields type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202407ListingSchemasResponseDataListingSchemasFields{}

// Product202407ListingSchemasResponseDataListingSchemasFields struct for Product202407ListingSchemasResponseDataListingSchemasFields
type Product202407ListingSchemasResponseDataListingSchemasFields struct {
    // List of complex subfield values
    ComplexValues []Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues `json:"complex_values,omitempty"`
    // The id of the listing fields. The fields include: title,category, brand, product_attributes, sku.sale_attributes, sku.identifier_code, package_dimensions.
    Id *string `json:"id,omitempty"`
    // The fields display name.
    Name *string `json:"name,omitempty"`
    // The list of field options. For optional fields, return all the available options.
    Options []Product202407ListingSchemasResponseDataListingSchemasFieldsOptions `json:"options,omitempty"`
    // The rules of the schema's fields are used to describe the requirements of the product.
    Rules []Product202407ListingSchemasResponseDataListingSchemasFieldsRules `json:"rules,omitempty"`
}

// NewProduct202407ListingSchemasResponseDataListingSchemasFields instantiates a new Product202407ListingSchemasResponseDataListingSchemasFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202407ListingSchemasResponseDataListingSchemasFields() *Product202407ListingSchemasResponseDataListingSchemasFields {
    this := Product202407ListingSchemasResponseDataListingSchemasFields{}
    return &this
}

// NewProduct202407ListingSchemasResponseDataListingSchemasFieldsWithDefaults instantiates a new Product202407ListingSchemasResponseDataListingSchemasFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202407ListingSchemasResponseDataListingSchemasFieldsWithDefaults() *Product202407ListingSchemasResponseDataListingSchemasFields {
    this := Product202407ListingSchemasResponseDataListingSchemasFields{}
    return &this
}

// GetComplexValues returns the ComplexValues field value if set, zero value otherwise.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetComplexValues() []Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues {
    if o == nil || utils.IsNil(o.ComplexValues) {
        var ret []Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues
        return ret
    }
    return o.ComplexValues
}

// GetComplexValuesOk returns a tuple with the ComplexValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetComplexValuesOk() ([]Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues, bool) {
    if o == nil || utils.IsNil(o.ComplexValues) {
        return nil, false
    }
    return o.ComplexValues, true
}

// HasComplexValues returns a boolean if a field has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) HasComplexValues() bool {
    if o != nil && !utils.IsNil(o.ComplexValues) {
        return true
    }

    return false
}

// SetComplexValues gets a reference to the given []Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues and assigns it to the ComplexValues field.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) SetComplexValues(v []Product202407ListingSchemasResponseDataListingSchemasFieldsComplexValues) {
    o.ComplexValues = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) SetId(v string) {
    o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) SetName(v string) {
    o.Name = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetOptions() []Product202407ListingSchemasResponseDataListingSchemasFieldsOptions {
    if o == nil || utils.IsNil(o.Options) {
        var ret []Product202407ListingSchemasResponseDataListingSchemasFieldsOptions
        return ret
    }
    return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetOptionsOk() ([]Product202407ListingSchemasResponseDataListingSchemasFieldsOptions, bool) {
    if o == nil || utils.IsNil(o.Options) {
        return nil, false
    }
    return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) HasOptions() bool {
    if o != nil && !utils.IsNil(o.Options) {
        return true
    }

    return false
}

// SetOptions gets a reference to the given []Product202407ListingSchemasResponseDataListingSchemasFieldsOptions and assigns it to the Options field.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) SetOptions(v []Product202407ListingSchemasResponseDataListingSchemasFieldsOptions) {
    o.Options = v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetRules() []Product202407ListingSchemasResponseDataListingSchemasFieldsRules {
    if o == nil || utils.IsNil(o.Rules) {
        var ret []Product202407ListingSchemasResponseDataListingSchemasFieldsRules
        return ret
    }
    return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) GetRulesOk() ([]Product202407ListingSchemasResponseDataListingSchemasFieldsRules, bool) {
    if o == nil || utils.IsNil(o.Rules) {
        return nil, false
    }
    return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) HasRules() bool {
    if o != nil && !utils.IsNil(o.Rules) {
        return true
    }

    return false
}

// SetRules gets a reference to the given []Product202407ListingSchemasResponseDataListingSchemasFieldsRules and assigns it to the Rules field.
func (o *Product202407ListingSchemasResponseDataListingSchemasFields) SetRules(v []Product202407ListingSchemasResponseDataListingSchemasFieldsRules) {
    o.Rules = v
}

func (o Product202407ListingSchemasResponseDataListingSchemasFields) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202407ListingSchemasResponseDataListingSchemasFields) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.ComplexValues) {
        toSerialize["complex_values"] = o.ComplexValues
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.Options) {
        toSerialize["options"] = o.Options
    }
    if !utils.IsNil(o.Rules) {
        toSerialize["rules"] = o.Rules
    }
    return toSerialize, nil
}

type NullableProduct202407ListingSchemasResponseDataListingSchemasFields struct {
	value *Product202407ListingSchemasResponseDataListingSchemasFields
	isSet bool
}

func (v NullableProduct202407ListingSchemasResponseDataListingSchemasFields) Get() *Product202407ListingSchemasResponseDataListingSchemasFields {
	return v.value
}

func (v *NullableProduct202407ListingSchemasResponseDataListingSchemasFields) Set(val *Product202407ListingSchemasResponseDataListingSchemasFields) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202407ListingSchemasResponseDataListingSchemasFields) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202407ListingSchemasResponseDataListingSchemasFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202407ListingSchemasResponseDataListingSchemasFields(val *Product202407ListingSchemasResponseDataListingSchemasFields) *NullableProduct202407ListingSchemasResponseDataListingSchemasFields {
	return &NullableProduct202407ListingSchemasResponseDataListingSchemasFields{value: val, isSet: true}
}

func (v NullableProduct202407ListingSchemasResponseDataListingSchemasFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202407ListingSchemasResponseDataListingSchemasFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


