/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202401

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202401ListingSchemasResponseDataListingSchemasFiledsOptions type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202401ListingSchemasResponseDataListingSchemasFiledsOptions{}

// Product202401ListingSchemasResponseDataListingSchemasFiledsOptions struct for Product202401ListingSchemasResponseDataListingSchemasFiledsOptions
type Product202401ListingSchemasResponseDataListingSchemasFiledsOptions struct {
    // The id of option
    Id *string `json:"id,omitempty"`
    //   The name of option
    Name *string `json:"name,omitempty"`
}

// NewProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions instantiates a new Product202401ListingSchemasResponseDataListingSchemasFiledsOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions() *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions {
    this := Product202401ListingSchemasResponseDataListingSchemasFiledsOptions{}
    return &this
}

// NewProduct202401ListingSchemasResponseDataListingSchemasFiledsOptionsWithDefaults instantiates a new Product202401ListingSchemasResponseDataListingSchemasFiledsOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202401ListingSchemasResponseDataListingSchemasFiledsOptionsWithDefaults() *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions {
    this := Product202401ListingSchemasResponseDataListingSchemasFiledsOptions{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) SetId(v string) {
    o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) SetName(v string) {
    o.Name = &v
}

func (o Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    return toSerialize, nil
}

type NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions struct {
	value *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions
	isSet bool
}

func (v NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) Get() *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions {
	return v.value
}

func (v *NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) Set(val *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions(val *Product202401ListingSchemasResponseDataListingSchemasFiledsOptions) *NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions {
	return &NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions{value: val, isSet: true}
}

func (v NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202401ListingSchemasResponseDataListingSchemasFiledsOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


