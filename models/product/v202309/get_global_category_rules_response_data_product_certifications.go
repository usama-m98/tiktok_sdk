/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetGlobalCategoryRulesResponseDataProductCertifications type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetGlobalCategoryRulesResponseDataProductCertifications{}

// Product202309GetGlobalCategoryRulesResponseDataProductCertifications struct for Product202309GetGlobalCategoryRulesResponseDataProductCertifications
type Product202309GetGlobalCategoryRulesResponseDataProductCertifications struct {
    // The ID to identify the type of certification required.
    Id *string `json:"id,omitempty"`
    // A flag to indicate if the certification is required **globally**. - true: The certification is required in all regions. - false: The certification is required only in some regions, or if certain conditions are met. Refer to `required_regions` and `requirement_conditions` for the specific requirements.
    IsRequired *bool `json:"is_required,omitempty"`
    // The name of the certification type.
    Name *string `json:"name,omitempty"`
    // The markets where the certification is purely optional, or required only under certain conditions. Refer to `requirement_conditions` for details on markets with conditional requirements.  Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IT: Italy - IE: Ireland - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam - MX: Mexico  Applicable only if `is_required=false`.
    OptionalRegions []string `json:"optional_regions,omitempty"`
    // The markets where the certification is required, without conditions. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IT: Italy - IE: Ireland - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam - MX: Mexico  Applicable only if `is_required=false`.
    RequiredRegions []string `json:"required_regions,omitempty"`
    // A list of conditions that determine if the certification is required in a market based on the seller's inputs for a product attribute. If any of the conditions is met, the certification is required; otherwise, it is optional.  For example, there's a condition that states that the \"Safety Data Sheet (SDS) for flammable materials\" certification is required if the seller selects the value \"Yes\" for the attribute \"Flammable Liquid?\". For more scenario-based guidance on using this parameter, refer to the [Solution Guide](https://partner.tiktokshop.com/openlearn/guide/usecase?parent_id=7256668359046153985).  Applicable only if `optional_regions` is not empty.
    RequirementConditions []Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions `json:"requirement_conditions,omitempty"`
    // The URL to view an image of the sample certification document.
    SampleImageUrl *string `json:"sample_image_url,omitempty"`
}

// NewProduct202309GetGlobalCategoryRulesResponseDataProductCertifications instantiates a new Product202309GetGlobalCategoryRulesResponseDataProductCertifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetGlobalCategoryRulesResponseDataProductCertifications() *Product202309GetGlobalCategoryRulesResponseDataProductCertifications {
    this := Product202309GetGlobalCategoryRulesResponseDataProductCertifications{}
    return &this
}

// NewProduct202309GetGlobalCategoryRulesResponseDataProductCertificationsWithDefaults instantiates a new Product202309GetGlobalCategoryRulesResponseDataProductCertifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetGlobalCategoryRulesResponseDataProductCertificationsWithDefaults() *Product202309GetGlobalCategoryRulesResponseDataProductCertifications {
    this := Product202309GetGlobalCategoryRulesResponseDataProductCertifications{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetId(v string) {
    o.Id = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetIsRequired() bool {
    if o == nil || utils.IsNil(o.IsRequired) {
        var ret bool
        return ret
    }
    return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetIsRequiredOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsRequired) {
        return nil, false
    }
    return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasIsRequired() bool {
    if o != nil && !utils.IsNil(o.IsRequired) {
        return true
    }

    return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetIsRequired(v bool) {
    o.IsRequired = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetName(v string) {
    o.Name = &v
}

// GetOptionalRegions returns the OptionalRegions field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetOptionalRegions() []string {
    if o == nil || utils.IsNil(o.OptionalRegions) {
        var ret []string
        return ret
    }
    return o.OptionalRegions
}

// GetOptionalRegionsOk returns a tuple with the OptionalRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetOptionalRegionsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OptionalRegions) {
        return nil, false
    }
    return o.OptionalRegions, true
}

// HasOptionalRegions returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasOptionalRegions() bool {
    if o != nil && !utils.IsNil(o.OptionalRegions) {
        return true
    }

    return false
}

// SetOptionalRegions gets a reference to the given []string and assigns it to the OptionalRegions field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetOptionalRegions(v []string) {
    o.OptionalRegions = v
}

// GetRequiredRegions returns the RequiredRegions field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetRequiredRegions() []string {
    if o == nil || utils.IsNil(o.RequiredRegions) {
        var ret []string
        return ret
    }
    return o.RequiredRegions
}

// GetRequiredRegionsOk returns a tuple with the RequiredRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetRequiredRegionsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.RequiredRegions) {
        return nil, false
    }
    return o.RequiredRegions, true
}

// HasRequiredRegions returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasRequiredRegions() bool {
    if o != nil && !utils.IsNil(o.RequiredRegions) {
        return true
    }

    return false
}

// SetRequiredRegions gets a reference to the given []string and assigns it to the RequiredRegions field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetRequiredRegions(v []string) {
    o.RequiredRegions = v
}

// GetRequirementConditions returns the RequirementConditions field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetRequirementConditions() []Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        var ret []Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions
        return ret
    }
    return o.RequirementConditions
}

// GetRequirementConditionsOk returns a tuple with the RequirementConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetRequirementConditionsOk() ([]Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions, bool) {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        return nil, false
    }
    return o.RequirementConditions, true
}

// HasRequirementConditions returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasRequirementConditions() bool {
    if o != nil && !utils.IsNil(o.RequirementConditions) {
        return true
    }

    return false
}

// SetRequirementConditions gets a reference to the given []Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions and assigns it to the RequirementConditions field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetRequirementConditions(v []Product202309GetGlobalCategoryRulesResponseDataProductCertificationsRequirementConditions) {
    o.RequirementConditions = v
}

// GetSampleImageUrl returns the SampleImageUrl field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetSampleImageUrl() string {
    if o == nil || utils.IsNil(o.SampleImageUrl) {
        var ret string
        return ret
    }
    return *o.SampleImageUrl
}

// GetSampleImageUrlOk returns a tuple with the SampleImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) GetSampleImageUrlOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SampleImageUrl) {
        return nil, false
    }
    return o.SampleImageUrl, true
}

// HasSampleImageUrl returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) HasSampleImageUrl() bool {
    if o != nil && !utils.IsNil(o.SampleImageUrl) {
        return true
    }

    return false
}

// SetSampleImageUrl gets a reference to the given string and assigns it to the SampleImageUrl field.
func (o *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) SetSampleImageUrl(v string) {
    o.SampleImageUrl = &v
}

func (o Product202309GetGlobalCategoryRulesResponseDataProductCertifications) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetGlobalCategoryRulesResponseDataProductCertifications) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsRequired) {
        toSerialize["is_required"] = o.IsRequired
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.OptionalRegions) {
        toSerialize["optional_regions"] = o.OptionalRegions
    }
    if !utils.IsNil(o.RequiredRegions) {
        toSerialize["required_regions"] = o.RequiredRegions
    }
    if !utils.IsNil(o.RequirementConditions) {
        toSerialize["requirement_conditions"] = o.RequirementConditions
    }
    if !utils.IsNil(o.SampleImageUrl) {
        toSerialize["sample_image_url"] = o.SampleImageUrl
    }
    return toSerialize, nil
}

type NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications struct {
	value *Product202309GetGlobalCategoryRulesResponseDataProductCertifications
	isSet bool
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) Get() *Product202309GetGlobalCategoryRulesResponseDataProductCertifications {
	return v.value
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) Set(val *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications(val *Product202309GetGlobalCategoryRulesResponseDataProductCertifications) *NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications {
	return &NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications{value: val, isSet: true}
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataProductCertifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


