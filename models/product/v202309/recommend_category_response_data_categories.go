/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309RecommendCategoryResponseDataCategories type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309RecommendCategoryResponseDataCategories{}

// Product202309RecommendCategoryResponseDataCategories struct for Product202309RecommendCategoryResponseDataCategories
type Product202309RecommendCategoryResponseDataCategories struct {
    // The category ID.
    Id *string `json:"id,omitempty"`
    // A flag to indicate if the category is a leaf category.   **Note**: You can only create or edit products that belong to a leaf category.
    IsLeaf *bool `json:"is_leaf,omitempty"`
    // The category level.
    Level *int32 `json:"level,omitempty"`
    // The category name.
    Name *string `json:"name,omitempty"`
    // The shop's permission status for this category. Possible values: - AVAILABLE: You have the permission to create products in this category. - INVITE_ONLY: This is a restricted category and you do not have permission to use it. Submit an application through the Qualification Center on TikTok Shop Seller Center to gain access. In Seller Center, `INVITE_ONLY` is also known as \"restricted\". - PROHIBITED: This category is prohibited on TikTok Shop. If your product falls under this category, do not attempt to list it, as it will be rejected during audit. Applicable only for BR and MX markets.
    PermissionStatuses []string `json:"permission_statuses,omitempty"`
}

// NewProduct202309RecommendCategoryResponseDataCategories instantiates a new Product202309RecommendCategoryResponseDataCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309RecommendCategoryResponseDataCategories() *Product202309RecommendCategoryResponseDataCategories {
    this := Product202309RecommendCategoryResponseDataCategories{}
    return &this
}

// NewProduct202309RecommendCategoryResponseDataCategoriesWithDefaults instantiates a new Product202309RecommendCategoryResponseDataCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309RecommendCategoryResponseDataCategoriesWithDefaults() *Product202309RecommendCategoryResponseDataCategories {
    this := Product202309RecommendCategoryResponseDataCategories{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309RecommendCategoryResponseDataCategories) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309RecommendCategoryResponseDataCategories) SetId(v string) {
    o.Id = &v
}

// GetIsLeaf returns the IsLeaf field value if set, zero value otherwise.
func (o *Product202309RecommendCategoryResponseDataCategories) GetIsLeaf() bool {
    if o == nil || utils.IsNil(o.IsLeaf) {
        var ret bool
        return ret
    }
    return *o.IsLeaf
}

// GetIsLeafOk returns a tuple with the IsLeaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) GetIsLeafOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsLeaf) {
        return nil, false
    }
    return o.IsLeaf, true
}

// HasIsLeaf returns a boolean if a field has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) HasIsLeaf() bool {
    if o != nil && !utils.IsNil(o.IsLeaf) {
        return true
    }

    return false
}

// SetIsLeaf gets a reference to the given bool and assigns it to the IsLeaf field.
func (o *Product202309RecommendCategoryResponseDataCategories) SetIsLeaf(v bool) {
    o.IsLeaf = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *Product202309RecommendCategoryResponseDataCategories) GetLevel() int32 {
    if o == nil || utils.IsNil(o.Level) {
        var ret int32
        return ret
    }
    return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) GetLevelOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.Level) {
        return nil, false
    }
    return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) HasLevel() bool {
    if o != nil && !utils.IsNil(o.Level) {
        return true
    }

    return false
}

// SetLevel gets a reference to the given int32 and assigns it to the Level field.
func (o *Product202309RecommendCategoryResponseDataCategories) SetLevel(v int32) {
    o.Level = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309RecommendCategoryResponseDataCategories) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309RecommendCategoryResponseDataCategories) SetName(v string) {
    o.Name = &v
}

// GetPermissionStatuses returns the PermissionStatuses field value if set, zero value otherwise.
func (o *Product202309RecommendCategoryResponseDataCategories) GetPermissionStatuses() []string {
    if o == nil || utils.IsNil(o.PermissionStatuses) {
        var ret []string
        return ret
    }
    return o.PermissionStatuses
}

// GetPermissionStatusesOk returns a tuple with the PermissionStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) GetPermissionStatusesOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.PermissionStatuses) {
        return nil, false
    }
    return o.PermissionStatuses, true
}

// HasPermissionStatuses returns a boolean if a field has been set.
func (o *Product202309RecommendCategoryResponseDataCategories) HasPermissionStatuses() bool {
    if o != nil && !utils.IsNil(o.PermissionStatuses) {
        return true
    }

    return false
}

// SetPermissionStatuses gets a reference to the given []string and assigns it to the PermissionStatuses field.
func (o *Product202309RecommendCategoryResponseDataCategories) SetPermissionStatuses(v []string) {
    o.PermissionStatuses = v
}

func (o Product202309RecommendCategoryResponseDataCategories) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309RecommendCategoryResponseDataCategories) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsLeaf) {
        toSerialize["is_leaf"] = o.IsLeaf
    }
    if !utils.IsNil(o.Level) {
        toSerialize["level"] = o.Level
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.PermissionStatuses) {
        toSerialize["permission_statuses"] = o.PermissionStatuses
    }
    return toSerialize, nil
}

type NullableProduct202309RecommendCategoryResponseDataCategories struct {
	value *Product202309RecommendCategoryResponseDataCategories
	isSet bool
}

func (v NullableProduct202309RecommendCategoryResponseDataCategories) Get() *Product202309RecommendCategoryResponseDataCategories {
	return v.value
}

func (v *NullableProduct202309RecommendCategoryResponseDataCategories) Set(val *Product202309RecommendCategoryResponseDataCategories) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309RecommendCategoryResponseDataCategories) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309RecommendCategoryResponseDataCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309RecommendCategoryResponseDataCategories(val *Product202309RecommendCategoryResponseDataCategories) *NullableProduct202309RecommendCategoryResponseDataCategories {
	return &NullableProduct202309RecommendCategoryResponseDataCategories{value: val, isSet: true}
}

func (v NullableProduct202309RecommendCategoryResponseDataCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309RecommendCategoryResponseDataCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


