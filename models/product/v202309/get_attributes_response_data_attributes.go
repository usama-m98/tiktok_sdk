/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetAttributesResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetAttributesResponseDataAttributes{}

// Product202309GetAttributesResponseDataAttributes struct for Product202309GetAttributesResponseDataAttributes
type Product202309GetAttributesResponseDataAttributes struct {
    // The ID of the built-in attribute.
    Id *string `json:"id,omitempty"`
    // A flag to indicate if the product attribute value can be customized by sellers when creating or editing a product.  Applicable only if `type=PRODUCT_PROPERTY`.
    IsCustomizable *bool `json:"is_customizable,omitempty"`
    // A flag to indicate if multiple values can be provided for a product attribute when creating or editing a product.  Applicable only if `type=PRODUCT_PROPERTY`.
    IsMultipleSelection *bool `json:"is_multiple_selection,omitempty"`
    // A flag to indicate if the product attribute is always required when creating or editing a product. - true: The attribute is always required. - false: The attribute is not required, or required only if certain conditions are met. Refer to `requirement_conditions` for the specific requirements.  Applicable only if `type=PRODUCT_PROPERTY`.
    IsRequried *bool `json:"is_requried,omitempty"`
    // The name of the built-in attribute.
    Name *string `json:"name,omitempty"`
    // A list of conditions that determine if the product attribute is required based on the seller's inputs for other attributes. If any of the conditions is met, the attribute is required; otherwise, it is optional.  For example, there's a condition that states that the \"Battery type\" attribute is required if the seller selects the value \"Batteries\" for the attribute \"Contains Batteries or Cells?\". For more scenario-based guidance on using this parameter, refer to the [Solution Guide - CAT-PRE-HAZMAT](https://partner.tiktokshop.com/openlearn/guide/usecase?parent_id=7256668359046153985).  Applicable only if `type=PRODUCT_PROPERTY` and `is_requried=false`.
    RequirementConditions []Product202309GetAttributesResponseDataAttributesRequirementConditions `json:"requirement_conditions,omitempty"`
    // The attribute type. Possible values: - SALES_PROPERTY: Indicates sales attributes that define product variants. - PRODUCT_PROPERTY: Indicates product attributes that describe the product as a whole.
    Type *string `json:"type,omitempty"`
    // The supported data type and structure of the attribute value for free-form entries, such as strings, integers, or positive decimals. Applicable only for **conditional (cascading) attributes**, not for standard attributes.  Possible values: - POSITIVE_INT_OR_DECIMAL: Positive integers or decimal numbers.
    ValueDataFormat *string `json:"value_data_format,omitempty"`
    // A list of selectable values for the attribute.
    Values []Product202309GetAttributesResponseDataAttributesValues `json:"values,omitempty"`
}

// NewProduct202309GetAttributesResponseDataAttributes instantiates a new Product202309GetAttributesResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetAttributesResponseDataAttributes() *Product202309GetAttributesResponseDataAttributes {
    this := Product202309GetAttributesResponseDataAttributes{}
    return &this
}

// NewProduct202309GetAttributesResponseDataAttributesWithDefaults instantiates a new Product202309GetAttributesResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetAttributesResponseDataAttributesWithDefaults() *Product202309GetAttributesResponseDataAttributes {
    this := Product202309GetAttributesResponseDataAttributes{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309GetAttributesResponseDataAttributes) SetId(v string) {
    o.Id = &v
}

// GetIsCustomizable returns the IsCustomizable field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsCustomizable() bool {
    if o == nil || utils.IsNil(o.IsCustomizable) {
        var ret bool
        return ret
    }
    return *o.IsCustomizable
}

// GetIsCustomizableOk returns a tuple with the IsCustomizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsCustomizableOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsCustomizable) {
        return nil, false
    }
    return o.IsCustomizable, true
}

// HasIsCustomizable returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasIsCustomizable() bool {
    if o != nil && !utils.IsNil(o.IsCustomizable) {
        return true
    }

    return false
}

// SetIsCustomizable gets a reference to the given bool and assigns it to the IsCustomizable field.
func (o *Product202309GetAttributesResponseDataAttributes) SetIsCustomizable(v bool) {
    o.IsCustomizable = &v
}

// GetIsMultipleSelection returns the IsMultipleSelection field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsMultipleSelection() bool {
    if o == nil || utils.IsNil(o.IsMultipleSelection) {
        var ret bool
        return ret
    }
    return *o.IsMultipleSelection
}

// GetIsMultipleSelectionOk returns a tuple with the IsMultipleSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsMultipleSelectionOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsMultipleSelection) {
        return nil, false
    }
    return o.IsMultipleSelection, true
}

// HasIsMultipleSelection returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasIsMultipleSelection() bool {
    if o != nil && !utils.IsNil(o.IsMultipleSelection) {
        return true
    }

    return false
}

// SetIsMultipleSelection gets a reference to the given bool and assigns it to the IsMultipleSelection field.
func (o *Product202309GetAttributesResponseDataAttributes) SetIsMultipleSelection(v bool) {
    o.IsMultipleSelection = &v
}

// GetIsRequried returns the IsRequried field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsRequried() bool {
    if o == nil || utils.IsNil(o.IsRequried) {
        var ret bool
        return ret
    }
    return *o.IsRequried
}

// GetIsRequriedOk returns a tuple with the IsRequried field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetIsRequriedOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsRequried) {
        return nil, false
    }
    return o.IsRequried, true
}

// HasIsRequried returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasIsRequried() bool {
    if o != nil && !utils.IsNil(o.IsRequried) {
        return true
    }

    return false
}

// SetIsRequried gets a reference to the given bool and assigns it to the IsRequried field.
func (o *Product202309GetAttributesResponseDataAttributes) SetIsRequried(v bool) {
    o.IsRequried = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309GetAttributesResponseDataAttributes) SetName(v string) {
    o.Name = &v
}

// GetRequirementConditions returns the RequirementConditions field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetRequirementConditions() []Product202309GetAttributesResponseDataAttributesRequirementConditions {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        var ret []Product202309GetAttributesResponseDataAttributesRequirementConditions
        return ret
    }
    return o.RequirementConditions
}

// GetRequirementConditionsOk returns a tuple with the RequirementConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetRequirementConditionsOk() ([]Product202309GetAttributesResponseDataAttributesRequirementConditions, bool) {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        return nil, false
    }
    return o.RequirementConditions, true
}

// HasRequirementConditions returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasRequirementConditions() bool {
    if o != nil && !utils.IsNil(o.RequirementConditions) {
        return true
    }

    return false
}

// SetRequirementConditions gets a reference to the given []Product202309GetAttributesResponseDataAttributesRequirementConditions and assigns it to the RequirementConditions field.
func (o *Product202309GetAttributesResponseDataAttributes) SetRequirementConditions(v []Product202309GetAttributesResponseDataAttributesRequirementConditions) {
    o.RequirementConditions = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetType() string {
    if o == nil || utils.IsNil(o.Type) {
        var ret string
        return ret
    }
    return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Type) {
        return nil, false
    }
    return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasType() bool {
    if o != nil && !utils.IsNil(o.Type) {
        return true
    }

    return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Product202309GetAttributesResponseDataAttributes) SetType(v string) {
    o.Type = &v
}

// GetValueDataFormat returns the ValueDataFormat field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetValueDataFormat() string {
    if o == nil || utils.IsNil(o.ValueDataFormat) {
        var ret string
        return ret
    }
    return *o.ValueDataFormat
}

// GetValueDataFormatOk returns a tuple with the ValueDataFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetValueDataFormatOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ValueDataFormat) {
        return nil, false
    }
    return o.ValueDataFormat, true
}

// HasValueDataFormat returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasValueDataFormat() bool {
    if o != nil && !utils.IsNil(o.ValueDataFormat) {
        return true
    }

    return false
}

// SetValueDataFormat gets a reference to the given string and assigns it to the ValueDataFormat field.
func (o *Product202309GetAttributesResponseDataAttributes) SetValueDataFormat(v string) {
    o.ValueDataFormat = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *Product202309GetAttributesResponseDataAttributes) GetValues() []Product202309GetAttributesResponseDataAttributesValues {
    if o == nil || utils.IsNil(o.Values) {
        var ret []Product202309GetAttributesResponseDataAttributesValues
        return ret
    }
    return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetAttributesResponseDataAttributes) GetValuesOk() ([]Product202309GetAttributesResponseDataAttributesValues, bool) {
    if o == nil || utils.IsNil(o.Values) {
        return nil, false
    }
    return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *Product202309GetAttributesResponseDataAttributes) HasValues() bool {
    if o != nil && !utils.IsNil(o.Values) {
        return true
    }

    return false
}

// SetValues gets a reference to the given []Product202309GetAttributesResponseDataAttributesValues and assigns it to the Values field.
func (o *Product202309GetAttributesResponseDataAttributes) SetValues(v []Product202309GetAttributesResponseDataAttributesValues) {
    o.Values = v
}

func (o Product202309GetAttributesResponseDataAttributes) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetAttributesResponseDataAttributes) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsCustomizable) {
        toSerialize["is_customizable"] = o.IsCustomizable
    }
    if !utils.IsNil(o.IsMultipleSelection) {
        toSerialize["is_multiple_selection"] = o.IsMultipleSelection
    }
    if !utils.IsNil(o.IsRequried) {
        toSerialize["is_requried"] = o.IsRequried
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.RequirementConditions) {
        toSerialize["requirement_conditions"] = o.RequirementConditions
    }
    if !utils.IsNil(o.Type) {
        toSerialize["type"] = o.Type
    }
    if !utils.IsNil(o.ValueDataFormat) {
        toSerialize["value_data_format"] = o.ValueDataFormat
    }
    if !utils.IsNil(o.Values) {
        toSerialize["values"] = o.Values
    }
    return toSerialize, nil
}

type NullableProduct202309GetAttributesResponseDataAttributes struct {
	value *Product202309GetAttributesResponseDataAttributes
	isSet bool
}

func (v NullableProduct202309GetAttributesResponseDataAttributes) Get() *Product202309GetAttributesResponseDataAttributes {
	return v.value
}

func (v *NullableProduct202309GetAttributesResponseDataAttributes) Set(val *Product202309GetAttributesResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetAttributesResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetAttributesResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetAttributesResponseDataAttributes(val *Product202309GetAttributesResponseDataAttributes) *NullableProduct202309GetAttributesResponseDataAttributes {
	return &NullableProduct202309GetAttributesResponseDataAttributes{value: val, isSet: true}
}

func (v NullableProduct202309GetAttributesResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetAttributesResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


