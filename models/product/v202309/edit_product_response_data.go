/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309EditProductResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309EditProductResponseData{}

// Product202309EditProductResponseData struct for Product202309EditProductResponseData
type Product202309EditProductResponseData struct {
    Audit *Product202309EditProductResponseDataAudit `json:"audit,omitempty"`
    // The product ID generated by TikTok Shop.
    ProductId *string `json:"product_id,omitempty"`
    // A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.
    Skus []Product202309EditProductResponseDataSkus `json:"skus,omitempty"`
    // Warning information that the API caller needs to pay special attention to.
    Warnings []Product202309EditProductResponseDataWarnings `json:"warnings,omitempty"`
}

// NewProduct202309EditProductResponseData instantiates a new Product202309EditProductResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309EditProductResponseData() *Product202309EditProductResponseData {
    this := Product202309EditProductResponseData{}
    return &this
}

// NewProduct202309EditProductResponseDataWithDefaults instantiates a new Product202309EditProductResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309EditProductResponseDataWithDefaults() *Product202309EditProductResponseData {
    this := Product202309EditProductResponseData{}
    return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *Product202309EditProductResponseData) GetAudit() Product202309EditProductResponseDataAudit {
    if o == nil || utils.IsNil(o.Audit) {
        var ret Product202309EditProductResponseDataAudit
        return ret
    }
    return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309EditProductResponseData) GetAuditOk() (*Product202309EditProductResponseDataAudit, bool) {
    if o == nil || utils.IsNil(o.Audit) {
        return nil, false
    }
    return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *Product202309EditProductResponseData) HasAudit() bool {
    if o != nil && !utils.IsNil(o.Audit) {
        return true
    }

    return false
}

// SetAudit gets a reference to the given Product202309EditProductResponseDataAudit and assigns it to the Audit field.
func (o *Product202309EditProductResponseData) SetAudit(v Product202309EditProductResponseDataAudit) {
    o.Audit = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Product202309EditProductResponseData) GetProductId() string {
    if o == nil || utils.IsNil(o.ProductId) {
        var ret string
        return ret
    }
    return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309EditProductResponseData) GetProductIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ProductId) {
        return nil, false
    }
    return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Product202309EditProductResponseData) HasProductId() bool {
    if o != nil && !utils.IsNil(o.ProductId) {
        return true
    }

    return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Product202309EditProductResponseData) SetProductId(v string) {
    o.ProductId = &v
}

// GetSkus returns the Skus field value if set, zero value otherwise.
func (o *Product202309EditProductResponseData) GetSkus() []Product202309EditProductResponseDataSkus {
    if o == nil || utils.IsNil(o.Skus) {
        var ret []Product202309EditProductResponseDataSkus
        return ret
    }
    return o.Skus
}

// GetSkusOk returns a tuple with the Skus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309EditProductResponseData) GetSkusOk() ([]Product202309EditProductResponseDataSkus, bool) {
    if o == nil || utils.IsNil(o.Skus) {
        return nil, false
    }
    return o.Skus, true
}

// HasSkus returns a boolean if a field has been set.
func (o *Product202309EditProductResponseData) HasSkus() bool {
    if o != nil && !utils.IsNil(o.Skus) {
        return true
    }

    return false
}

// SetSkus gets a reference to the given []Product202309EditProductResponseDataSkus and assigns it to the Skus field.
func (o *Product202309EditProductResponseData) SetSkus(v []Product202309EditProductResponseDataSkus) {
    o.Skus = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *Product202309EditProductResponseData) GetWarnings() []Product202309EditProductResponseDataWarnings {
    if o == nil || utils.IsNil(o.Warnings) {
        var ret []Product202309EditProductResponseDataWarnings
        return ret
    }
    return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309EditProductResponseData) GetWarningsOk() ([]Product202309EditProductResponseDataWarnings, bool) {
    if o == nil || utils.IsNil(o.Warnings) {
        return nil, false
    }
    return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *Product202309EditProductResponseData) HasWarnings() bool {
    if o != nil && !utils.IsNil(o.Warnings) {
        return true
    }

    return false
}

// SetWarnings gets a reference to the given []Product202309EditProductResponseDataWarnings and assigns it to the Warnings field.
func (o *Product202309EditProductResponseData) SetWarnings(v []Product202309EditProductResponseDataWarnings) {
    o.Warnings = v
}

func (o Product202309EditProductResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309EditProductResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Audit) {
        toSerialize["audit"] = o.Audit
    }
    if !utils.IsNil(o.ProductId) {
        toSerialize["product_id"] = o.ProductId
    }
    if !utils.IsNil(o.Skus) {
        toSerialize["skus"] = o.Skus
    }
    if !utils.IsNil(o.Warnings) {
        toSerialize["warnings"] = o.Warnings
    }
    return toSerialize, nil
}

type NullableProduct202309EditProductResponseData struct {
	value *Product202309EditProductResponseData
	isSet bool
}

func (v NullableProduct202309EditProductResponseData) Get() *Product202309EditProductResponseData {
	return v.value
}

func (v *NullableProduct202309EditProductResponseData) Set(val *Product202309EditProductResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309EditProductResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309EditProductResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309EditProductResponseData(val *Product202309EditProductResponseData) *NullableProduct202309EditProductResponseData {
	return &NullableProduct202309EditProductResponseData{value: val, isSet: true}
}

func (v NullableProduct202309EditProductResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309EditProductResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


