/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309CheckListingPrerequisitesResponseDataShop type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309CheckListingPrerequisitesResponseDataShop{}

// Product202309CheckListingPrerequisitesResponseDataShop struct for Product202309CheckListingPrerequisitesResponseDataShop
type Product202309CheckListingPrerequisitesResponseDataShop struct {
    // Listing Prerequisites check: Whether the shop has configured a bank account. If it is not prepared, return a check failure and the product will not be sent to audition.  Detailed explanation of JSON return results： - \"check_result\" returns the result of the prerequisite check.  - If \"is_failed\" is true, it indicates that the requirements for listing have not been met, and the detailed failure reasons will be returned through the \"fail_reasons\" field.
    BankAccount *string `json:"bank_account,omitempty"`
    // Listing Prerequisites check: Whether the shop has provided contact info. If it is not prepared, return a check failure and the product will not be created.  Detailed explanation of JSON return results： - \"check_result\" returns the result of the prerequisite check.  - If \"is_failed\" is true, it indicates that the requirements for listing have not been met, and the detailed failure reasons will be returned through the \"fail_reasons\" field.
    ContactInfo *string `json:"contact_info,omitempty"`
    Gne *Product202309CheckListingPrerequisitesResponseDataShopGne `json:"gne,omitempty"`
    Logistics *Product202309CheckListingPrerequisitesResponseDataShopLogistics `json:"logistics,omitempty"`
    // Listing Prerequisites check: Whether the shop status allows normal publishing. If the shop status is abnormal, return a check failure and do not allow publishing\" Detailed explanation of JSON return results： - \"check_result\" returns the result of the prerequisite check.  - If \"is_failed\" is true, it indicates that the requirements for listing have not been met
    Status *string `json:"status,omitempty"`
    //  Listing Prerequisites check: Whether the shop has configured tax-related information. In some regions, if it is not prepared, return a check failure and do not allow listing product. In the US, if it is not prepared, return a check failure and the product will not be sent to audition. Detailed explanation of JSON return results： - \"check_result\" returns the result of the prerequisite check.  - If \"is_failed\" is true, it indicates that the requirements for listing have not been met, and the detailed failure reasons will be returned through the \"fail_reasons\" field.
    TaxInfo *string `json:"tax_info,omitempty"`
}

// NewProduct202309CheckListingPrerequisitesResponseDataShop instantiates a new Product202309CheckListingPrerequisitesResponseDataShop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309CheckListingPrerequisitesResponseDataShop() *Product202309CheckListingPrerequisitesResponseDataShop {
    this := Product202309CheckListingPrerequisitesResponseDataShop{}
    return &this
}

// NewProduct202309CheckListingPrerequisitesResponseDataShopWithDefaults instantiates a new Product202309CheckListingPrerequisitesResponseDataShop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309CheckListingPrerequisitesResponseDataShopWithDefaults() *Product202309CheckListingPrerequisitesResponseDataShop {
    this := Product202309CheckListingPrerequisitesResponseDataShop{}
    return &this
}

// GetBankAccount returns the BankAccount field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetBankAccount() string {
    if o == nil || utils.IsNil(o.BankAccount) {
        var ret string
        return ret
    }
    return *o.BankAccount
}

// GetBankAccountOk returns a tuple with the BankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetBankAccountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.BankAccount) {
        return nil, false
    }
    return o.BankAccount, true
}

// HasBankAccount returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasBankAccount() bool {
    if o != nil && !utils.IsNil(o.BankAccount) {
        return true
    }

    return false
}

// SetBankAccount gets a reference to the given string and assigns it to the BankAccount field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetBankAccount(v string) {
    o.BankAccount = &v
}

// GetContactInfo returns the ContactInfo field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetContactInfo() string {
    if o == nil || utils.IsNil(o.ContactInfo) {
        var ret string
        return ret
    }
    return *o.ContactInfo
}

// GetContactInfoOk returns a tuple with the ContactInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetContactInfoOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ContactInfo) {
        return nil, false
    }
    return o.ContactInfo, true
}

// HasContactInfo returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasContactInfo() bool {
    if o != nil && !utils.IsNil(o.ContactInfo) {
        return true
    }

    return false
}

// SetContactInfo gets a reference to the given string and assigns it to the ContactInfo field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetContactInfo(v string) {
    o.ContactInfo = &v
}

// GetGne returns the Gne field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetGne() Product202309CheckListingPrerequisitesResponseDataShopGne {
    if o == nil || utils.IsNil(o.Gne) {
        var ret Product202309CheckListingPrerequisitesResponseDataShopGne
        return ret
    }
    return *o.Gne
}

// GetGneOk returns a tuple with the Gne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetGneOk() (*Product202309CheckListingPrerequisitesResponseDataShopGne, bool) {
    if o == nil || utils.IsNil(o.Gne) {
        return nil, false
    }
    return o.Gne, true
}

// HasGne returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasGne() bool {
    if o != nil && !utils.IsNil(o.Gne) {
        return true
    }

    return false
}

// SetGne gets a reference to the given Product202309CheckListingPrerequisitesResponseDataShopGne and assigns it to the Gne field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetGne(v Product202309CheckListingPrerequisitesResponseDataShopGne) {
    o.Gne = &v
}

// GetLogistics returns the Logistics field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetLogistics() Product202309CheckListingPrerequisitesResponseDataShopLogistics {
    if o == nil || utils.IsNil(o.Logistics) {
        var ret Product202309CheckListingPrerequisitesResponseDataShopLogistics
        return ret
    }
    return *o.Logistics
}

// GetLogisticsOk returns a tuple with the Logistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetLogisticsOk() (*Product202309CheckListingPrerequisitesResponseDataShopLogistics, bool) {
    if o == nil || utils.IsNil(o.Logistics) {
        return nil, false
    }
    return o.Logistics, true
}

// HasLogistics returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasLogistics() bool {
    if o != nil && !utils.IsNil(o.Logistics) {
        return true
    }

    return false
}

// SetLogistics gets a reference to the given Product202309CheckListingPrerequisitesResponseDataShopLogistics and assigns it to the Logistics field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetLogistics(v Product202309CheckListingPrerequisitesResponseDataShopLogistics) {
    o.Logistics = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetStatus(v string) {
    o.Status = &v
}

// GetTaxInfo returns the TaxInfo field value if set, zero value otherwise.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetTaxInfo() string {
    if o == nil || utils.IsNil(o.TaxInfo) {
        var ret string
        return ret
    }
    return *o.TaxInfo
}

// GetTaxInfoOk returns a tuple with the TaxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) GetTaxInfoOk() (*string, bool) {
    if o == nil || utils.IsNil(o.TaxInfo) {
        return nil, false
    }
    return o.TaxInfo, true
}

// HasTaxInfo returns a boolean if a field has been set.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) HasTaxInfo() bool {
    if o != nil && !utils.IsNil(o.TaxInfo) {
        return true
    }

    return false
}

// SetTaxInfo gets a reference to the given string and assigns it to the TaxInfo field.
func (o *Product202309CheckListingPrerequisitesResponseDataShop) SetTaxInfo(v string) {
    o.TaxInfo = &v
}

func (o Product202309CheckListingPrerequisitesResponseDataShop) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309CheckListingPrerequisitesResponseDataShop) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.BankAccount) {
        toSerialize["bank_account"] = o.BankAccount
    }
    if !utils.IsNil(o.ContactInfo) {
        toSerialize["contact_info"] = o.ContactInfo
    }
    if !utils.IsNil(o.Gne) {
        toSerialize["gne"] = o.Gne
    }
    if !utils.IsNil(o.Logistics) {
        toSerialize["logistics"] = o.Logistics
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    if !utils.IsNil(o.TaxInfo) {
        toSerialize["tax_info"] = o.TaxInfo
    }
    return toSerialize, nil
}

type NullableProduct202309CheckListingPrerequisitesResponseDataShop struct {
	value *Product202309CheckListingPrerequisitesResponseDataShop
	isSet bool
}

func (v NullableProduct202309CheckListingPrerequisitesResponseDataShop) Get() *Product202309CheckListingPrerequisitesResponseDataShop {
	return v.value
}

func (v *NullableProduct202309CheckListingPrerequisitesResponseDataShop) Set(val *Product202309CheckListingPrerequisitesResponseDataShop) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309CheckListingPrerequisitesResponseDataShop) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309CheckListingPrerequisitesResponseDataShop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309CheckListingPrerequisitesResponseDataShop(val *Product202309CheckListingPrerequisitesResponseDataShop) *NullableProduct202309CheckListingPrerequisitesResponseDataShop {
	return &NullableProduct202309CheckListingPrerequisitesResponseDataShop{value: val, isSet: true}
}

func (v NullableProduct202309CheckListingPrerequisitesResponseDataShop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309CheckListingPrerequisitesResponseDataShop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


