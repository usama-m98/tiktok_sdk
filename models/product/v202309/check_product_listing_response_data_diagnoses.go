/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309CheckProductListingResponseDataDiagnoses type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309CheckProductListingResponseDataDiagnoses{}

// Product202309CheckProductListingResponseDataDiagnoses struct for Product202309CheckProductListingResponseDataDiagnoses
type Product202309CheckProductListingResponseDataDiagnoses struct {
    // The diagnosis results. 
    DiagnosisResults []Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults `json:"diagnosis_results,omitempty"`
    // The product field being diagnosed.  Possible values:  - TITLE: Product title - DESCRIPTION: Product description - IMAGE: Product image displayed in the image gallery  - ATTRIBUTE: Product attribute - SIZE_CHART: Product size chart
    Field *string `json:"field,omitempty"`
    Suggestions *Product202309CheckProductListingResponseDataDiagnosesSuggestions `json:"suggestions,omitempty"`
}

// NewProduct202309CheckProductListingResponseDataDiagnoses instantiates a new Product202309CheckProductListingResponseDataDiagnoses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309CheckProductListingResponseDataDiagnoses() *Product202309CheckProductListingResponseDataDiagnoses {
    this := Product202309CheckProductListingResponseDataDiagnoses{}
    return &this
}

// NewProduct202309CheckProductListingResponseDataDiagnosesWithDefaults instantiates a new Product202309CheckProductListingResponseDataDiagnoses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309CheckProductListingResponseDataDiagnosesWithDefaults() *Product202309CheckProductListingResponseDataDiagnoses {
    this := Product202309CheckProductListingResponseDataDiagnoses{}
    return &this
}

// GetDiagnosisResults returns the DiagnosisResults field value if set, zero value otherwise.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetDiagnosisResults() []Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults {
    if o == nil || utils.IsNil(o.DiagnosisResults) {
        var ret []Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults
        return ret
    }
    return o.DiagnosisResults
}

// GetDiagnosisResultsOk returns a tuple with the DiagnosisResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetDiagnosisResultsOk() ([]Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults, bool) {
    if o == nil || utils.IsNil(o.DiagnosisResults) {
        return nil, false
    }
    return o.DiagnosisResults, true
}

// HasDiagnosisResults returns a boolean if a field has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) HasDiagnosisResults() bool {
    if o != nil && !utils.IsNil(o.DiagnosisResults) {
        return true
    }

    return false
}

// SetDiagnosisResults gets a reference to the given []Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults and assigns it to the DiagnosisResults field.
func (o *Product202309CheckProductListingResponseDataDiagnoses) SetDiagnosisResults(v []Product202309CheckProductListingResponseDataDiagnosesDiagnosisResults) {
    o.DiagnosisResults = v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetField() string {
    if o == nil || utils.IsNil(o.Field) {
        var ret string
        return ret
    }
    return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetFieldOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Field) {
        return nil, false
    }
    return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) HasField() bool {
    if o != nil && !utils.IsNil(o.Field) {
        return true
    }

    return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *Product202309CheckProductListingResponseDataDiagnoses) SetField(v string) {
    o.Field = &v
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetSuggestions() Product202309CheckProductListingResponseDataDiagnosesSuggestions {
    if o == nil || utils.IsNil(o.Suggestions) {
        var ret Product202309CheckProductListingResponseDataDiagnosesSuggestions
        return ret
    }
    return *o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) GetSuggestionsOk() (*Product202309CheckProductListingResponseDataDiagnosesSuggestions, bool) {
    if o == nil || utils.IsNil(o.Suggestions) {
        return nil, false
    }
    return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *Product202309CheckProductListingResponseDataDiagnoses) HasSuggestions() bool {
    if o != nil && !utils.IsNil(o.Suggestions) {
        return true
    }

    return false
}

// SetSuggestions gets a reference to the given Product202309CheckProductListingResponseDataDiagnosesSuggestions and assigns it to the Suggestions field.
func (o *Product202309CheckProductListingResponseDataDiagnoses) SetSuggestions(v Product202309CheckProductListingResponseDataDiagnosesSuggestions) {
    o.Suggestions = &v
}

func (o Product202309CheckProductListingResponseDataDiagnoses) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309CheckProductListingResponseDataDiagnoses) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.DiagnosisResults) {
        toSerialize["diagnosis_results"] = o.DiagnosisResults
    }
    if !utils.IsNil(o.Field) {
        toSerialize["field"] = o.Field
    }
    if !utils.IsNil(o.Suggestions) {
        toSerialize["suggestions"] = o.Suggestions
    }
    return toSerialize, nil
}

type NullableProduct202309CheckProductListingResponseDataDiagnoses struct {
	value *Product202309CheckProductListingResponseDataDiagnoses
	isSet bool
}

func (v NullableProduct202309CheckProductListingResponseDataDiagnoses) Get() *Product202309CheckProductListingResponseDataDiagnoses {
	return v.value
}

func (v *NullableProduct202309CheckProductListingResponseDataDiagnoses) Set(val *Product202309CheckProductListingResponseDataDiagnoses) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309CheckProductListingResponseDataDiagnoses) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309CheckProductListingResponseDataDiagnoses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309CheckProductListingResponseDataDiagnoses(val *Product202309CheckProductListingResponseDataDiagnoses) *NullableProduct202309CheckProductListingResponseDataDiagnoses {
	return &NullableProduct202309CheckProductListingResponseDataDiagnoses{value: val, isSet: true}
}

func (v NullableProduct202309CheckProductListingResponseDataDiagnoses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309CheckProductListingResponseDataDiagnoses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


