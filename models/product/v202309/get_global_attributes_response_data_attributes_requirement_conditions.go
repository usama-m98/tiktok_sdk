/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions{}

// Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions struct for Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions
type Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions struct {
    // The ID of the product attribute that is being evaluated by the condition.
    AttributeId *string `json:"attribute_id,omitempty"`
    // The ID of the product attribute value that must match the seller's input for the condition to be true.
    AttributeValueId *string `json:"attribute_value_id,omitempty"`
    // The type of condition, such as matching values, or range comparisons. Possible values: - VALUE_ID_MATCH: The condition is true when the seller selects a value whose ID matches the one specified in this condition.
    ConditionType *string `json:"condition_type,omitempty"`
    // The market where the attribute is required when the conditions are met. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IT: Italy - IE: Ireland - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam - MX: Mexico
    Region *string `json:"region,omitempty"`
}

// NewProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions instantiates a new Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions() *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions {
    this := Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions{}
    return &this
}

// NewProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditionsWithDefaults instantiates a new Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditionsWithDefaults() *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions {
    this := Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions{}
    return &this
}

// GetAttributeId returns the AttributeId field value if set, zero value otherwise.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetAttributeId() string {
    if o == nil || utils.IsNil(o.AttributeId) {
        var ret string
        return ret
    }
    return *o.AttributeId
}

// GetAttributeIdOk returns a tuple with the AttributeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetAttributeIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AttributeId) {
        return nil, false
    }
    return o.AttributeId, true
}

// HasAttributeId returns a boolean if a field has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) HasAttributeId() bool {
    if o != nil && !utils.IsNil(o.AttributeId) {
        return true
    }

    return false
}

// SetAttributeId gets a reference to the given string and assigns it to the AttributeId field.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) SetAttributeId(v string) {
    o.AttributeId = &v
}

// GetAttributeValueId returns the AttributeValueId field value if set, zero value otherwise.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetAttributeValueId() string {
    if o == nil || utils.IsNil(o.AttributeValueId) {
        var ret string
        return ret
    }
    return *o.AttributeValueId
}

// GetAttributeValueIdOk returns a tuple with the AttributeValueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetAttributeValueIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AttributeValueId) {
        return nil, false
    }
    return o.AttributeValueId, true
}

// HasAttributeValueId returns a boolean if a field has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) HasAttributeValueId() bool {
    if o != nil && !utils.IsNil(o.AttributeValueId) {
        return true
    }

    return false
}

// SetAttributeValueId gets a reference to the given string and assigns it to the AttributeValueId field.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) SetAttributeValueId(v string) {
    o.AttributeValueId = &v
}

// GetConditionType returns the ConditionType field value if set, zero value otherwise.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetConditionType() string {
    if o == nil || utils.IsNil(o.ConditionType) {
        var ret string
        return ret
    }
    return *o.ConditionType
}

// GetConditionTypeOk returns a tuple with the ConditionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetConditionTypeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ConditionType) {
        return nil, false
    }
    return o.ConditionType, true
}

// HasConditionType returns a boolean if a field has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) HasConditionType() bool {
    if o != nil && !utils.IsNil(o.ConditionType) {
        return true
    }

    return false
}

// SetConditionType gets a reference to the given string and assigns it to the ConditionType field.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) SetConditionType(v string) {
    o.ConditionType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetRegion() string {
    if o == nil || utils.IsNil(o.Region) {
        var ret string
        return ret
    }
    return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) GetRegionOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Region) {
        return nil, false
    }
    return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) HasRegion() bool {
    if o != nil && !utils.IsNil(o.Region) {
        return true
    }

    return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) SetRegion(v string) {
    o.Region = &v
}

func (o Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.AttributeId) {
        toSerialize["attribute_id"] = o.AttributeId
    }
    if !utils.IsNil(o.AttributeValueId) {
        toSerialize["attribute_value_id"] = o.AttributeValueId
    }
    if !utils.IsNil(o.ConditionType) {
        toSerialize["condition_type"] = o.ConditionType
    }
    if !utils.IsNil(o.Region) {
        toSerialize["region"] = o.Region
    }
    return toSerialize, nil
}

type NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions struct {
	value *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions
	isSet bool
}

func (v NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) Get() *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions {
	return v.value
}

func (v *NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) Set(val *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions(val *Product202309GetGlobalAttributesResponseDataAttributesRequirementConditions) *NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions {
	return &NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions{value: val, isSet: true}
}

func (v NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetGlobalAttributesResponseDataAttributesRequirementConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


