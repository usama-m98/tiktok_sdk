/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetGlobalCategoryRulesResponseDataManufacturer type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetGlobalCategoryRulesResponseDataManufacturer{}

// Product202309GetGlobalCategoryRulesResponseDataManufacturer struct for Product202309GetGlobalCategoryRulesResponseDataManufacturer
type Product202309GetGlobalCategoryRulesResponseDataManufacturer struct {
    // A flag to indicate whether the manufacturer is required for **all EU markets**. - true: The manufacturer is required in all EU markets. - false: The manufacturer is required only in some EU markets. Refer to `required_regions` and `optional_regions` for details.
    IsRequired *bool `json:"is_required,omitempty"`
    // The markets where the manufacturer is optional. Possible values: - DE: Germany - ES: Spain - FR: France - IT: Italy - IE: Ireland
    OptionalRegions []string `json:"optional_regions,omitempty"`
    // The markets where the manufacturer is required. Possible values: - DE: Germany - ES: Spain - FR: France - IT: Italy - IE: Ireland
    RequiredRegions []string `json:"required_regions,omitempty"`
}

// NewProduct202309GetGlobalCategoryRulesResponseDataManufacturer instantiates a new Product202309GetGlobalCategoryRulesResponseDataManufacturer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetGlobalCategoryRulesResponseDataManufacturer() *Product202309GetGlobalCategoryRulesResponseDataManufacturer {
    this := Product202309GetGlobalCategoryRulesResponseDataManufacturer{}
    return &this
}

// NewProduct202309GetGlobalCategoryRulesResponseDataManufacturerWithDefaults instantiates a new Product202309GetGlobalCategoryRulesResponseDataManufacturer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetGlobalCategoryRulesResponseDataManufacturerWithDefaults() *Product202309GetGlobalCategoryRulesResponseDataManufacturer {
    this := Product202309GetGlobalCategoryRulesResponseDataManufacturer{}
    return &this
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetIsRequired() bool {
    if o == nil || utils.IsNil(o.IsRequired) {
        var ret bool
        return ret
    }
    return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetIsRequiredOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsRequired) {
        return nil, false
    }
    return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) HasIsRequired() bool {
    if o != nil && !utils.IsNil(o.IsRequired) {
        return true
    }

    return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) SetIsRequired(v bool) {
    o.IsRequired = &v
}

// GetOptionalRegions returns the OptionalRegions field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetOptionalRegions() []string {
    if o == nil || utils.IsNil(o.OptionalRegions) {
        var ret []string
        return ret
    }
    return o.OptionalRegions
}

// GetOptionalRegionsOk returns a tuple with the OptionalRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetOptionalRegionsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.OptionalRegions) {
        return nil, false
    }
    return o.OptionalRegions, true
}

// HasOptionalRegions returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) HasOptionalRegions() bool {
    if o != nil && !utils.IsNil(o.OptionalRegions) {
        return true
    }

    return false
}

// SetOptionalRegions gets a reference to the given []string and assigns it to the OptionalRegions field.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) SetOptionalRegions(v []string) {
    o.OptionalRegions = v
}

// GetRequiredRegions returns the RequiredRegions field value if set, zero value otherwise.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetRequiredRegions() []string {
    if o == nil || utils.IsNil(o.RequiredRegions) {
        var ret []string
        return ret
    }
    return o.RequiredRegions
}

// GetRequiredRegionsOk returns a tuple with the RequiredRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) GetRequiredRegionsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.RequiredRegions) {
        return nil, false
    }
    return o.RequiredRegions, true
}

// HasRequiredRegions returns a boolean if a field has been set.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) HasRequiredRegions() bool {
    if o != nil && !utils.IsNil(o.RequiredRegions) {
        return true
    }

    return false
}

// SetRequiredRegions gets a reference to the given []string and assigns it to the RequiredRegions field.
func (o *Product202309GetGlobalCategoryRulesResponseDataManufacturer) SetRequiredRegions(v []string) {
    o.RequiredRegions = v
}

func (o Product202309GetGlobalCategoryRulesResponseDataManufacturer) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetGlobalCategoryRulesResponseDataManufacturer) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.IsRequired) {
        toSerialize["is_required"] = o.IsRequired
    }
    if !utils.IsNil(o.OptionalRegions) {
        toSerialize["optional_regions"] = o.OptionalRegions
    }
    if !utils.IsNil(o.RequiredRegions) {
        toSerialize["required_regions"] = o.RequiredRegions
    }
    return toSerialize, nil
}

type NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer struct {
	value *Product202309GetGlobalCategoryRulesResponseDataManufacturer
	isSet bool
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) Get() *Product202309GetGlobalCategoryRulesResponseDataManufacturer {
	return v.value
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) Set(val *Product202309GetGlobalCategoryRulesResponseDataManufacturer) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer(val *Product202309GetGlobalCategoryRulesResponseDataManufacturer) *NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer {
	return &NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer{value: val, isSet: true}
}

func (v NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetGlobalCategoryRulesResponseDataManufacturer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


