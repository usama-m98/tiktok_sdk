/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetBrandsResponseDataBrands type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetBrandsResponseDataBrands{}

// Product202309GetBrandsResponseDataBrands struct for Product202309GetBrandsResponseDataBrands
type Product202309GetBrandsResponseDataBrands struct {
    // A status to indicate whether the seller has obtained prior authorization to sell goods bearing the brand's trademark, name, or logo.  Possible values: - UNAUTHORIEZD - AUTHORIZED  **Note**: If the brand is unauthorized, check `is_t1_brand` to determine if you can use it during product creation.
    AuthorizedStatus *string `json:"authorized_status,omitempty"`
    // The availability of an **authorized brand** in the requested category. Possible values: - AVAILABLE - UNAVAILABLE  **Note**: Not applicable if you did not specify the category ID, or the brand is unauthorized.
    BrandStatus *string `json:"brand_status,omitempty"`
    // The brand ID.
    Id *string `json:"id,omitempty"`
    // A flag to indicate whether the brand is a T1 brand, which refers to internationally renowned brands that may have compliance risks and require sellers to obtain brand authorization.  **Note**: - You cannot create products with unauthorized T1 brands. - You can create products with unauthorized non-T1 brands, **but** the brand information will not appear on the product display page.  You can obtain authorization by submitting the required qualifications through TikTok Shop Seller Center > Qualification Center > Brand qualification.
    IsT1Brand *bool `json:"is_t1_brand,omitempty"`
    // The brand name.
    Name *string `json:"name,omitempty"`
}

// NewProduct202309GetBrandsResponseDataBrands instantiates a new Product202309GetBrandsResponseDataBrands object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetBrandsResponseDataBrands() *Product202309GetBrandsResponseDataBrands {
    this := Product202309GetBrandsResponseDataBrands{}
    return &this
}

// NewProduct202309GetBrandsResponseDataBrandsWithDefaults instantiates a new Product202309GetBrandsResponseDataBrands object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetBrandsResponseDataBrandsWithDefaults() *Product202309GetBrandsResponseDataBrands {
    this := Product202309GetBrandsResponseDataBrands{}
    return &this
}

// GetAuthorizedStatus returns the AuthorizedStatus field value if set, zero value otherwise.
func (o *Product202309GetBrandsResponseDataBrands) GetAuthorizedStatus() string {
    if o == nil || utils.IsNil(o.AuthorizedStatus) {
        var ret string
        return ret
    }
    return *o.AuthorizedStatus
}

// GetAuthorizedStatusOk returns a tuple with the AuthorizedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetBrandsResponseDataBrands) GetAuthorizedStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.AuthorizedStatus) {
        return nil, false
    }
    return o.AuthorizedStatus, true
}

// HasAuthorizedStatus returns a boolean if a field has been set.
func (o *Product202309GetBrandsResponseDataBrands) HasAuthorizedStatus() bool {
    if o != nil && !utils.IsNil(o.AuthorizedStatus) {
        return true
    }

    return false
}

// SetAuthorizedStatus gets a reference to the given string and assigns it to the AuthorizedStatus field.
func (o *Product202309GetBrandsResponseDataBrands) SetAuthorizedStatus(v string) {
    o.AuthorizedStatus = &v
}

// GetBrandStatus returns the BrandStatus field value if set, zero value otherwise.
func (o *Product202309GetBrandsResponseDataBrands) GetBrandStatus() string {
    if o == nil || utils.IsNil(o.BrandStatus) {
        var ret string
        return ret
    }
    return *o.BrandStatus
}

// GetBrandStatusOk returns a tuple with the BrandStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetBrandsResponseDataBrands) GetBrandStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.BrandStatus) {
        return nil, false
    }
    return o.BrandStatus, true
}

// HasBrandStatus returns a boolean if a field has been set.
func (o *Product202309GetBrandsResponseDataBrands) HasBrandStatus() bool {
    if o != nil && !utils.IsNil(o.BrandStatus) {
        return true
    }

    return false
}

// SetBrandStatus gets a reference to the given string and assigns it to the BrandStatus field.
func (o *Product202309GetBrandsResponseDataBrands) SetBrandStatus(v string) {
    o.BrandStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309GetBrandsResponseDataBrands) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetBrandsResponseDataBrands) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309GetBrandsResponseDataBrands) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309GetBrandsResponseDataBrands) SetId(v string) {
    o.Id = &v
}

// GetIsT1Brand returns the IsT1Brand field value if set, zero value otherwise.
func (o *Product202309GetBrandsResponseDataBrands) GetIsT1Brand() bool {
    if o == nil || utils.IsNil(o.IsT1Brand) {
        var ret bool
        return ret
    }
    return *o.IsT1Brand
}

// GetIsT1BrandOk returns a tuple with the IsT1Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetBrandsResponseDataBrands) GetIsT1BrandOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsT1Brand) {
        return nil, false
    }
    return o.IsT1Brand, true
}

// HasIsT1Brand returns a boolean if a field has been set.
func (o *Product202309GetBrandsResponseDataBrands) HasIsT1Brand() bool {
    if o != nil && !utils.IsNil(o.IsT1Brand) {
        return true
    }

    return false
}

// SetIsT1Brand gets a reference to the given bool and assigns it to the IsT1Brand field.
func (o *Product202309GetBrandsResponseDataBrands) SetIsT1Brand(v bool) {
    o.IsT1Brand = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309GetBrandsResponseDataBrands) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetBrandsResponseDataBrands) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309GetBrandsResponseDataBrands) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309GetBrandsResponseDataBrands) SetName(v string) {
    o.Name = &v
}

func (o Product202309GetBrandsResponseDataBrands) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetBrandsResponseDataBrands) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.AuthorizedStatus) {
        toSerialize["authorized_status"] = o.AuthorizedStatus
    }
    if !utils.IsNil(o.BrandStatus) {
        toSerialize["brand_status"] = o.BrandStatus
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsT1Brand) {
        toSerialize["is_t1_brand"] = o.IsT1Brand
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    return toSerialize, nil
}

type NullableProduct202309GetBrandsResponseDataBrands struct {
	value *Product202309GetBrandsResponseDataBrands
	isSet bool
}

func (v NullableProduct202309GetBrandsResponseDataBrands) Get() *Product202309GetBrandsResponseDataBrands {
	return v.value
}

func (v *NullableProduct202309GetBrandsResponseDataBrands) Set(val *Product202309GetBrandsResponseDataBrands) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetBrandsResponseDataBrands) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetBrandsResponseDataBrands) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetBrandsResponseDataBrands(val *Product202309GetBrandsResponseDataBrands) *NullableProduct202309GetBrandsResponseDataBrands {
	return &NullableProduct202309GetBrandsResponseDataBrands{value: val, isSet: true}
}

func (v NullableProduct202309GetBrandsResponseDataBrands) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetBrandsResponseDataBrands) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


