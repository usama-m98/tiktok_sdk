/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309DeactivateProductsResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309DeactivateProductsResponseData{}

// Product202309DeactivateProductsResponseData struct for Product202309DeactivateProductsResponseData
type Product202309DeactivateProductsResponseData struct {
    // The list of errors that occurred.
    Errors []Product202309DeactivateProductsResponseDataErrors `json:"errors,omitempty"`
}

// NewProduct202309DeactivateProductsResponseData instantiates a new Product202309DeactivateProductsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309DeactivateProductsResponseData() *Product202309DeactivateProductsResponseData {
    this := Product202309DeactivateProductsResponseData{}
    return &this
}

// NewProduct202309DeactivateProductsResponseDataWithDefaults instantiates a new Product202309DeactivateProductsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309DeactivateProductsResponseDataWithDefaults() *Product202309DeactivateProductsResponseData {
    this := Product202309DeactivateProductsResponseData{}
    return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *Product202309DeactivateProductsResponseData) GetErrors() []Product202309DeactivateProductsResponseDataErrors {
    if o == nil || utils.IsNil(o.Errors) {
        var ret []Product202309DeactivateProductsResponseDataErrors
        return ret
    }
    return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309DeactivateProductsResponseData) GetErrorsOk() ([]Product202309DeactivateProductsResponseDataErrors, bool) {
    if o == nil || utils.IsNil(o.Errors) {
        return nil, false
    }
    return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *Product202309DeactivateProductsResponseData) HasErrors() bool {
    if o != nil && !utils.IsNil(o.Errors) {
        return true
    }

    return false
}

// SetErrors gets a reference to the given []Product202309DeactivateProductsResponseDataErrors and assigns it to the Errors field.
func (o *Product202309DeactivateProductsResponseData) SetErrors(v []Product202309DeactivateProductsResponseDataErrors) {
    o.Errors = v
}

func (o Product202309DeactivateProductsResponseData) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309DeactivateProductsResponseData) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Errors) {
        toSerialize["errors"] = o.Errors
    }
    return toSerialize, nil
}

type NullableProduct202309DeactivateProductsResponseData struct {
	value *Product202309DeactivateProductsResponseData
	isSet bool
}

func (v NullableProduct202309DeactivateProductsResponseData) Get() *Product202309DeactivateProductsResponseData {
	return v.value
}

func (v *NullableProduct202309DeactivateProductsResponseData) Set(val *Product202309DeactivateProductsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309DeactivateProductsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309DeactivateProductsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309DeactivateProductsResponseData(val *Product202309DeactivateProductsResponseData) *NullableProduct202309DeactivateProductsResponseData {
	return &NullableProduct202309DeactivateProductsResponseData{value: val, isSet: true}
}

func (v NullableProduct202309DeactivateProductsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309DeactivateProductsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


