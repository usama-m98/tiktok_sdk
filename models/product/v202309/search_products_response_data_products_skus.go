/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309SearchProductsResponseDataProductsSkus type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309SearchProductsResponseDataProductsSkus{}

// Product202309SearchProductsResponseDataProductsSkus struct for Product202309SearchProductsResponseDataProductsSkus
type Product202309SearchProductsResponseDataProductsSkus struct {
    // The SKU ID generated by TikTok Shop.
    Id *string `json:"id,omitempty"`
    // SKU inventory information.
    Inventory []Product202309SearchProductsResponseDataProductsSkusInventory `json:"inventory,omitempty"`
    Price *Product202309SearchProductsResponseDataProductsSkusPrice `json:"price,omitempty"`
    // An internal code/name for managing SKUs, not visible to buyers. 
    SellerSku *string `json:"seller_sku,omitempty"`
}

// NewProduct202309SearchProductsResponseDataProductsSkus instantiates a new Product202309SearchProductsResponseDataProductsSkus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309SearchProductsResponseDataProductsSkus() *Product202309SearchProductsResponseDataProductsSkus {
    this := Product202309SearchProductsResponseDataProductsSkus{}
    return &this
}

// NewProduct202309SearchProductsResponseDataProductsSkusWithDefaults instantiates a new Product202309SearchProductsResponseDataProductsSkus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309SearchProductsResponseDataProductsSkusWithDefaults() *Product202309SearchProductsResponseDataProductsSkus {
    this := Product202309SearchProductsResponseDataProductsSkus{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309SearchProductsResponseDataProductsSkus) SetId(v string) {
    o.Id = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetInventory() []Product202309SearchProductsResponseDataProductsSkusInventory {
    if o == nil || utils.IsNil(o.Inventory) {
        var ret []Product202309SearchProductsResponseDataProductsSkusInventory
        return ret
    }
    return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetInventoryOk() ([]Product202309SearchProductsResponseDataProductsSkusInventory, bool) {
    if o == nil || utils.IsNil(o.Inventory) {
        return nil, false
    }
    return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) HasInventory() bool {
    if o != nil && !utils.IsNil(o.Inventory) {
        return true
    }

    return false
}

// SetInventory gets a reference to the given []Product202309SearchProductsResponseDataProductsSkusInventory and assigns it to the Inventory field.
func (o *Product202309SearchProductsResponseDataProductsSkus) SetInventory(v []Product202309SearchProductsResponseDataProductsSkusInventory) {
    o.Inventory = v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetPrice() Product202309SearchProductsResponseDataProductsSkusPrice {
    if o == nil || utils.IsNil(o.Price) {
        var ret Product202309SearchProductsResponseDataProductsSkusPrice
        return ret
    }
    return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetPriceOk() (*Product202309SearchProductsResponseDataProductsSkusPrice, bool) {
    if o == nil || utils.IsNil(o.Price) {
        return nil, false
    }
    return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) HasPrice() bool {
    if o != nil && !utils.IsNil(o.Price) {
        return true
    }

    return false
}

// SetPrice gets a reference to the given Product202309SearchProductsResponseDataProductsSkusPrice and assigns it to the Price field.
func (o *Product202309SearchProductsResponseDataProductsSkus) SetPrice(v Product202309SearchProductsResponseDataProductsSkusPrice) {
    o.Price = &v
}

// GetSellerSku returns the SellerSku field value if set, zero value otherwise.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetSellerSku() string {
    if o == nil || utils.IsNil(o.SellerSku) {
        var ret string
        return ret
    }
    return *o.SellerSku
}

// GetSellerSkuOk returns a tuple with the SellerSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) GetSellerSkuOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SellerSku) {
        return nil, false
    }
    return o.SellerSku, true
}

// HasSellerSku returns a boolean if a field has been set.
func (o *Product202309SearchProductsResponseDataProductsSkus) HasSellerSku() bool {
    if o != nil && !utils.IsNil(o.SellerSku) {
        return true
    }

    return false
}

// SetSellerSku gets a reference to the given string and assigns it to the SellerSku field.
func (o *Product202309SearchProductsResponseDataProductsSkus) SetSellerSku(v string) {
    o.SellerSku = &v
}

func (o Product202309SearchProductsResponseDataProductsSkus) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309SearchProductsResponseDataProductsSkus) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.Inventory) {
        toSerialize["inventory"] = o.Inventory
    }
    if !utils.IsNil(o.Price) {
        toSerialize["price"] = o.Price
    }
    if !utils.IsNil(o.SellerSku) {
        toSerialize["seller_sku"] = o.SellerSku
    }
    return toSerialize, nil
}

type NullableProduct202309SearchProductsResponseDataProductsSkus struct {
	value *Product202309SearchProductsResponseDataProductsSkus
	isSet bool
}

func (v NullableProduct202309SearchProductsResponseDataProductsSkus) Get() *Product202309SearchProductsResponseDataProductsSkus {
	return v.value
}

func (v *NullableProduct202309SearchProductsResponseDataProductsSkus) Set(val *Product202309SearchProductsResponseDataProductsSkus) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309SearchProductsResponseDataProductsSkus) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309SearchProductsResponseDataProductsSkus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309SearchProductsResponseDataProductsSkus(val *Product202309SearchProductsResponseDataProductsSkus) *NullableProduct202309SearchProductsResponseDataProductsSkus {
	return &NullableProduct202309SearchProductsResponseDataProductsSkus{value: val, isSet: true}
}

func (v NullableProduct202309SearchProductsResponseDataProductsSkus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309SearchProductsResponseDataProductsSkus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


