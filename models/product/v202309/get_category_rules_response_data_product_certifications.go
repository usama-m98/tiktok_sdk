/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202309GetCategoryRulesResponseDataProductCertifications type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetCategoryRulesResponseDataProductCertifications{}

// Product202309GetCategoryRulesResponseDataProductCertifications struct for Product202309GetCategoryRulesResponseDataProductCertifications
type Product202309GetCategoryRulesResponseDataProductCertifications struct {
    // Details about the certification documents that you must submit, including the content, format, and any other guidelines.
    DocumentDetails *string `json:"document_details,omitempty"`
    ExpirationDate *Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate `json:"expiration_date,omitempty"`
    // The ID to identify the type of certification required.
    Id *string `json:"id,omitempty"`
    // A flag to indicate if the certification is always required when creating or editing a product. - true: The certification is always required. - false: The certification is not required, or required only if certain conditions are met. Refer to `requirement_conditions` for the specific requirements.
    IsRequired *bool `json:"is_required,omitempty"`
    // The name of the certification type.
    Name *string `json:"name,omitempty"`
    // A list of conditions that determine if the certification is required based on the seller's inputs for a product attribute. If any of the conditions is met, the certification is required; otherwise, it is optional.  For example, there's a condition that states that the \"Safety Data Sheet (SDS) for flammable materials\" certification is required if the seller selects the value \"Yes\" for the attribute \"Flammable Liquid?\". For more scenario-based guidance on using this parameter, refer to the [Solution Guide - CAT-PRE-HAZMAT](https://partner.tiktokshop.com/openlearn/guide/usecase?parent_id=7256668359046153985).  Applicable only if `is_required=false`.
    RequirementConditions []Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions `json:"requirement_conditions,omitempty"`
    // The URL to view an image of the sample certification document.
    SampleImageUrl *string `json:"sample_image_url,omitempty"`
}

// NewProduct202309GetCategoryRulesResponseDataProductCertifications instantiates a new Product202309GetCategoryRulesResponseDataProductCertifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetCategoryRulesResponseDataProductCertifications() *Product202309GetCategoryRulesResponseDataProductCertifications {
    this := Product202309GetCategoryRulesResponseDataProductCertifications{}
    return &this
}

// NewProduct202309GetCategoryRulesResponseDataProductCertificationsWithDefaults instantiates a new Product202309GetCategoryRulesResponseDataProductCertifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetCategoryRulesResponseDataProductCertificationsWithDefaults() *Product202309GetCategoryRulesResponseDataProductCertifications {
    this := Product202309GetCategoryRulesResponseDataProductCertifications{}
    return &this
}

// GetDocumentDetails returns the DocumentDetails field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetDocumentDetails() string {
    if o == nil || utils.IsNil(o.DocumentDetails) {
        var ret string
        return ret
    }
    return *o.DocumentDetails
}

// GetDocumentDetailsOk returns a tuple with the DocumentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetDocumentDetailsOk() (*string, bool) {
    if o == nil || utils.IsNil(o.DocumentDetails) {
        return nil, false
    }
    return o.DocumentDetails, true
}

// HasDocumentDetails returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasDocumentDetails() bool {
    if o != nil && !utils.IsNil(o.DocumentDetails) {
        return true
    }

    return false
}

// SetDocumentDetails gets a reference to the given string and assigns it to the DocumentDetails field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetDocumentDetails(v string) {
    o.DocumentDetails = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetExpirationDate() Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate {
    if o == nil || utils.IsNil(o.ExpirationDate) {
        var ret Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate
        return ret
    }
    return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetExpirationDateOk() (*Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate, bool) {
    if o == nil || utils.IsNil(o.ExpirationDate) {
        return nil, false
    }
    return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasExpirationDate() bool {
    if o != nil && !utils.IsNil(o.ExpirationDate) {
        return true
    }

    return false
}

// SetExpirationDate gets a reference to the given Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate and assigns it to the ExpirationDate field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetExpirationDate(v Product202309GetCategoryRulesResponseDataProductCertificationsExpirationDate) {
    o.ExpirationDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetId(v string) {
    o.Id = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetIsRequired() bool {
    if o == nil || utils.IsNil(o.IsRequired) {
        var ret bool
        return ret
    }
    return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetIsRequiredOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsRequired) {
        return nil, false
    }
    return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasIsRequired() bool {
    if o != nil && !utils.IsNil(o.IsRequired) {
        return true
    }

    return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetIsRequired(v bool) {
    o.IsRequired = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetName(v string) {
    o.Name = &v
}

// GetRequirementConditions returns the RequirementConditions field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetRequirementConditions() []Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        var ret []Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions
        return ret
    }
    return o.RequirementConditions
}

// GetRequirementConditionsOk returns a tuple with the RequirementConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetRequirementConditionsOk() ([]Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions, bool) {
    if o == nil || utils.IsNil(o.RequirementConditions) {
        return nil, false
    }
    return o.RequirementConditions, true
}

// HasRequirementConditions returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasRequirementConditions() bool {
    if o != nil && !utils.IsNil(o.RequirementConditions) {
        return true
    }

    return false
}

// SetRequirementConditions gets a reference to the given []Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions and assigns it to the RequirementConditions field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetRequirementConditions(v []Product202309GetCategoryRulesResponseDataProductCertificationsRequirementConditions) {
    o.RequirementConditions = v
}

// GetSampleImageUrl returns the SampleImageUrl field value if set, zero value otherwise.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetSampleImageUrl() string {
    if o == nil || utils.IsNil(o.SampleImageUrl) {
        var ret string
        return ret
    }
    return *o.SampleImageUrl
}

// GetSampleImageUrlOk returns a tuple with the SampleImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) GetSampleImageUrlOk() (*string, bool) {
    if o == nil || utils.IsNil(o.SampleImageUrl) {
        return nil, false
    }
    return o.SampleImageUrl, true
}

// HasSampleImageUrl returns a boolean if a field has been set.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) HasSampleImageUrl() bool {
    if o != nil && !utils.IsNil(o.SampleImageUrl) {
        return true
    }

    return false
}

// SetSampleImageUrl gets a reference to the given string and assigns it to the SampleImageUrl field.
func (o *Product202309GetCategoryRulesResponseDataProductCertifications) SetSampleImageUrl(v string) {
    o.SampleImageUrl = &v
}

func (o Product202309GetCategoryRulesResponseDataProductCertifications) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetCategoryRulesResponseDataProductCertifications) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.DocumentDetails) {
        toSerialize["document_details"] = o.DocumentDetails
    }
    if !utils.IsNil(o.ExpirationDate) {
        toSerialize["expiration_date"] = o.ExpirationDate
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsRequired) {
        toSerialize["is_required"] = o.IsRequired
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }
    if !utils.IsNil(o.RequirementConditions) {
        toSerialize["requirement_conditions"] = o.RequirementConditions
    }
    if !utils.IsNil(o.SampleImageUrl) {
        toSerialize["sample_image_url"] = o.SampleImageUrl
    }
    return toSerialize, nil
}

type NullableProduct202309GetCategoryRulesResponseDataProductCertifications struct {
	value *Product202309GetCategoryRulesResponseDataProductCertifications
	isSet bool
}

func (v NullableProduct202309GetCategoryRulesResponseDataProductCertifications) Get() *Product202309GetCategoryRulesResponseDataProductCertifications {
	return v.value
}

func (v *NullableProduct202309GetCategoryRulesResponseDataProductCertifications) Set(val *Product202309GetCategoryRulesResponseDataProductCertifications) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetCategoryRulesResponseDataProductCertifications) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetCategoryRulesResponseDataProductCertifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetCategoryRulesResponseDataProductCertifications(val *Product202309GetCategoryRulesResponseDataProductCertifications) *NullableProduct202309GetCategoryRulesResponseDataProductCertifications {
	return &NullableProduct202309GetCategoryRulesResponseDataProductCertifications{value: val, isSet: true}
}

func (v NullableProduct202309GetCategoryRulesResponseDataProductCertifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetCategoryRulesResponseDataProductCertifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


