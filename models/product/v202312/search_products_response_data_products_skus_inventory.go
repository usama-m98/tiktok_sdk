/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202312

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202312SearchProductsResponseDataProductsSkusInventory type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202312SearchProductsResponseDataProductsSkusInventory{}

// Product202312SearchProductsResponseDataProductsSkusInventory struct for Product202312SearchProductsResponseDataProductsSkusInventory
type Product202312SearchProductsResponseDataProductsSkusInventory struct {
    // The total SKU quantity available in the warehouse.
    Quantity *int32 `json:"quantity,omitempty"`
    // The ID of the warehouse where the SKU is stored.  Retrieve details of the warehouse from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).
    WarehouseId *string `json:"warehouse_id,omitempty"`
}

// NewProduct202312SearchProductsResponseDataProductsSkusInventory instantiates a new Product202312SearchProductsResponseDataProductsSkusInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202312SearchProductsResponseDataProductsSkusInventory() *Product202312SearchProductsResponseDataProductsSkusInventory {
    this := Product202312SearchProductsResponseDataProductsSkusInventory{}
    return &this
}

// NewProduct202312SearchProductsResponseDataProductsSkusInventoryWithDefaults instantiates a new Product202312SearchProductsResponseDataProductsSkusInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202312SearchProductsResponseDataProductsSkusInventoryWithDefaults() *Product202312SearchProductsResponseDataProductsSkusInventory {
    this := Product202312SearchProductsResponseDataProductsSkusInventory{}
    return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) GetQuantity() int32 {
    if o == nil || utils.IsNil(o.Quantity) {
        var ret int32
        return ret
    }
    return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) GetQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.Quantity) {
        return nil, false
    }
    return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) HasQuantity() bool {
    if o != nil && !utils.IsNil(o.Quantity) {
        return true
    }

    return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) SetQuantity(v int32) {
    o.Quantity = &v
}

// GetWarehouseId returns the WarehouseId field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) GetWarehouseId() string {
    if o == nil || utils.IsNil(o.WarehouseId) {
        var ret string
        return ret
    }
    return *o.WarehouseId
}

// GetWarehouseIdOk returns a tuple with the WarehouseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) GetWarehouseIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.WarehouseId) {
        return nil, false
    }
    return o.WarehouseId, true
}

// HasWarehouseId returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) HasWarehouseId() bool {
    if o != nil && !utils.IsNil(o.WarehouseId) {
        return true
    }

    return false
}

// SetWarehouseId gets a reference to the given string and assigns it to the WarehouseId field.
func (o *Product202312SearchProductsResponseDataProductsSkusInventory) SetWarehouseId(v string) {
    o.WarehouseId = &v
}

func (o Product202312SearchProductsResponseDataProductsSkusInventory) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202312SearchProductsResponseDataProductsSkusInventory) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Quantity) {
        toSerialize["quantity"] = o.Quantity
    }
    if !utils.IsNil(o.WarehouseId) {
        toSerialize["warehouse_id"] = o.WarehouseId
    }
    return toSerialize, nil
}

type NullableProduct202312SearchProductsResponseDataProductsSkusInventory struct {
	value *Product202312SearchProductsResponseDataProductsSkusInventory
	isSet bool
}

func (v NullableProduct202312SearchProductsResponseDataProductsSkusInventory) Get() *Product202312SearchProductsResponseDataProductsSkusInventory {
	return v.value
}

func (v *NullableProduct202312SearchProductsResponseDataProductsSkusInventory) Set(val *Product202312SearchProductsResponseDataProductsSkusInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202312SearchProductsResponseDataProductsSkusInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202312SearchProductsResponseDataProductsSkusInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202312SearchProductsResponseDataProductsSkusInventory(val *Product202312SearchProductsResponseDataProductsSkusInventory) *NullableProduct202312SearchProductsResponseDataProductsSkusInventory {
	return &NullableProduct202312SearchProductsResponseDataProductsSkusInventory{value: val, isSet: true}
}

func (v NullableProduct202312SearchProductsResponseDataProductsSkusInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202312SearchProductsResponseDataProductsSkusInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


