/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202312

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202312SearchProductsResponseDataProducts type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202312SearchProductsResponseDataProducts{}

// Product202312SearchProductsResponseDataProducts struct for Product202312SearchProductsResponseDataProducts
type Product202312SearchProductsResponseDataProducts struct {
    Audit *Product202312SearchProductsResponseDataProductsAudit `json:"audit,omitempty"`
    // The time when the product is created. Unix timestamp.
    CreateTime *int64 `json:"create_time,omitempty"`
    // The product ID generated by TikTok Shop.
    Id *string `json:"id,omitempty"`
    // The current status of the product on platforms that are natively integrated with TikTok Shop (e.g. TOKOPEDIA).  **Note**: For Indonesia sellers, if you did not set the listing platform as `TOKOPEDIA` when creating or editing a product, this will be omitted.
    IntegratedPlatformStatuses []Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses `json:"integrated_platform_statuses,omitempty"`
    // A flag indicating whether the product is not for sale. True: Not for sale. False: For sale.
    IsNotForSale *bool `json:"is_not_for_sale,omitempty"`
    // The current quality tier of this product listing. The quality tier of a product listing depends on the quality of the content in its product fields such as the title, image, attributes etc.  Possible values: - POOR - FAIR - GOOD  **Note**: Available only for the US market.
    ListingQualityTier *string `json:"listing_quality_tier,omitempty"`
    // The reasons why synchronizing of global product information to local products failed.  Only applicable for cross-border sellers.
    ProductSyncFailReasons []string `json:"product_sync_fail_reasons,omitempty"`
    // Recommended categories for the product based on the product title, description, and images.
    RecommendedCategories []Product202312SearchProductsResponseDataProductsRecommendedCategories `json:"recommended_categories,omitempty"`
    // The regions where the product is sold. Possible values: - BR: Brazil - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MX: Mexico - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam
    SalesRegions []string `json:"sales_regions,omitempty"`
    // A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.
    Skus []Product202312SearchProductsResponseDataProductsSkus `json:"skus,omitempty"`
    // The product status in TikTok Shop. Possible values:  - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED  **Note**: For Indonesia sellers, if you did not set the listing platform as `TIKTOK_SHOP` when creating or editing a product, this will be omitted.
    Status *string `json:"status,omitempty"`
    // The product title.
    Title *string `json:"title,omitempty"`
    // The time when the product is last updated. Unix timestamp.
    UpdateTime *int64 `json:"update_time,omitempty"`
}

// NewProduct202312SearchProductsResponseDataProducts instantiates a new Product202312SearchProductsResponseDataProducts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202312SearchProductsResponseDataProducts() *Product202312SearchProductsResponseDataProducts {
    this := Product202312SearchProductsResponseDataProducts{}
    return &this
}

// NewProduct202312SearchProductsResponseDataProductsWithDefaults instantiates a new Product202312SearchProductsResponseDataProducts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202312SearchProductsResponseDataProductsWithDefaults() *Product202312SearchProductsResponseDataProducts {
    this := Product202312SearchProductsResponseDataProducts{}
    return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetAudit() Product202312SearchProductsResponseDataProductsAudit {
    if o == nil || utils.IsNil(o.Audit) {
        var ret Product202312SearchProductsResponseDataProductsAudit
        return ret
    }
    return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetAuditOk() (*Product202312SearchProductsResponseDataProductsAudit, bool) {
    if o == nil || utils.IsNil(o.Audit) {
        return nil, false
    }
    return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasAudit() bool {
    if o != nil && !utils.IsNil(o.Audit) {
        return true
    }

    return false
}

// SetAudit gets a reference to the given Product202312SearchProductsResponseDataProductsAudit and assigns it to the Audit field.
func (o *Product202312SearchProductsResponseDataProducts) SetAudit(v Product202312SearchProductsResponseDataProductsAudit) {
    o.Audit = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetCreateTime() int64 {
    if o == nil || utils.IsNil(o.CreateTime) {
        var ret int64
        return ret
    }
    return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetCreateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.CreateTime) {
        return nil, false
    }
    return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasCreateTime() bool {
    if o != nil && !utils.IsNil(o.CreateTime) {
        return true
    }

    return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *Product202312SearchProductsResponseDataProducts) SetCreateTime(v int64) {
    o.CreateTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202312SearchProductsResponseDataProducts) SetId(v string) {
    o.Id = &v
}

// GetIntegratedPlatformStatuses returns the IntegratedPlatformStatuses field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetIntegratedPlatformStatuses() []Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses {
    if o == nil || utils.IsNil(o.IntegratedPlatformStatuses) {
        var ret []Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses
        return ret
    }
    return o.IntegratedPlatformStatuses
}

// GetIntegratedPlatformStatusesOk returns a tuple with the IntegratedPlatformStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetIntegratedPlatformStatusesOk() ([]Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses, bool) {
    if o == nil || utils.IsNil(o.IntegratedPlatformStatuses) {
        return nil, false
    }
    return o.IntegratedPlatformStatuses, true
}

// HasIntegratedPlatformStatuses returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasIntegratedPlatformStatuses() bool {
    if o != nil && !utils.IsNil(o.IntegratedPlatformStatuses) {
        return true
    }

    return false
}

// SetIntegratedPlatformStatuses gets a reference to the given []Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses and assigns it to the IntegratedPlatformStatuses field.
func (o *Product202312SearchProductsResponseDataProducts) SetIntegratedPlatformStatuses(v []Product202312SearchProductsResponseDataProductsIntegratedPlatformStatuses) {
    o.IntegratedPlatformStatuses = v
}

// GetIsNotForSale returns the IsNotForSale field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetIsNotForSale() bool {
    if o == nil || utils.IsNil(o.IsNotForSale) {
        var ret bool
        return ret
    }
    return *o.IsNotForSale
}

// GetIsNotForSaleOk returns a tuple with the IsNotForSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetIsNotForSaleOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsNotForSale) {
        return nil, false
    }
    return o.IsNotForSale, true
}

// HasIsNotForSale returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasIsNotForSale() bool {
    if o != nil && !utils.IsNil(o.IsNotForSale) {
        return true
    }

    return false
}

// SetIsNotForSale gets a reference to the given bool and assigns it to the IsNotForSale field.
func (o *Product202312SearchProductsResponseDataProducts) SetIsNotForSale(v bool) {
    o.IsNotForSale = &v
}

// GetListingQualityTier returns the ListingQualityTier field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetListingQualityTier() string {
    if o == nil || utils.IsNil(o.ListingQualityTier) {
        var ret string
        return ret
    }
    return *o.ListingQualityTier
}

// GetListingQualityTierOk returns a tuple with the ListingQualityTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetListingQualityTierOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ListingQualityTier) {
        return nil, false
    }
    return o.ListingQualityTier, true
}

// HasListingQualityTier returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasListingQualityTier() bool {
    if o != nil && !utils.IsNil(o.ListingQualityTier) {
        return true
    }

    return false
}

// SetListingQualityTier gets a reference to the given string and assigns it to the ListingQualityTier field.
func (o *Product202312SearchProductsResponseDataProducts) SetListingQualityTier(v string) {
    o.ListingQualityTier = &v
}

// GetProductSyncFailReasons returns the ProductSyncFailReasons field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetProductSyncFailReasons() []string {
    if o == nil || utils.IsNil(o.ProductSyncFailReasons) {
        var ret []string
        return ret
    }
    return o.ProductSyncFailReasons
}

// GetProductSyncFailReasonsOk returns a tuple with the ProductSyncFailReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetProductSyncFailReasonsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.ProductSyncFailReasons) {
        return nil, false
    }
    return o.ProductSyncFailReasons, true
}

// HasProductSyncFailReasons returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasProductSyncFailReasons() bool {
    if o != nil && !utils.IsNil(o.ProductSyncFailReasons) {
        return true
    }

    return false
}

// SetProductSyncFailReasons gets a reference to the given []string and assigns it to the ProductSyncFailReasons field.
func (o *Product202312SearchProductsResponseDataProducts) SetProductSyncFailReasons(v []string) {
    o.ProductSyncFailReasons = v
}

// GetRecommendedCategories returns the RecommendedCategories field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetRecommendedCategories() []Product202312SearchProductsResponseDataProductsRecommendedCategories {
    if o == nil || utils.IsNil(o.RecommendedCategories) {
        var ret []Product202312SearchProductsResponseDataProductsRecommendedCategories
        return ret
    }
    return o.RecommendedCategories
}

// GetRecommendedCategoriesOk returns a tuple with the RecommendedCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetRecommendedCategoriesOk() ([]Product202312SearchProductsResponseDataProductsRecommendedCategories, bool) {
    if o == nil || utils.IsNil(o.RecommendedCategories) {
        return nil, false
    }
    return o.RecommendedCategories, true
}

// HasRecommendedCategories returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasRecommendedCategories() bool {
    if o != nil && !utils.IsNil(o.RecommendedCategories) {
        return true
    }

    return false
}

// SetRecommendedCategories gets a reference to the given []Product202312SearchProductsResponseDataProductsRecommendedCategories and assigns it to the RecommendedCategories field.
func (o *Product202312SearchProductsResponseDataProducts) SetRecommendedCategories(v []Product202312SearchProductsResponseDataProductsRecommendedCategories) {
    o.RecommendedCategories = v
}

// GetSalesRegions returns the SalesRegions field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetSalesRegions() []string {
    if o == nil || utils.IsNil(o.SalesRegions) {
        var ret []string
        return ret
    }
    return o.SalesRegions
}

// GetSalesRegionsOk returns a tuple with the SalesRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetSalesRegionsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.SalesRegions) {
        return nil, false
    }
    return o.SalesRegions, true
}

// HasSalesRegions returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasSalesRegions() bool {
    if o != nil && !utils.IsNil(o.SalesRegions) {
        return true
    }

    return false
}

// SetSalesRegions gets a reference to the given []string and assigns it to the SalesRegions field.
func (o *Product202312SearchProductsResponseDataProducts) SetSalesRegions(v []string) {
    o.SalesRegions = v
}

// GetSkus returns the Skus field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetSkus() []Product202312SearchProductsResponseDataProductsSkus {
    if o == nil || utils.IsNil(o.Skus) {
        var ret []Product202312SearchProductsResponseDataProductsSkus
        return ret
    }
    return o.Skus
}

// GetSkusOk returns a tuple with the Skus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetSkusOk() ([]Product202312SearchProductsResponseDataProductsSkus, bool) {
    if o == nil || utils.IsNil(o.Skus) {
        return nil, false
    }
    return o.Skus, true
}

// HasSkus returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasSkus() bool {
    if o != nil && !utils.IsNil(o.Skus) {
        return true
    }

    return false
}

// SetSkus gets a reference to the given []Product202312SearchProductsResponseDataProductsSkus and assigns it to the Skus field.
func (o *Product202312SearchProductsResponseDataProducts) SetSkus(v []Product202312SearchProductsResponseDataProductsSkus) {
    o.Skus = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Product202312SearchProductsResponseDataProducts) SetStatus(v string) {
    o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetTitle() string {
    if o == nil || utils.IsNil(o.Title) {
        var ret string
        return ret
    }
    return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetTitleOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Title) {
        return nil, false
    }
    return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasTitle() bool {
    if o != nil && !utils.IsNil(o.Title) {
        return true
    }

    return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Product202312SearchProductsResponseDataProducts) SetTitle(v string) {
    o.Title = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *Product202312SearchProductsResponseDataProducts) GetUpdateTime() int64 {
    if o == nil || utils.IsNil(o.UpdateTime) {
        var ret int64
        return ret
    }
    return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202312SearchProductsResponseDataProducts) GetUpdateTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.UpdateTime) {
        return nil, false
    }
    return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *Product202312SearchProductsResponseDataProducts) HasUpdateTime() bool {
    if o != nil && !utils.IsNil(o.UpdateTime) {
        return true
    }

    return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *Product202312SearchProductsResponseDataProducts) SetUpdateTime(v int64) {
    o.UpdateTime = &v
}

func (o Product202312SearchProductsResponseDataProducts) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202312SearchProductsResponseDataProducts) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Audit) {
        toSerialize["audit"] = o.Audit
    }
    if !utils.IsNil(o.CreateTime) {
        toSerialize["create_time"] = o.CreateTime
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IntegratedPlatformStatuses) {
        toSerialize["integrated_platform_statuses"] = o.IntegratedPlatformStatuses
    }
    if !utils.IsNil(o.IsNotForSale) {
        toSerialize["is_not_for_sale"] = o.IsNotForSale
    }
    if !utils.IsNil(o.ListingQualityTier) {
        toSerialize["listing_quality_tier"] = o.ListingQualityTier
    }
    if !utils.IsNil(o.ProductSyncFailReasons) {
        toSerialize["product_sync_fail_reasons"] = o.ProductSyncFailReasons
    }
    if !utils.IsNil(o.RecommendedCategories) {
        toSerialize["recommended_categories"] = o.RecommendedCategories
    }
    if !utils.IsNil(o.SalesRegions) {
        toSerialize["sales_regions"] = o.SalesRegions
    }
    if !utils.IsNil(o.Skus) {
        toSerialize["skus"] = o.Skus
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    if !utils.IsNil(o.Title) {
        toSerialize["title"] = o.Title
    }
    if !utils.IsNil(o.UpdateTime) {
        toSerialize["update_time"] = o.UpdateTime
    }
    return toSerialize, nil
}

type NullableProduct202312SearchProductsResponseDataProducts struct {
	value *Product202312SearchProductsResponseDataProducts
	isSet bool
}

func (v NullableProduct202312SearchProductsResponseDataProducts) Get() *Product202312SearchProductsResponseDataProducts {
	return v.value
}

func (v *NullableProduct202312SearchProductsResponseDataProducts) Set(val *Product202312SearchProductsResponseDataProducts) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202312SearchProductsResponseDataProducts) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202312SearchProductsResponseDataProducts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202312SearchProductsResponseDataProducts(val *Product202312SearchProductsResponseDataProducts) *NullableProduct202312SearchProductsResponseDataProducts {
	return &NullableProduct202312SearchProductsResponseDataProducts{value: val, isSet: true}
}

func (v NullableProduct202312SearchProductsResponseDataProducts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202312SearchProductsResponseDataProducts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


