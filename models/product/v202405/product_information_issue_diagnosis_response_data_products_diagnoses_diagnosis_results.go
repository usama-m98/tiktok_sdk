/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202405

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults{}

// Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults struct for Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults
type Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults struct {
    // A machine-readable code that represents an identified issue. Refer to [Listing quality diagnosis](https://partner.tiktokshop.com/docv2/page/66eb8f5c6f2da702e96a49dd) for the full list of diagnosed issues and the corresponding recommendations.
    Code *string `json:"code,omitempty"`
    // The recommendation for resolving the identified issue, returned in the default locale language of the shop. Refer to [Listing quality diagnosis](https://partner.tiktokshop.com/docv2/page/66eb8f5c6f2da702e96a49dd) for the full list of recommendations.
    HowToSolve *string `json:"how_to_solve,omitempty"`
    // The listing quality tier you can reach by implementing the recommendation. Possible values: - FAIR - GOOD  **Note**:  - To reach a higher tier, you must implement all recommendations from the destination tier and all preceding tiers. For example, a product will reach the \"GOOD\" tier once all \"FAIR\" and \"GOOD\" recommendations are addressed or implemented. - Available only for the US market.
    QualityTier *string `json:"quality_tier,omitempty"`
}

// NewProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults instantiates a new Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults() *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults {
    this := Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults{}
    return &this
}

// NewProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResultsWithDefaults instantiates a new Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResultsWithDefaults() *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults {
    this := Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults{}
    return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetCode() string {
    if o == nil || utils.IsNil(o.Code) {
        var ret string
        return ret
    }
    return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetCodeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Code) {
        return nil, false
    }
    return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) HasCode() bool {
    if o != nil && !utils.IsNil(o.Code) {
        return true
    }

    return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) SetCode(v string) {
    o.Code = &v
}

// GetHowToSolve returns the HowToSolve field value if set, zero value otherwise.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetHowToSolve() string {
    if o == nil || utils.IsNil(o.HowToSolve) {
        var ret string
        return ret
    }
    return *o.HowToSolve
}

// GetHowToSolveOk returns a tuple with the HowToSolve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetHowToSolveOk() (*string, bool) {
    if o == nil || utils.IsNil(o.HowToSolve) {
        return nil, false
    }
    return o.HowToSolve, true
}

// HasHowToSolve returns a boolean if a field has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) HasHowToSolve() bool {
    if o != nil && !utils.IsNil(o.HowToSolve) {
        return true
    }

    return false
}

// SetHowToSolve gets a reference to the given string and assigns it to the HowToSolve field.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) SetHowToSolve(v string) {
    o.HowToSolve = &v
}

// GetQualityTier returns the QualityTier field value if set, zero value otherwise.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetQualityTier() string {
    if o == nil || utils.IsNil(o.QualityTier) {
        var ret string
        return ret
    }
    return *o.QualityTier
}

// GetQualityTierOk returns a tuple with the QualityTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) GetQualityTierOk() (*string, bool) {
    if o == nil || utils.IsNil(o.QualityTier) {
        return nil, false
    }
    return o.QualityTier, true
}

// HasQualityTier returns a boolean if a field has been set.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) HasQualityTier() bool {
    if o != nil && !utils.IsNil(o.QualityTier) {
        return true
    }

    return false
}

// SetQualityTier gets a reference to the given string and assigns it to the QualityTier field.
func (o *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) SetQualityTier(v string) {
    o.QualityTier = &v
}

func (o Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Code) {
        toSerialize["code"] = o.Code
    }
    if !utils.IsNil(o.HowToSolve) {
        toSerialize["how_to_solve"] = o.HowToSolve
    }
    if !utils.IsNil(o.QualityTier) {
        toSerialize["quality_tier"] = o.QualityTier
    }
    return toSerialize, nil
}

type NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults struct {
	value *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults
	isSet bool
}

func (v NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) Get() *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults {
	return v.value
}

func (v *NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) Set(val *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults(val *Product202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) *NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults {
	return &NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults{value: val, isSet: true}
}

func (v NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202405ProductInformationIssueDiagnosisResponseDataProductsDiagnosesDiagnosisResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


