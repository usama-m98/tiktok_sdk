/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fulfillment_v202309

import (
    "encoding/json"
    "tiktokshop/open/sdk_golang/utils"
)

            // checks if the Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes{}

// Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes struct for Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes
type Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes struct {
    // Whether an order can be split: - `true`: The order can be split into multiple packages. - `false`: The order cannot be split into multiple packages.
    CanSplit *bool `json:"can_split,omitempty"`
    // Whether an order must be split: - true: The order must be split into multiple packages. - false: The order does not have to be split into multiple packages.
    MustSplit *bool `json:"must_split,omitempty"`
    // The reason why the order must be split. Only return this field when must_split = true.
    MustSplitReasons []Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons `json:"must_split_reasons,omitempty"`
    // TikTok Shop order ID.
    OrderId *string `json:"order_id,omitempty"`
    // The reason why the order cannot be split. Only return this field when `can_split = false`.
    Reason *string `json:"reason,omitempty"`
}

// NewFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes instantiates a new Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes() *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes {
    this := Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes{}
    return &this
}

// NewFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesWithDefaults instantiates a new Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesWithDefaults() *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes {
    this := Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes{}
    return &this
}

// GetCanSplit returns the CanSplit field value if set, zero value otherwise.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetCanSplit() bool {
    if o == nil || utils.IsNil(o.CanSplit) {
        var ret bool
        return ret
    }
    return *o.CanSplit
}

// GetCanSplitOk returns a tuple with the CanSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetCanSplitOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.CanSplit) {
        return nil, false
    }
    return o.CanSplit, true
}

// HasCanSplit returns a boolean if a field has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) HasCanSplit() bool {
    if o != nil && !utils.IsNil(o.CanSplit) {
        return true
    }

    return false
}

// SetCanSplit gets a reference to the given bool and assigns it to the CanSplit field.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) SetCanSplit(v bool) {
    o.CanSplit = &v
}

// GetMustSplit returns the MustSplit field value if set, zero value otherwise.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetMustSplit() bool {
    if o == nil || utils.IsNil(o.MustSplit) {
        var ret bool
        return ret
    }
    return *o.MustSplit
}

// GetMustSplitOk returns a tuple with the MustSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetMustSplitOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.MustSplit) {
        return nil, false
    }
    return o.MustSplit, true
}

// HasMustSplit returns a boolean if a field has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) HasMustSplit() bool {
    if o != nil && !utils.IsNil(o.MustSplit) {
        return true
    }

    return false
}

// SetMustSplit gets a reference to the given bool and assigns it to the MustSplit field.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) SetMustSplit(v bool) {
    o.MustSplit = &v
}

// GetMustSplitReasons returns the MustSplitReasons field value if set, zero value otherwise.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetMustSplitReasons() []Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons {
    if o == nil || utils.IsNil(o.MustSplitReasons) {
        var ret []Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons
        return ret
    }
    return o.MustSplitReasons
}

// GetMustSplitReasonsOk returns a tuple with the MustSplitReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetMustSplitReasonsOk() ([]Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons, bool) {
    if o == nil || utils.IsNil(o.MustSplitReasons) {
        return nil, false
    }
    return o.MustSplitReasons, true
}

// HasMustSplitReasons returns a boolean if a field has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) HasMustSplitReasons() bool {
    if o != nil && !utils.IsNil(o.MustSplitReasons) {
        return true
    }

    return false
}

// SetMustSplitReasons gets a reference to the given []Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons and assigns it to the MustSplitReasons field.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) SetMustSplitReasons(v []Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributesMustSplitReasons) {
    o.MustSplitReasons = v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetOrderId() string {
    if o == nil || utils.IsNil(o.OrderId) {
        var ret string
        return ret
    }
    return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.OrderId) {
        return nil, false
    }
    return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) HasOrderId() bool {
    if o != nil && !utils.IsNil(o.OrderId) {
        return true
    }

    return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) SetOrderId(v string) {
    o.OrderId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetReason() string {
    if o == nil || utils.IsNil(o.Reason) {
        var ret string
        return ret
    }
    return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) GetReasonOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Reason) {
        return nil, false
    }
    return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) HasReason() bool {
    if o != nil && !utils.IsNil(o.Reason) {
        return true
    }

    return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) SetReason(v string) {
    o.Reason = &v
}

func (o Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.CanSplit) {
        toSerialize["can_split"] = o.CanSplit
    }
    if !utils.IsNil(o.MustSplit) {
        toSerialize["must_split"] = o.MustSplit
    }
    if !utils.IsNil(o.MustSplitReasons) {
        toSerialize["must_split_reasons"] = o.MustSplitReasons
    }
    if !utils.IsNil(o.OrderId) {
        toSerialize["order_id"] = o.OrderId
    }
    if !utils.IsNil(o.Reason) {
        toSerialize["reason"] = o.Reason
    }
    return toSerialize, nil
}

type NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes struct {
	value *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes
	isSet bool
}

func (v NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) Get() *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes {
	return v.value
}

func (v *NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) Set(val *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes(val *Fulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) *NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes {
	return &NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes{value: val, isSet: true}
}

func (v NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFulfillment202309GetOrderSplitAttributesResponseDataSplitAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


