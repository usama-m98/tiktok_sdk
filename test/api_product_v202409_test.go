/*
tiktok shop openapi

Testing ProductV202409APIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sdk_golang

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "tiktokshop/open/sdk_golang/apis"
)

func Test_sdk_golang_ProductV202409APIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProductV202409APIService Product202409ComplianceManufacturersManufacturerIdPartialEditPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var manufacturerId string

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceManufacturersManufacturerIdPartialEditPost(context.Background(), manufacturerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductV202409APIService Product202409ComplianceManufacturersPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceManufacturersPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductV202409APIService Product202409ComplianceManufacturersSearchPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceManufacturersSearchPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductV202409APIService Product202409ComplianceResponsiblePersonsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceResponsiblePersonsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductV202409APIService Product202409ComplianceResponsiblePersonsResponsiblePersonIdPartialEditPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var responsiblePersonId string

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceResponsiblePersonsResponsiblePersonIdPartialEditPost(context.Background(), responsiblePersonId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductV202409APIService Product202409ComplianceResponsiblePersonsSearchPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProductV202409API.Product202409ComplianceResponsiblePersonsSearchPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
